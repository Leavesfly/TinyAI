{"knowledge_relations":[{"id":2172,"source_id":"298aa383-0400-4ad9-a8f5-d63a72148a74","target_id":"a9b79efa-dd33-48f3-acc4-dfed18e83294","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 298aa383-0400-4ad9-a8f5-d63a72148a74 -\u003e a9b79efa-dd33-48f3-acc4-dfed18e83294","gmt_create":"2025-10-02T12:52:33.574263+08:00","gmt_modified":"2025-10-02T12:52:33.574263+08:00"},{"id":2173,"source_id":"298aa383-0400-4ad9-a8f5-d63a72148a74","target_id":"179990d1-9ecd-4775-b590-fe83f1899f94","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 298aa383-0400-4ad9-a8f5-d63a72148a74 -\u003e 179990d1-9ecd-4775-b590-fe83f1899f94","gmt_create":"2025-10-02T12:52:33.57685+08:00","gmt_modified":"2025-10-02T12:52:33.57685+08:00"},{"id":2174,"source_id":"298aa383-0400-4ad9-a8f5-d63a72148a74","target_id":"160ddd72-0981-4a47-a6a5-ec274017bf39","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 298aa383-0400-4ad9-a8f5-d63a72148a74 -\u003e 160ddd72-0981-4a47-a6a5-ec274017bf39","gmt_create":"2025-10-02T12:52:33.577833+08:00","gmt_modified":"2025-10-02T12:52:33.577833+08:00"},{"id":2175,"source_id":"298aa383-0400-4ad9-a8f5-d63a72148a74","target_id":"cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 298aa383-0400-4ad9-a8f5-d63a72148a74 -\u003e cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f","gmt_create":"2025-10-02T12:52:33.579264+08:00","gmt_modified":"2025-10-02T12:52:33.579264+08:00"},{"id":2176,"source_id":"5c3fbdc5-6af2-4685-b589-ef7a87e312be","target_id":"11e98dd0-9b16-4fc5-86b0-6f4647c8b318","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5c3fbdc5-6af2-4685-b589-ef7a87e312be -\u003e 11e98dd0-9b16-4fc5-86b0-6f4647c8b318","gmt_create":"2025-10-02T12:52:33.58085+08:00","gmt_modified":"2025-10-02T12:52:33.58085+08:00"},{"id":2177,"source_id":"5c3fbdc5-6af2-4685-b589-ef7a87e312be","target_id":"f2559ab0-a8b9-4dd1-be7f-a02419c72d72","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5c3fbdc5-6af2-4685-b589-ef7a87e312be -\u003e f2559ab0-a8b9-4dd1-be7f-a02419c72d72","gmt_create":"2025-10-02T12:52:33.582123+08:00","gmt_modified":"2025-10-02T12:52:33.582123+08:00"},{"id":2178,"source_id":"5c3fbdc5-6af2-4685-b589-ef7a87e312be","target_id":"7c1c9875-2c78-4749-a920-5b24cf399908","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5c3fbdc5-6af2-4685-b589-ef7a87e312be -\u003e 7c1c9875-2c78-4749-a920-5b24cf399908","gmt_create":"2025-10-02T12:52:33.583155+08:00","gmt_modified":"2025-10-02T12:52:33.583155+08:00"},{"id":2179,"source_id":"5c3fbdc5-6af2-4685-b589-ef7a87e312be","target_id":"855ba608-5255-4afa-a050-1d16e7dd86b8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5c3fbdc5-6af2-4685-b589-ef7a87e312be -\u003e 855ba608-5255-4afa-a050-1d16e7dd86b8","gmt_create":"2025-10-02T12:52:33.584029+08:00","gmt_modified":"2025-10-02T12:52:33.584029+08:00"},{"id":2180,"source_id":"4f8c5c48-acd1-4190-9366-c68b0d4646c8","target_id":"597c366c-4a12-436b-8993-e2ca00d985c3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4f8c5c48-acd1-4190-9366-c68b0d4646c8 -\u003e 597c366c-4a12-436b-8993-e2ca00d985c3","gmt_create":"2025-10-02T12:52:33.584661+08:00","gmt_modified":"2025-10-02T12:52:33.584661+08:00"},{"id":2181,"source_id":"4f8c5c48-acd1-4190-9366-c68b0d4646c8","target_id":"5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4f8c5c48-acd1-4190-9366-c68b0d4646c8 -\u003e 5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7","gmt_create":"2025-10-02T12:52:33.585651+08:00","gmt_modified":"2025-10-02T12:52:33.585651+08:00"},{"id":2182,"source_id":"4f8c5c48-acd1-4190-9366-c68b0d4646c8","target_id":"34c0722c-65a7-42d1-be16-c496a1f168be","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4f8c5c48-acd1-4190-9366-c68b0d4646c8 -\u003e 34c0722c-65a7-42d1-be16-c496a1f168be","gmt_create":"2025-10-02T12:52:33.586191+08:00","gmt_modified":"2025-10-02T12:52:33.586191+08:00"},{"id":2183,"source_id":"4f8c5c48-acd1-4190-9366-c68b0d4646c8","target_id":"11d2879d-0fe4-4961-99b1-609042ebdf6c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4f8c5c48-acd1-4190-9366-c68b0d4646c8 -\u003e 11d2879d-0fe4-4961-99b1-609042ebdf6c","gmt_create":"2025-10-02T12:52:33.587076+08:00","gmt_modified":"2025-10-02T12:52:33.587076+08:00"},{"id":2184,"source_id":"4f8c5c48-acd1-4190-9366-c68b0d4646c8","target_id":"006efb72-c394-444d-929d-41022fa35286","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4f8c5c48-acd1-4190-9366-c68b0d4646c8 -\u003e 006efb72-c394-444d-929d-41022fa35286","gmt_create":"2025-10-02T12:52:33.587586+08:00","gmt_modified":"2025-10-02T12:52:33.587586+08:00"},{"id":2185,"source_id":"4f8c5c48-acd1-4190-9366-c68b0d4646c8","target_id":"3225345c-d851-4677-a096-f59f24c52628","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4f8c5c48-acd1-4190-9366-c68b0d4646c8 -\u003e 3225345c-d851-4677-a096-f59f24c52628","gmt_create":"2025-10-02T12:52:33.593568+08:00","gmt_modified":"2025-10-02T12:52:33.593568+08:00"},{"id":2186,"source_id":"6b171ec4-6848-455d-b9ae-26fa393eb94d","target_id":"d9509ee0-6d3f-4520-9f3a-d4f080abf9ec","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6b171ec4-6848-455d-b9ae-26fa393eb94d -\u003e d9509ee0-6d3f-4520-9f3a-d4f080abf9ec","gmt_create":"2025-10-02T12:52:33.594714+08:00","gmt_modified":"2025-10-02T12:52:33.594714+08:00"},{"id":2187,"source_id":"6b171ec4-6848-455d-b9ae-26fa393eb94d","target_id":"b8b55751-4e70-4d36-97fc-d85e4e5fbf99","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6b171ec4-6848-455d-b9ae-26fa393eb94d -\u003e b8b55751-4e70-4d36-97fc-d85e4e5fbf99","gmt_create":"2025-10-02T12:52:33.595572+08:00","gmt_modified":"2025-10-02T12:52:33.595572+08:00"},{"id":2188,"source_id":"6b171ec4-6848-455d-b9ae-26fa393eb94d","target_id":"cca0a1ab-a868-41d5-9b2e-d6dc34916442","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6b171ec4-6848-455d-b9ae-26fa393eb94d -\u003e cca0a1ab-a868-41d5-9b2e-d6dc34916442","gmt_create":"2025-10-02T12:52:33.597544+08:00","gmt_modified":"2025-10-02T12:52:33.597544+08:00"},{"id":2189,"source_id":"6b171ec4-6848-455d-b9ae-26fa393eb94d","target_id":"13b16da0-d503-439e-ba9f-41455e1ec39b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6b171ec4-6848-455d-b9ae-26fa393eb94d -\u003e 13b16da0-d503-439e-ba9f-41455e1ec39b","gmt_create":"2025-10-02T12:52:33.598371+08:00","gmt_modified":"2025-10-02T12:52:33.598371+08:00"},{"id":2190,"source_id":"6b171ec4-6848-455d-b9ae-26fa393eb94d","target_id":"a1677ee1-37c1-452c-bf91-1da54e464595","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6b171ec4-6848-455d-b9ae-26fa393eb94d -\u003e a1677ee1-37c1-452c-bf91-1da54e464595","gmt_create":"2025-10-02T12:52:33.599148+08:00","gmt_modified":"2025-10-02T12:52:33.599148+08:00"},{"id":2191,"source_id":"72de52ec-20d2-4ae1-89d0-32ed6355a42d","target_id":"9366fb62-d411-40c8-a1f7-4633a826dc35","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 72de52ec-20d2-4ae1-89d0-32ed6355a42d -\u003e 9366fb62-d411-40c8-a1f7-4633a826dc35","gmt_create":"2025-10-02T12:52:33.600227+08:00","gmt_modified":"2025-10-02T12:52:33.600227+08:00"},{"id":2192,"source_id":"72de52ec-20d2-4ae1-89d0-32ed6355a42d","target_id":"840506bb-8eb3-4a95-9b48-dad231229e7e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 72de52ec-20d2-4ae1-89d0-32ed6355a42d -\u003e 840506bb-8eb3-4a95-9b48-dad231229e7e","gmt_create":"2025-10-02T12:52:33.601464+08:00","gmt_modified":"2025-10-02T12:52:33.601464+08:00"},{"id":2193,"source_id":"72de52ec-20d2-4ae1-89d0-32ed6355a42d","target_id":"76c59857-dec4-40e6-b50a-7b9d93414346","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 72de52ec-20d2-4ae1-89d0-32ed6355a42d -\u003e 76c59857-dec4-40e6-b50a-7b9d93414346","gmt_create":"2025-10-02T12:52:33.602021+08:00","gmt_modified":"2025-10-02T12:52:33.602021+08:00"},{"id":2194,"source_id":"72de52ec-20d2-4ae1-89d0-32ed6355a42d","target_id":"bdff3f64-47cb-458d-b345-b9943b15cc3d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 72de52ec-20d2-4ae1-89d0-32ed6355a42d -\u003e bdff3f64-47cb-458d-b345-b9943b15cc3d","gmt_create":"2025-10-02T12:52:33.602852+08:00","gmt_modified":"2025-10-02T12:52:33.602852+08:00"},{"id":2195,"source_id":"b28cf580-81f2-4126-bf59-4635cbf4b6d0","target_id":"07f795e3-df6c-490e-894e-12a5a70bd2fb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b28cf580-81f2-4126-bf59-4635cbf4b6d0 -\u003e 07f795e3-df6c-490e-894e-12a5a70bd2fb","gmt_create":"2025-10-02T12:52:33.603538+08:00","gmt_modified":"2025-10-02T12:52:33.603538+08:00"},{"id":2196,"source_id":"b28cf580-81f2-4126-bf59-4635cbf4b6d0","target_id":"c45f1076-58b5-47d0-ac18-ee5679d54535","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b28cf580-81f2-4126-bf59-4635cbf4b6d0 -\u003e c45f1076-58b5-47d0-ac18-ee5679d54535","gmt_create":"2025-10-02T12:52:33.604317+08:00","gmt_modified":"2025-10-02T12:52:33.604317+08:00"},{"id":2197,"source_id":"b28cf580-81f2-4126-bf59-4635cbf4b6d0","target_id":"f782435f-fbfa-4c68-b190-fda65752582d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b28cf580-81f2-4126-bf59-4635cbf4b6d0 -\u003e f782435f-fbfa-4c68-b190-fda65752582d","gmt_create":"2025-10-02T12:52:33.604946+08:00","gmt_modified":"2025-10-02T12:52:33.604946+08:00"},{"id":2198,"source_id":"87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22","target_id":"47438e99-1f8d-4376-848f-62900ab1ec2d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22 -\u003e 47438e99-1f8d-4376-848f-62900ab1ec2d","gmt_create":"2025-10-02T12:52:33.605934+08:00","gmt_modified":"2025-10-02T12:52:33.605934+08:00"},{"id":2199,"source_id":"87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22","target_id":"ce516ed7-f178-4f0e-af66-994a10e28c82","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22 -\u003e ce516ed7-f178-4f0e-af66-994a10e28c82","gmt_create":"2025-10-02T12:52:33.607409+08:00","gmt_modified":"2025-10-02T12:52:33.607409+08:00"},{"id":2200,"source_id":"87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22","target_id":"f9ac0f1b-a507-445b-a2be-0d417055abbe","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22 -\u003e f9ac0f1b-a507-445b-a2be-0d417055abbe","gmt_create":"2025-10-02T12:52:33.608151+08:00","gmt_modified":"2025-10-02T12:52:33.608151+08:00"},{"id":2201,"source_id":"87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22","target_id":"d19029c7-cd35-4fb8-9a8c-fe7cb14303e0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22 -\u003e d19029c7-cd35-4fb8-9a8c-fe7cb14303e0","gmt_create":"2025-10-02T12:52:33.609023+08:00","gmt_modified":"2025-10-02T12:52:33.609023+08:00"},{"id":2202,"source_id":"a9b79efa-dd33-48f3-acc4-dfed18e83294","target_id":"2b16e164-1403-4d33-8822-7738f382b27c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a9b79efa-dd33-48f3-acc4-dfed18e83294 -\u003e 2b16e164-1403-4d33-8822-7738f382b27c","gmt_create":"2025-10-02T12:52:33.609716+08:00","gmt_modified":"2025-10-02T12:52:33.609716+08:00"},{"id":2203,"source_id":"a9b79efa-dd33-48f3-acc4-dfed18e83294","target_id":"5e496730-137a-460c-911d-3f7d7d266843","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a9b79efa-dd33-48f3-acc4-dfed18e83294 -\u003e 5e496730-137a-460c-911d-3f7d7d266843","gmt_create":"2025-10-02T12:52:33.610272+08:00","gmt_modified":"2025-10-02T12:52:33.610272+08:00"},{"id":2204,"source_id":"a9b79efa-dd33-48f3-acc4-dfed18e83294","target_id":"1b183f86-858a-4b62-a3f0-7b4f73c912cb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a9b79efa-dd33-48f3-acc4-dfed18e83294 -\u003e 1b183f86-858a-4b62-a3f0-7b4f73c912cb","gmt_create":"2025-10-02T12:52:33.610836+08:00","gmt_modified":"2025-10-02T12:52:33.610836+08:00"},{"id":2205,"source_id":"a9b79efa-dd33-48f3-acc4-dfed18e83294","target_id":"7e82492b-d484-4c89-a117-142841ff0e7c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a9b79efa-dd33-48f3-acc4-dfed18e83294 -\u003e 7e82492b-d484-4c89-a117-142841ff0e7c","gmt_create":"2025-10-02T12:52:33.611374+08:00","gmt_modified":"2025-10-02T12:52:33.611374+08:00"},{"id":2206,"source_id":"a9b79efa-dd33-48f3-acc4-dfed18e83294","target_id":"68728517-45ca-4962-9189-8b3e3a50ef7a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a9b79efa-dd33-48f3-acc4-dfed18e83294 -\u003e 68728517-45ca-4962-9189-8b3e3a50ef7a","gmt_create":"2025-10-02T12:52:33.612163+08:00","gmt_modified":"2025-10-02T12:52:33.612163+08:00"},{"id":2207,"source_id":"179990d1-9ecd-4775-b590-fe83f1899f94","target_id":"a78f4b19-5b5f-4df0-98b3-bbc812f173fb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 179990d1-9ecd-4775-b590-fe83f1899f94 -\u003e a78f4b19-5b5f-4df0-98b3-bbc812f173fb","gmt_create":"2025-10-02T12:52:33.613208+08:00","gmt_modified":"2025-10-02T12:52:33.613208+08:00"},{"id":2208,"source_id":"179990d1-9ecd-4775-b590-fe83f1899f94","target_id":"2545dc0b-2e08-4252-a183-ffa72ebda9f5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 179990d1-9ecd-4775-b590-fe83f1899f94 -\u003e 2545dc0b-2e08-4252-a183-ffa72ebda9f5","gmt_create":"2025-10-02T12:52:33.614522+08:00","gmt_modified":"2025-10-02T12:52:33.614522+08:00"},{"id":2209,"source_id":"179990d1-9ecd-4775-b590-fe83f1899f94","target_id":"badce31c-6cf8-42b3-b4d1-5f8422785f0b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 179990d1-9ecd-4775-b590-fe83f1899f94 -\u003e badce31c-6cf8-42b3-b4d1-5f8422785f0b","gmt_create":"2025-10-02T12:52:33.615126+08:00","gmt_modified":"2025-10-02T12:52:33.615126+08:00"},{"id":2210,"source_id":"179990d1-9ecd-4775-b590-fe83f1899f94","target_id":"f45435cd-fed6-45d7-8c18-dfb8e5b82e3e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 179990d1-9ecd-4775-b590-fe83f1899f94 -\u003e f45435cd-fed6-45d7-8c18-dfb8e5b82e3e","gmt_create":"2025-10-02T12:52:33.615709+08:00","gmt_modified":"2025-10-02T12:52:33.615709+08:00"},{"id":2211,"source_id":"ce516ed7-f178-4f0e-af66-994a10e28c82","target_id":"e4160320-002e-469f-8146-76abf5c42289","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce516ed7-f178-4f0e-af66-994a10e28c82 -\u003e e4160320-002e-469f-8146-76abf5c42289","gmt_create":"2025-10-02T12:52:33.616582+08:00","gmt_modified":"2025-10-02T12:52:33.616582+08:00"},{"id":2212,"source_id":"ce516ed7-f178-4f0e-af66-994a10e28c82","target_id":"f5f6dc33-7edb-4253-9801-ed09c2844643","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce516ed7-f178-4f0e-af66-994a10e28c82 -\u003e f5f6dc33-7edb-4253-9801-ed09c2844643","gmt_create":"2025-10-02T12:52:33.620511+08:00","gmt_modified":"2025-10-02T12:52:33.620511+08:00"},{"id":2213,"source_id":"ce516ed7-f178-4f0e-af66-994a10e28c82","target_id":"ac866d85-8de0-48d2-af33-9f92ca27ab22","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce516ed7-f178-4f0e-af66-994a10e28c82 -\u003e ac866d85-8de0-48d2-af33-9f92ca27ab22","gmt_create":"2025-10-02T12:52:33.623195+08:00","gmt_modified":"2025-10-02T12:52:33.623195+08:00"},{"id":2214,"source_id":"ce516ed7-f178-4f0e-af66-994a10e28c82","target_id":"f2849602-0df3-4ea5-ba25-0dece65ed154","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce516ed7-f178-4f0e-af66-994a10e28c82 -\u003e f2849602-0df3-4ea5-ba25-0dece65ed154","gmt_create":"2025-10-02T12:52:33.623764+08:00","gmt_modified":"2025-10-02T12:52:33.623764+08:00"},{"id":2215,"source_id":"ce516ed7-f178-4f0e-af66-994a10e28c82","target_id":"a4a78c3b-28e8-451f-b5cb-484f3714d3f3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce516ed7-f178-4f0e-af66-994a10e28c82 -\u003e a4a78c3b-28e8-451f-b5cb-484f3714d3f3","gmt_create":"2025-10-02T12:52:33.624392+08:00","gmt_modified":"2025-10-02T12:52:33.624392+08:00"},{"id":2216,"source_id":"5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7","target_id":"9a902ce0-7682-4d9e-b199-1edee60d5306","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7 -\u003e 9a902ce0-7682-4d9e-b199-1edee60d5306","gmt_create":"2025-10-02T12:52:33.624973+08:00","gmt_modified":"2025-10-02T12:52:33.624973+08:00"},{"id":2217,"source_id":"5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7","target_id":"c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7 -\u003e c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1","gmt_create":"2025-10-02T12:52:33.625556+08:00","gmt_modified":"2025-10-02T12:52:33.625556+08:00"},{"id":2218,"source_id":"5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7","target_id":"29f7472b-e6fb-4340-a55c-127ffdac5379","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7 -\u003e 29f7472b-e6fb-4340-a55c-127ffdac5379","gmt_create":"2025-10-02T12:52:33.626323+08:00","gmt_modified":"2025-10-02T12:52:33.626324+08:00"},{"id":2219,"source_id":"160ddd72-0981-4a47-a6a5-ec274017bf39","target_id":"25e8ab99-d55d-40ae-bed0-c6d6552c50dd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 160ddd72-0981-4a47-a6a5-ec274017bf39 -\u003e 25e8ab99-d55d-40ae-bed0-c6d6552c50dd","gmt_create":"2025-10-02T12:52:33.626935+08:00","gmt_modified":"2025-10-02T12:52:33.626935+08:00"},{"id":2220,"source_id":"160ddd72-0981-4a47-a6a5-ec274017bf39","target_id":"d51e40f8-029f-46b0-9931-3ea744196f42","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 160ddd72-0981-4a47-a6a5-ec274017bf39 -\u003e d51e40f8-029f-46b0-9931-3ea744196f42","gmt_create":"2025-10-02T12:52:33.627493+08:00","gmt_modified":"2025-10-02T12:52:33.627493+08:00"},{"id":2221,"source_id":"160ddd72-0981-4a47-a6a5-ec274017bf39","target_id":"24116316-13d7-4068-928d-c30ea4298448","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 160ddd72-0981-4a47-a6a5-ec274017bf39 -\u003e 24116316-13d7-4068-928d-c30ea4298448","gmt_create":"2025-10-02T12:52:33.628056+08:00","gmt_modified":"2025-10-02T12:52:33.628056+08:00"},{"id":2222,"source_id":"f9ac0f1b-a507-445b-a2be-0d417055abbe","target_id":"8ed29e3d-8b2b-4b18-bad4-4f3217dbee88","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f9ac0f1b-a507-445b-a2be-0d417055abbe -\u003e 8ed29e3d-8b2b-4b18-bad4-4f3217dbee88","gmt_create":"2025-10-02T12:52:33.628838+08:00","gmt_modified":"2025-10-02T12:52:33.628838+08:00"},{"id":2223,"source_id":"f9ac0f1b-a507-445b-a2be-0d417055abbe","target_id":"3737819b-2a6e-4932-a0bb-09e8d3ab91d0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f9ac0f1b-a507-445b-a2be-0d417055abbe -\u003e 3737819b-2a6e-4932-a0bb-09e8d3ab91d0","gmt_create":"2025-10-02T12:52:33.631089+08:00","gmt_modified":"2025-10-02T12:52:33.631089+08:00"},{"id":2224,"source_id":"f9ac0f1b-a507-445b-a2be-0d417055abbe","target_id":"6502c054-59ab-42ce-8ff7-f0ac501be7fd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f9ac0f1b-a507-445b-a2be-0d417055abbe -\u003e 6502c054-59ab-42ce-8ff7-f0ac501be7fd","gmt_create":"2025-10-02T12:52:33.632189+08:00","gmt_modified":"2025-10-02T12:52:33.632189+08:00"},{"id":2225,"source_id":"f9ac0f1b-a507-445b-a2be-0d417055abbe","target_id":"e6b5be6d-b59f-4774-a405-dafa9d2a5eb6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f9ac0f1b-a507-445b-a2be-0d417055abbe -\u003e e6b5be6d-b59f-4774-a405-dafa9d2a5eb6","gmt_create":"2025-10-02T12:52:33.632684+08:00","gmt_modified":"2025-10-02T12:52:33.632685+08:00"},{"id":2226,"source_id":"34c0722c-65a7-42d1-be16-c496a1f168be","target_id":"868b419e-5eab-4491-8c29-87ef2aee34aa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 34c0722c-65a7-42d1-be16-c496a1f168be -\u003e 868b419e-5eab-4491-8c29-87ef2aee34aa","gmt_create":"2025-10-02T12:52:33.633251+08:00","gmt_modified":"2025-10-02T12:52:33.633251+08:00"},{"id":2227,"source_id":"34c0722c-65a7-42d1-be16-c496a1f168be","target_id":"a2a60778-dae1-4330-914c-46956ec56f82","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 34c0722c-65a7-42d1-be16-c496a1f168be -\u003e a2a60778-dae1-4330-914c-46956ec56f82","gmt_create":"2025-10-02T12:52:33.634067+08:00","gmt_modified":"2025-10-02T12:52:33.634067+08:00"},{"id":2228,"source_id":"34c0722c-65a7-42d1-be16-c496a1f168be","target_id":"aaa71efb-fb5b-4222-9c16-abfd7192fbd5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 34c0722c-65a7-42d1-be16-c496a1f168be -\u003e aaa71efb-fb5b-4222-9c16-abfd7192fbd5","gmt_create":"2025-10-02T12:52:33.634547+08:00","gmt_modified":"2025-10-02T12:52:33.634547+08:00"},{"id":2229,"source_id":"34c0722c-65a7-42d1-be16-c496a1f168be","target_id":"e09ce701-c894-4b63-a1e0-e8f99e63efa3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 34c0722c-65a7-42d1-be16-c496a1f168be -\u003e e09ce701-c894-4b63-a1e0-e8f99e63efa3","gmt_create":"2025-10-02T12:52:33.635015+08:00","gmt_modified":"2025-10-02T12:52:33.635015+08:00"},{"id":2230,"source_id":"cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f","target_id":"6592d8d0-1463-4899-9164-1800eb8d8542","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f -\u003e 6592d8d0-1463-4899-9164-1800eb8d8542","gmt_create":"2025-10-02T12:52:33.635524+08:00","gmt_modified":"2025-10-02T12:52:33.635524+08:00"},{"id":2231,"source_id":"cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f","target_id":"da9fdf67-d280-4086-8222-8be9a2382848","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f -\u003e da9fdf67-d280-4086-8222-8be9a2382848","gmt_create":"2025-10-02T12:52:33.636138+08:00","gmt_modified":"2025-10-02T12:52:33.636138+08:00"},{"id":2232,"source_id":"cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f","target_id":"e1922f5b-8f71-4808-9281-65b09d8a67ed","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f -\u003e e1922f5b-8f71-4808-9281-65b09d8a67ed","gmt_create":"2025-10-02T12:52:33.636734+08:00","gmt_modified":"2025-10-02T12:52:33.636734+08:00"},{"id":2233,"source_id":"da9fdf67-d280-4086-8222-8be9a2382848","target_id":"2988790a-2656-4516-be93-eb9053439eb9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: da9fdf67-d280-4086-8222-8be9a2382848 -\u003e 2988790a-2656-4516-be93-eb9053439eb9","gmt_create":"2025-10-02T12:52:33.638052+08:00","gmt_modified":"2025-10-02T12:52:33.638052+08:00"},{"id":2234,"source_id":"da9fdf67-d280-4086-8222-8be9a2382848","target_id":"8514c6e5-599c-4c4d-9bba-4d1d2beeeff7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: da9fdf67-d280-4086-8222-8be9a2382848 -\u003e 8514c6e5-599c-4c4d-9bba-4d1d2beeeff7","gmt_create":"2025-10-02T12:52:33.639776+08:00","gmt_modified":"2025-10-02T12:52:33.639776+08:00"},{"id":2235,"source_id":"c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1","target_id":"cb18f32d-f2f5-49e4-9aec-2afee803f408","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1 -\u003e cb18f32d-f2f5-49e4-9aec-2afee803f408","gmt_create":"2025-10-02T12:52:33.640398+08:00","gmt_modified":"2025-10-02T12:52:33.640398+08:00"},{"id":2236,"source_id":"c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1","target_id":"c019c48b-3e47-4a75-977a-13aade659151","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1 -\u003e c019c48b-3e47-4a75-977a-13aade659151","gmt_create":"2025-10-02T12:52:33.640831+08:00","gmt_modified":"2025-10-02T12:52:33.640832+08:00"},{"id":2237,"source_id":"c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1","target_id":"743c297d-3243-454d-a41d-010d91c231b8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1 -\u003e 743c297d-3243-454d-a41d-010d91c231b8","gmt_create":"2025-10-02T12:52:33.641302+08:00","gmt_modified":"2025-10-02T12:52:33.641302+08:00"},{"id":2238,"source_id":"c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1","target_id":"d7aed1d1-7b7b-488b-9542-4c2cad9e2bf5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1 -\u003e d7aed1d1-7b7b-488b-9542-4c2cad9e2bf5","gmt_create":"2025-10-02T12:52:33.641971+08:00","gmt_modified":"2025-10-02T12:52:33.641971+08:00"},{"id":2239,"source_id":"c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1","target_id":"f89ef412-c265-45e5-b138-0524ff490e99","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1 -\u003e f89ef412-c265-45e5-b138-0524ff490e99","gmt_create":"2025-10-02T12:52:33.64251+08:00","gmt_modified":"2025-10-02T12:52:33.64251+08:00"},{"id":2240,"source_id":"6502c054-59ab-42ce-8ff7-f0ac501be7fd","target_id":"637c8491-8a55-4f63-aaa3-ab78bf087b1c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6502c054-59ab-42ce-8ff7-f0ac501be7fd -\u003e 637c8491-8a55-4f63-aaa3-ab78bf087b1c","gmt_create":"2025-10-02T12:52:33.643183+08:00","gmt_modified":"2025-10-02T12:52:33.643183+08:00"},{"id":2241,"source_id":"6502c054-59ab-42ce-8ff7-f0ac501be7fd","target_id":"238dde87-4350-49c3-864d-5ad6ea3411db","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6502c054-59ab-42ce-8ff7-f0ac501be7fd -\u003e 238dde87-4350-49c3-864d-5ad6ea3411db","gmt_create":"2025-10-02T12:52:33.643723+08:00","gmt_modified":"2025-10-02T12:52:33.643723+08:00"},{"id":2242,"source_id":"6502c054-59ab-42ce-8ff7-f0ac501be7fd","target_id":"36805423-b96c-4113-a5d6-9346710c10d2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6502c054-59ab-42ce-8ff7-f0ac501be7fd -\u003e 36805423-b96c-4113-a5d6-9346710c10d2","gmt_create":"2025-10-02T12:52:33.644182+08:00","gmt_modified":"2025-10-02T12:52:33.644182+08:00"},{"id":2243,"source_id":"6502c054-59ab-42ce-8ff7-f0ac501be7fd","target_id":"2e3786f8-43d0-46de-ad56-d3d4c7938529","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6502c054-59ab-42ce-8ff7-f0ac501be7fd -\u003e 2e3786f8-43d0-46de-ad56-d3d4c7938529","gmt_create":"2025-10-02T12:52:33.644678+08:00","gmt_modified":"2025-10-02T12:52:33.644678+08:00"},{"id":2244,"source_id":"ac866d85-8de0-48d2-af33-9f92ca27ab22","target_id":"33594bf2-4838-4db8-be62-b613045f67bf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ac866d85-8de0-48d2-af33-9f92ca27ab22 -\u003e 33594bf2-4838-4db8-be62-b613045f67bf","gmt_create":"2025-10-02T12:52:33.645164+08:00","gmt_modified":"2025-10-02T12:52:33.645164+08:00"},{"id":2245,"source_id":"ac866d85-8de0-48d2-af33-9f92ca27ab22","target_id":"0f5e1123-13ab-4b90-8cf1-9fd952e0bd08","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ac866d85-8de0-48d2-af33-9f92ca27ab22 -\u003e 0f5e1123-13ab-4b90-8cf1-9fd952e0bd08","gmt_create":"2025-10-02T12:52:33.645652+08:00","gmt_modified":"2025-10-02T12:52:33.645652+08:00"},{"id":2246,"source_id":"29f7472b-e6fb-4340-a55c-127ffdac5379","target_id":"c6287e87-3acf-4f03-aaa0-ddc064cb8970","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 29f7472b-e6fb-4340-a55c-127ffdac5379 -\u003e c6287e87-3acf-4f03-aaa0-ddc064cb8970","gmt_create":"2025-10-02T12:52:33.646132+08:00","gmt_modified":"2025-10-02T12:52:33.646132+08:00"},{"id":2247,"source_id":"29f7472b-e6fb-4340-a55c-127ffdac5379","target_id":"3a4e515c-808b-4bb4-b1cf-48673c53b3b5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 29f7472b-e6fb-4340-a55c-127ffdac5379 -\u003e 3a4e515c-808b-4bb4-b1cf-48673c53b3b5","gmt_create":"2025-10-02T12:52:33.646561+08:00","gmt_modified":"2025-10-02T12:52:33.646561+08:00"},{"id":2248,"source_id":"29f7472b-e6fb-4340-a55c-127ffdac5379","target_id":"7ba748e9-3f53-4c75-af67-0ca09a48cac7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 29f7472b-e6fb-4340-a55c-127ffdac5379 -\u003e 7ba748e9-3f53-4c75-af67-0ca09a48cac7","gmt_create":"2025-10-02T12:52:33.646965+08:00","gmt_modified":"2025-10-02T12:52:33.646965+08:00"},{"id":2249,"source_id":"e6b5be6d-b59f-4774-a405-dafa9d2a5eb6","target_id":"1b786381-f1da-409e-9627-b593a0b6e9ee","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e6b5be6d-b59f-4774-a405-dafa9d2a5eb6 -\u003e 1b786381-f1da-409e-9627-b593a0b6e9ee","gmt_create":"2025-10-02T12:52:33.647527+08:00","gmt_modified":"2025-10-02T12:52:33.647527+08:00"},{"id":2250,"source_id":"e6b5be6d-b59f-4774-a405-dafa9d2a5eb6","target_id":"c42790f4-4d09-408e-98d1-5de567d8f7e7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e6b5be6d-b59f-4774-a405-dafa9d2a5eb6 -\u003e c42790f4-4d09-408e-98d1-5de567d8f7e7","gmt_create":"2025-10-02T12:52:33.64794+08:00","gmt_modified":"2025-10-02T12:52:33.64794+08:00"},{"id":2251,"source_id":"e6b5be6d-b59f-4774-a405-dafa9d2a5eb6","target_id":"e2b5690c-b021-47fd-9ae0-38d134668ad4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e6b5be6d-b59f-4774-a405-dafa9d2a5eb6 -\u003e e2b5690c-b021-47fd-9ae0-38d134668ad4","gmt_create":"2025-10-02T12:52:33.648364+08:00","gmt_modified":"2025-10-02T12:52:33.648364+08:00"},{"id":2252,"source_id":"e6b5be6d-b59f-4774-a405-dafa9d2a5eb6","target_id":"9989887b-bfff-4ace-9681-1edcd56e1cd1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e6b5be6d-b59f-4774-a405-dafa9d2a5eb6 -\u003e 9989887b-bfff-4ace-9681-1edcd56e1cd1","gmt_create":"2025-10-02T12:52:33.648807+08:00","gmt_modified":"2025-10-02T12:52:33.648807+08:00"},{"id":2253,"source_id":"e6b5be6d-b59f-4774-a405-dafa9d2a5eb6","target_id":"1bc2ad46-5c6c-47d8-9d56-1313d5329458","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e6b5be6d-b59f-4774-a405-dafa9d2a5eb6 -\u003e 1bc2ad46-5c6c-47d8-9d56-1313d5329458","gmt_create":"2025-10-02T12:52:33.649304+08:00","gmt_modified":"2025-10-02T12:52:33.649304+08:00"},{"id":2254,"source_id":"a4a78c3b-28e8-451f-b5cb-484f3714d3f3","target_id":"1dbae50b-9d98-4a93-ae26-078526fc0235","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a4a78c3b-28e8-451f-b5cb-484f3714d3f3 -\u003e 1dbae50b-9d98-4a93-ae26-078526fc0235","gmt_create":"2025-10-02T12:52:33.649832+08:00","gmt_modified":"2025-10-02T12:52:33.649832+08:00"},{"id":2255,"source_id":"a4a78c3b-28e8-451f-b5cb-484f3714d3f3","target_id":"41fb0093-8a5d-45dc-a406-a9bf56b58dac","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a4a78c3b-28e8-451f-b5cb-484f3714d3f3 -\u003e 41fb0093-8a5d-45dc-a406-a9bf56b58dac","gmt_create":"2025-10-02T12:52:33.650376+08:00","gmt_modified":"2025-10-02T12:52:33.650376+08:00"},{"id":2256,"source_id":"a4a78c3b-28e8-451f-b5cb-484f3714d3f3","target_id":"3be14428-cb7f-466a-82e2-f347ea05933f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a4a78c3b-28e8-451f-b5cb-484f3714d3f3 -\u003e 3be14428-cb7f-466a-82e2-f347ea05933f","gmt_create":"2025-10-02T12:52:33.650932+08:00","gmt_modified":"2025-10-02T12:52:33.650932+08:00"},{"id":2257,"source_id":"a4a78c3b-28e8-451f-b5cb-484f3714d3f3","target_id":"9689d495-502f-43c1-803a-4d15b5b488e1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a4a78c3b-28e8-451f-b5cb-484f3714d3f3 -\u003e 9689d495-502f-43c1-803a-4d15b5b488e1","gmt_create":"2025-10-02T12:52:33.651388+08:00","gmt_modified":"2025-10-02T12:52:33.651388+08:00"}],"wiki_catalogs":[{"id":"9b593268-92d1-4f62-8450-057f9a02399f","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"项目概述","description":"project-overview","prompt":"创建全面的内容，重点介绍TinyAI项目的核心目标、设计理念和整体架构。解释该项目作为一个纯Java开发的深度学习框架的定位，涵盖从底层张量运算到高级AI智能体系统的完整技术栈。详细说明其在教育、研究和生产环境中的应用场景。结合代码库结构，阐述各模块之间的依赖关系与分层架构。提供项目快速入门指引，包括核心功能演示和典型使用流程。使用项目中的实际示例（如AgentDemo、GPT2Example）展示框架能力。为初学者提供清晰的学习路径建议，并为经验开发者指出扩展和定制的关键点。","progress_status":"completed","dependent_files":"README.md","gmt_create":"2025-10-02T11:54:33.683347+08:00","gmt_modified":"2025-10-02T12:00:27.483173+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02elJtBUgH0Ns0veIx1WPtM9wwkxI+/XAqHLxJLlHB8wV7f+ZSFsWmYrjwHaKSwENxBxN1ucZGW6XlNSs2MVdc8o81dHE6Xi9yxQ6cvUeNEyy9B24H3gd32GxGlLDUIz/zT/oEv6JrN3BKGHdeJF2K04C78E+4Z+R7/r1dbBrcesbITZ1my/ys6/REHmVor+WgRWDOnesyeFhS5rBq4AE+mItKZ41nzhjEhVTfThvXmMmugBGDhYTqYYroXNdKB0NMlCVLpcX5Udv/Tlxxm4/C0620DLEuIkOj1BefJm2gPaokviucWBf7LDWAVNkfW/LTykUjG2mrZXkjfD9F6Z2cW/OjH6vpcKvP30Sw15QxRuYTe9B167RJMzgf6HHtZV7OMIm+zeXSY63yfqdpMXh04Idnosds93wo7YREJCkLcvWhLGSTu1J64ngA2qnt1GMPmnLb61KFTxSghq036iAwvBG1UpkLUK0MZutb3AHwWZjlPZtBzxpZf24chXgBptQjgrUxkbKbSWGTbMyE4aCeOBxhNnhrXoXAivv05+m9hNYR99H3dGejWpkH3IyegYEjAxhyn6VNKoGlGrM/E3G0YPlM+P5f6bgAwQzeau2C5oCituggtINiGkAxf9g801iHRs2I1SUt0Od3PeAi2uZ4aMVeq5mbf4dGN6hKeOrSDAEqGEhdDIySBtYj30017RtbqmzXBP5OxfrLNSa6pPlv3oJAF7BLChtcCCuVEVDfDeWuisU3jzBGFLbP8a9mGPAkj7dE+EUtFVi9y7CEOTkJUlUfE+1bE78txsqMxCk7OE5E4+PFG3ju+qk6EsqxapzvxayQcXrCQWySz3ATvi+1dIAlj0Y+lxEwbPEsJKYccIABvaaBLXwuVbtC0GM8BiZswoKQPfxxiSuyjlgDgTz1Iz5kHYgugvtd5A5tNufYXHeEBRc3w4ktfYBf9A5lM/ue8r01wwbL1H666z+rDvqyxxxW1r5FtXuQvpPNMKTpvoJaY/E8QE3dEejQl1RjuA/O+tSshVq3dXd8qujjXRDv/UxixCc/thsEo13ELctg1nvIfgRmtTyfNJ5JFzQXmXxFW7Iv8p0hBoTGxdO1O5q+///rirjy53J4GN/iz7KYz8EA=="},{"id":"7cffa2bd-10cf-4eae-9059-a0dc98fca5a2","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"NdArray多维数组库","description":"ndarr-library","prompt":"创建关于NdArray多维数组库的详细文档，重点介绍其在CPU、GPU和TPU上的实现机制。解释NdArray类如何封装多维数据并支持跨设备计算，描述Shape类在维度管理中的作用。详细说明广播机制（Broadcast）的实现原理及在不同硬件平台上的优化策略。提供NdArrayUtil工具类中常用数学运算和数据转换方法的使用示例。结合代码实例展示如何创建、操作和转换NdArray对象，并讨论内存布局、性能瓶颈及最佳实践。","parent_id":"1275e1ee-6647-43a7-9473-015f0957e379","progress_status":"completed","dependent_files":"tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/NdArray.java,tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/Shape.java,tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/cpu/NdArrayCpu.java,tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/gpu/NdArrayGpu.java,tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/tpu/NdArrayTpu.java,tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/NdArrayUtil.java","gmt_create":"2025-10-02T11:55:14.983323+08:00","gmt_modified":"2025-10-02T12:04:49.709594+08:00","raw_data":"WikiEncrypted:29rqf5MzdC2ldc+bYak+qX/l4bscqSgtAFwVnv4Q9W+MGKTtNKMaQejyLI+s4HdS5AdcD49M6Qu9JujuNekX1NNgkVmmjQajbBM/pH5NhUkKOmogKt367/tK4s7cmBoXQ+gx0JWzhbUeNxQbZC8YcaphAjKHPvqbUYa3Aee70totUwCThhHOlRbsQ7mmDliokHkzXV1WBtT6CjkRoH2ObJzxdBoamOs32XQWaU6TehfmdCgYgA5qfM8GGv2qWgpEKHc6RfuAWny0wa6J3HHuw3I0UPjxuUjeYySQykRyodwdtHOMlFkSnNIzQkrkfCeln2MIaQmLsuDhuMx39C2of5xvUSdTacVUUAMFzYPW+1P3ueMCCSIoCU11zHDJFWbyse6uC99aIk4w58EP7rDM1+jtHWtMWmXt78gsA3IBsyzNGfh5oQfkXQlz00EPq25u3gMBgRhuIjgHQQtkk3wM/TciFt8re1O1Bf5oHMPBrtem9pMHqbyB3BorNzcqczcPLUmgiBtF5JkgTyDVwy0Ztexd5u/yPXXABAbfGokUGdV3lrWTJDI7fMCtSU53z/GapqWuVHSC9v/zzwVPgDkmBHITZXam0JWL3YDu3keRhHi0QcdAj4ZbgHovKJDaYdXzZ74fR+rK+f2n3RC6/VTIeorElV4vfNI1oIb6drQ88kj8eAoJta6YWCtQdVhv0LiQ/wYJuWAIw0XozuZ/smNdn5Ay9+XXF1M0y9zv2fZKAvkCY1revhLWqlcWIENBhNW73ia0502i+5W8JcZ45QpAu7ltnCdS2qySgJFY/IsupgQXb9iz3Pwveglf+m3lNjmBPDz4f9c6QHpqdxv8ULBezf3iZIwM31V/i93VGC5ZOxlqh6TYvLM2UrA6qGVYvQq7ArJ6QluPS4mSg7yA7qWfQWptUCUS2OSGMkE7B1aNlFZlHFOjf6+2ChiNsC+v9+Tzmx5G5KTW5d+RTuxpChfhla0138776dbQqA+WAYQUAL/lgi+HejlBqKt0fSAovB7y0QjFm2FBZ4nn785T8wNbPhjEBB5/fxGdLNSfmZsM8QMn7FkdZiLMETlYlNZMwqCJbR4tQLtqMLXtWzzD3ImHQbXDxx7y4vVupR/REoG9Ydo4fhPwXwJxA6olDu9dfsEGSiIXEbxu285p8/qNFHDmpZR9Kk/vz+3DOln6SZE9mQiprZeVZkJZ0T1IONYW3U2LSAm+KzP35AFlnanAopqGIGy3PRMiwG2WcjEj3vwppjShNIQntius8hQSMMCxdOTh9xPn1W7rjEHxLDj6ca1bwmZjDQX4H30srys4nNtvJTjDRmE0nGPBqWoB8GUAmRERfeTFv76AulpzSRcE6IiAasZ4S0Q6JBo/1WPxTDELyQ/T44f6w9XR4VMFTHpHBLb1taUZpvQv1UehG1j1Z3u51+uKLgC7FW199EGwnw0NHSAOw4orYV7ra3YYAC00PDACGuzD4muDCQ8PHJIKck10tFt+qw7fjr5dUyvQbUptMc6lzTIAostCqYbaV6OclD24w/qfY3XWoOgmW7zNa7G5E2haa5CyLOk5PaV45w/emiCALr9ZknI5JfaON2jYYZS3X1Welim1EOhX6Iy2lTea7dnG8NJV4qu/+tYGDkz6ztU=","layer_level":1},{"id":"ee92a8e4-3e38-42fa-b11c-7b6ec6c143e6","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"核心组件","description":"core-components","prompt":"创建详细的技术文档，描述TinyAI框架的核心组件及其协同工作机制。重点阐述NdArray作为底层多维数组的内存布局与计算优化机制，Variable类如何构建动态计算图并实现自动微分，Block组件如何通过组合模式构建神经网络结构，Model类如何封装模型参数与前向逻辑，以及Trainer类如何组织完整的训练循环。结合代码示例说明各组件的API使用方式，如Variable的mul/add操作、Block的addLayer方法、Trainer的train()执行流程。解释组件间的数据流与控制流关系，如训练过程中数据从DataSet到Model再到Loss的传递路径。提供组件交互时序图和类关系图，说明如何基于这些核心组件构建完整的深度学习应用。","parent_id":"2bc08091-03df-4eed-9b9b-427fe848b3c2","progress_status":"completed","dependent_files":"tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/NdArray.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Model.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:55:16.119021+08:00","gmt_modified":"2025-10-02T12:05:22.522219+08:00","raw_data":"WikiEncrypted:GJKeAISOpe9fzBR3si6wxFEzowTvc2yPtOwhbODfs4cuWFcMNMT/Pfko58oYzgp2nHasmkAmR5RHikJ7N4FOz6E3Tvmc/XUHXOIesHoD5XyEKESUIUlPOejPVft6/APxdgHhZDDw630G+EEgCIUucuH6iyoMPoP70V4CAikM33JFj3SHneGd8AkcnCublLQgX0jMhuZdoUWhE0G+CnxJF0dFcm8uqtbWVF/Nm1Gd9hO/jh0g3CvOOzW0paG6FB1hG6dofkYPcXKIhxX6Dwp9iKwx2GW4zxK1FkpLEHxx2XbmZmWqmGcei0rmBnHee3yFRIV0i5CyZPSkcPBMte+475jed9cnAJ0tsgbyKBA0qO/OFcdbKgJmKRnZ/Gc2X/AnXBHOVsI6HHjKEGG7pvo2biV6Od09YwsEEoCpQ0NnZV2NYEztXUF40znZ+VclDbKRH3kfehkLU8eJ6XprRgJ52NHkyXF0WiavLV/v6Gb5vlCk2KNwwevPOtJKIcgyvDTsj+SvZSWVYJhuKNKYWvD9xVcuuSrKX0MpSBFpIknG+WquONN2zGSCO5FG43GZjjNfWvSwVYFZ6WawCUffA/XkAT6tKDMzGi3lm3jqBUlLSa4j88KANu0M/mq4rWb9mEGMesVft4s8Ju/c0z8NzgL5KSpzee/wSTUa/RYV2h/+pTB/4t5vG8bOgg6Y7N7ugzEaTC+zq+nKwNMdcZrw1IoXKtFbRrBVy8ObaotLW/SxOqbkpSneCQga73USqxdQN5U5S0UGE/S6ccFe5+8BASW69bg4zTO3edDBMRwwWPEgokKpQEgB6t1tYB8fFtVY6RotxFehSMYRroGa2h66c+PRie6/pOFagpvDu5/xS/EQiDy/t8iTRD3qILGy8hMKGd8zKOhktpBTeRggg7XZTxuKcsJnLnKmuesjWbjbmSyhWopqW4k75XvCMKlDwWn3odA0Tqv3AFSFcGtaUfjM6/TrOKKdDYkDTrok39dRPcbN3ikGO8l6pfaGNka3UXXnIveqZLpwSgQRrN1OUeDGJiOZc0GCijT2H4l1opugwuC2ATG/krTes4VzVmHoVzBm4yMQ+Oa8RMNuIQgWAyl0RDUwnVEVCOQ8A/psL5amXw/0XCEST7y4YY8WkjIxmNhioRjXcvvG3gCARRGxiXKFc1EKryRWPhL4lrXiFpaKbxR8GYSWnHB9qBlhViEDqWz92jlfVmDAyngIKmiAnvPUrIQzuGuH2PYGZTzbL8WVzuYvMX/XtRMzGdDT71qd+EB3uYGEHraX09xFl9/oU4e+RnZa16H9SzPZBUxyLfp8+u3eLw9qbgHtZWJHDFRSIGBKXn+wcdWyfR4nj49IxdXigNE127jg9cDVt23NqdDZRuyPrg1G5KLnDRxCkdiPvZWcp8ucs+G1ETuSeRmsoe99lLvNW+WrFmYBjm05Mp1u8jTUB3rIL7qV3ipjgRN14i/iE5gfIiJoQ7wbppGCaGj9is3nWIMl7stcCK0jPe+8u35epJvPtYgguteeCMteNnZCeX33ERrYgq3oxdW9UPEwkrJ7/poo/GAtOojspSKbtCONk9futZoz7EuUxkX+Sp9HWCY+BZJHX/xnteiHNS20wSxCWH8/niLPwD68WTusJJKTQ/AAjMJ3Y1FBdAgNQay5tGaYXZFLvrUbP3U6GvmHkkc2cP331CvdU7onD94GpYs7JENaV6zodK84i68ckvq6bOimBbEaKNZrOWiYkNe389nM48bstZtrfzOxVC7Zd7q2mzSFCgyv1ZCVEgRLRD+WR0POsJk5OlqsXqRb+oP4zzsaPg==","layer_level":1},{"id":"74d91dbc-737e-4ee2-bfc8-65bcd41052da","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"基础智能体","description":"agent-base","prompt":"创建关于基础智能体（AdvancedAgent）的详细文档。解释其核心架构和消息处理机制，包括如何通过MemoryManager管理对话记忆、使用ToolRegistry集成外部工具调用、以及通过LLMSimulator模拟大语言模型响应。详细说明Message类的消息格式设计和AgentHelper的辅助功能。提供AgentDemo中的使用示例，展示智能体初始化、指令执行和工具调用的完整流程。阐述SimplifiedAdvancedAgent的简化实现及其适用场景，并对比两种实现的优缺点。包含常见问题如上下文丢失、工具调用失败的排查方法。","parent_id":"25ce1389-fed2-4ea0-8024-9d54af4913d7","progress_status":"completed","dependent_files":"tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/AdvancedAgent.java,tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/Message.java,tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/MemoryManager.java,tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/ToolRegistry.java,tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/LLMSimulator.java,tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/AgentDemo.java","gmt_create":"2025-10-02T11:55:22.105891+08:00","gmt_modified":"2025-10-02T12:06:41.143477+08:00","raw_data":"WikiEncrypted:gTiQk8pR90rzooKLiaXVuS0Md0GWjTjhaliAw4XLetiybh74Tqc7//XJ1ebM48xhOZLGtFDKeRm2zC7Tja17qgIUMvkkbD7BjQDnfIsfFnDkXaTLW3X6TQJKJ+0zmyjE6bhRvCgDeFoT5MJ3YntyukXKqbxacR8hXLd/SCy6Yn83iyesZClO2IHsC5m77hcE3RPhdRqjyaxfa6ei/084mRf4eGZPqi3VpbpbaQMKhTtYEtHx9otNDfe5u/+dIoMFdyDJcOgXvtt3iO00r5TV2IegZXb85kXUjjU4qO9qY8xe3m3V3ovBfAFEJhl5r3fMkkh6xfvI5XLFDoM4Iqm9MbmfUNggCRMBG3+cOpL7L1CQw6MgkzKLDYND/QauMjGbu0xzi5LIDp3nyC/ShhMXKDbp2T++1YT53GQyzH+9LwHyLu5rBSArwdJ/Kn0rhVgaHHJ1gV45UJD4kh/GfAaUgZ5y4RzieLxYf7pLZGzoIIC3d6UuLqxb/xEmzZYKaHoXe1YMf/UpESWdS7PQWqrc8FYxQ7uWhnH30k4XMQbTgprtaDMetyu4UYQoMALB1qStjeRzc6NoUO2Y03S6lnVV5rkt7ihj50rFpMpDAW3Nw2+rG+4A8XwsWrSrXfXOLcRrho5cdlyDjSHH4P8bknBN4Y5s5AwjcjB6cAnRYlVKNbS7k50Hnjby4x5FdVPbbb/5fL+8tPZp4E2hC+UkkeY8A7TSbPf99Qn07YyUkpYHAgIzM7VXPUTRh7pw/2/7LGdMGiKZje4NE5r9jVdCSrFdXSBP9giJM/dyqQbrRtH43bTKW+6l6mQecJEkx+mtvHTfAwhKgakMHXgwrAE02zLRjL55nJVAAKhRGsJFLTJMfEmEagpQXElPpTzn044j+dxh/68KFLTxHKH1NyB0Pinn72baSlzJ+7HjcTa3tfh6bu4gxBdYr28qm0W5Tr2lcYOfEhHR5huLKccFLbIaMEqfLIwPQmHk4r7tHKFZbPSPYdP4lrC04Qh6clf9Ofwy7b8KTmFF5GNXA+dY5tSLCRZsegWqaEvn1SOlZuocTf5Xu2uZxMwHtwc6ckxZXr3m8xKRjJ5qKLbBOd47Dv/GnkEQGCoPx8x27V8eirQKzPn79E4tqF4jtr981EPm1d0TKlL328u6Anz8NyA/bNusdKFLGKMIZ1iuQFQQIUH+a+4wnnG3NfVIE8JQnfSw6eAlsx/neXS6DmBR66f+WWc5Rhy12b03IMjx4g9x6m2u870RFCCBiB0JNmJLGhWE1l/94NADQudhinGe+Z4cSium1kpSIQvmpUd9ozzAiHkiqm5x8qKB5z8HMqGafjuYEES8T8uOPxNBqB0K8gLH+mDcmUjLo3TvZ16rKP8KrpDujg2E6AnpjExyUHUfeU+8QIh1v+MR9N5ouVCkXi3aoDZDifPaM4TsEmAzREi7yq92+C7X21gQYKv0PoZ0c2ogVLsZ9TtnHkg1Blg0WltjqhrbEZZJdL6yNTHESLbZ6B9JERSU2KgzCjPs3Im/9O+Px9YF8Wce1xHeLk0bX+jpCYhhCzFVWA3vpdZEPQgT4Z2gUSCHJXRMvqoJxY708mouxxhavgwo7AMvx61QKegG8rqSvuhjejegkhF/8UnX6gkaBOulM/+/BAbtRJ5J7TTWQua/9pkSYlH272EjzWoen/NEK/gfWlSkRDtaz2j/la+3LSuD3tNzN0jUvxuGZ3NgK88UQzlaTO4OvlAJpGJTh/eHrUowR+oDmHmzz/6z/IgNkxkL2O7Sb75ICYcsmyiftEClR/3r","layer_level":1},{"id":"11a5ccc4-5004-4656-b624-0fba4bd83d58","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"模型管理API","description":"model-api","prompt":"创建详细的模型管理API文档，聚焦于Model类的核心功能。解释模型的创建、保存、加载和参数管理机制，详细说明构造函数的参数要求和初始化流程。文档化所有模型操作方法，包括save、loadModel、saveParameters、loadParameters等序列化相关接口，以及forward前向传播、clearGrads梯度清除、resetState状态重置等运行时方法。特别说明模型信息管理功能，如getModelInfo、updateTrainingInfo、printModelInfo等方法的使用场景和数据结构。提供实际代码示例展示模型从创建到持久化的完整生命周期管理。解释ModelInfo类如何收集和存储模型元数据，包括输入输出形状、参数数量、训练指标等。涵盖异常处理策略和最佳实践，如何时使用推荐的ModelSerializer而非传统序列化。","parent_id":"1d81f045-0d3c-4bb3-a24f-3cba807356fa","progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Model.java","gmt_create":"2025-10-02T11:55:49.495739+08:00","gmt_modified":"2025-10-02T12:06:34.021098+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTTx3DLz34GuqL+3kzaje/i4+q8XuBU1ilSlbvIaafe5x5ZZKyIfoHn5W/KbvTLbgI0fh4p0XQ1+mWOcsyOqnkoOcvQz7UjbLKtP5CxnxN9kclGDoZClqodxe6E51hTud1K1daTZwk40199/QNvKyWdLAGwzZr+ENrnGYP4w+SF8128H8kvaHvtRuKElnL0dXmc0AeEvnmKyYOrLoUR7DeBbUNYjMn2yKEECjiXCUfp/HibJvpT1AU1FQKPex8biKd8FeJbPbdlYtSzP3vqCZlG4EvguoX2xHAVr1LmLaUMap+oAqbg8iGAHXc8pskIwEVyb814W7TEVD5lXaj5IK/DG1LRSRLYIUUqGs6l4PgOkvsKWbw7FLRuWylDkWzmXLUzXjJd25Zq1c1NeS4E2CCyN9hp7j0aXGFK7b7J03wYi7KwD03LHzi0g5gNsE4Ym48T+9d8kIoC3fQx1NA81/A2whagu5cLG5h7fws1HS4sybXCY159en5R5ZHaImcC0387PrtM4O326d6ofxQ4GMld5220r9eieQvx7bUhKuCT1ZXXadkT7s1lR/Ji6v9PXSLoTvOvD8Bh8QSzdHgRmIsoiTZzi4C7DdsdgWalejUyyh7zqI9XtIDp75Am8AGI3qWlAdO3xTxI+wHMbo5myLStfGi70rpKJdAQr/yG+nu14ZhWaCOwZifWv5opiuDL+xXxjzqAsAah9PUEPTV+SvAZhpU1yyLMG/cdfMAAaDYV852eIPJ4ktyHF3ADd5ppMTPnaNSnOHu40PbRX5M2Y36+fH0O9XPgQQcTkmxQ/QBClxFSd0PEq2xxrNx4aQ3n2G5TpTcJuVZQCSMOGHF/idly7l0qJxVc4nqJ2SDb2yNdryEgjsQAIdi62qwyGaOtwCVLdZ5gnJBZA+NpD+9wHk6ZGvR0BBK16va8jhGv19ODL1+byvL4MlaXjAhzJB2ePDN7nJWWEIzb/yJ5eGcbHYAjvzMSPN+wx7crkBtsGGaUUm5eTMFEkZnO6SXhJ6Wq0sjtAKI9H/vz07ithUM9U6xO05DiXnwsMmSY2IqOzfSPksoRLAFBvZcEN2wFH9TQXP5zau4pBkcXGFC+XYIegcpbTNb9GUHmECw5bN56nrLH91OIVTu7X5E53Vpe8jybHp7YtIBO1/3xFN9NzFmNHrOLGzQ+wcdl5AJdPIYHfe467897xkQq8m1FKDkxFoTAFeG2cOamaUWXxF+iIHsSBxJ2FLsOHy2IwGUE9BzVf+AvC3H9RcRP7XMU18SIM7ZXAwfutHgjEovLa+nGJ8zf/3qcX3+kzs8CPXfpPysWdX2c3+iSceBQ2xVnhnDtc1Bh5n70QP7QLzyqYHIGch37/YvmyJ2GdiPwyHIwoKjYHJNKzOwa68Yb0bF26odweLHSbRxl67F+8nxy8ibsVHXQbETqtmp1Jqv8iALzl2Cow44nxX4xrk35gWHk8jaU0CbgKmmB2GwAy5zMMwVA7uv/VYsAOE=","layer_level":1},{"id":"9e11b63b-5b3b-41d3-aced-afbab752bfff","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"GPT模型","description":"gpt-model","prompt":"开发GPT模型的详细文档，聚焦于GPT2Model类的实现。深入讲解其基于Transformer架构的设计，包括多头自注意力机制、前馈神经网络、层归一化和残差连接的实现细节。详细说明GPT2Model的构造函数重载体系，从基础参数配置到默认小型模型的创建工厂方法。阐述模型组件的初始化流程（init方法），包括Token嵌入层、多个GPT2Block、最终层归一化和输出头的组装过程。解释前向传播（layerForward）的完整数据流，从输入ID到词嵌入、经过所有Transformer块、最终通过输出头生成词汇表概率。提供模型实例化、参数统计（printModelInfo）和单步预测（predictNextToken）的代码示例，并分析其作为基础语言模型的适用场景。","parent_id":"a9a0ee5f-a5c6-4f7b-bf70-ae25d29a382e","progress_status":"completed","dependent_files":"tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Model.java,tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Block.java,tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2TokenEmbedding.java","gmt_create":"2025-10-02T11:55:51.287564+08:00","gmt_modified":"2025-10-02T12:07:01.834064+08:00","raw_data":"WikiEncrypted:5N5jctmdudMFM9dPCsHheFamyp3cq7KzMcSWERBgHWrHLlCJY/a7DUu4ywg4ROvYJOveTUju76u+fzBEF+vAoFBwaVmiJZdOrFUp23R18aCyAoWJd77PlOW245kV1Z8+aH4wp3Vsd3Rpf3SH/KSHjFx5Iwso6jKVMLXeIN9HQZNE1M0CbkjhtpeHgdAGK06tvF2L1nZw4swjH9t7lTmNWFO/kna8ApAIAbpcrY4HkNb1cpvUo9/JrY3IXeFstjkq5z2E7TRXc0Nmj7J63AlKnAXjQuJTvW3qxr6w808ELlFmdD0086gKLbEMkvCErDvTvrdX74nm5P6x0tnZYS7SzDnGegXy5o+ojkdIh4qVKLKkqvCI/pM4bMKXr3KnzpqE3M+VLwrHpFiUqty/eWhfVn2X4AfrBewoqGkP53soryx0KLGSG2EkB2w0PnT+xGUnSEKdE+WiVVJoWE/cdNsw3gyMIygRZto7hfCQWn6mu/UlF+ZQpJTvBqFLKLytuGU776799uplCMVYVrgwqxCXeNGQ3lOMx+HgsxvXDa8XqyqcWbWh4P4QrNGy+GC+VGk8lFOt62LPjW12tEeofUkga1fEBIgNoIjjTb9Ki/Uu2nf1PFPKc4S/4b621Fjn+gkJd8cnpyQE6zu0x2nT27WsIWfcUNIM7rAkDVy7GDQlq+1NoIpL8C5C9UhPgp3g5Jo3K3df3sMRh17cYIk6wMbA1MyInfKCULEfFFxPXDS4TgmpqLwnINDkLIBMYPcxl7f0bSyDDbRiPgOK6h6mc46Yqv502LVUbKary+9+MgZFdJDPhDAQHiynTJ5tI1B11d2CwmtHo+3NcwqTb9oCVequUSpsq5YQvO4VXZfxrD9G7dt18nm1XibIEM7CLqOYKI0YFvjXEVBB18uYEMKOj42iEL2TugVmidorlgvrlkyMRC3gZAGZa+wT1+0v93d3so9aCnc6ZZjrXNymLa0iYJNIVXCCE6R4Oub5Tvy7qpL+3haTQ10uEPEYRBmgjkv1eKUldkYSRTpljQphxyVNvcyyvEGi0EF86hwscOGEDSsezEuD4k8wNy+dFZWIh0/xeo3+jntQJHAl07Et2oS25towUwp549Cvl2VnRBdmETdTVoCxVMg1umBwSZ6SZSz5bR2rshyTtVTHbJC6st4EekJn5+Y53ugYXVFHn7r9ds3+sk6PnkHU91aZIwBu9z4Ax0nngkHZYPATtZ3zZ3qxjT9jmO152LCB8SZ5SXOGqAIz17jFSDJYQAz5YjQ329FMXRMt0SQgV3akpEgySyNE3qrOXhJWn9CSvrnda5/ogBX9FlzijoJBA17qCcjRcIWJepGbXNnNLctC7DKgYx9PaEEbvT3x7apJtqSTMT7TWwQ9HQ7dJn/uSPCUYejGn1mXj7My5fqqcbtVQoItyMLRrp5Q/0XEBf5Tnhib8oMZ6g0JMRiVMrdsl5CoASUQhs6Ft/xQn1lMUHDtHzy10AgqRUy5/HHkyxm1EM+Eb2KFfG2qnSVTXenz97fNk4G3PGVIFII5dMY2uHogHuBkFebk2J3C+brq/UAIMXi1QYvpkgYJaGsr6wNnE5oZHHfHMZic7AmTT2qlwAi068CTfwFgRgPwNBgII798BpvmGwguORWd9WCRtVV5FoioYjU3wkmVpJV7+UIPNO5dRVBGAjPH/67CtApkQihxKYD6R0X+ACeauB4WjUPYecsgnke1OEnKWtEF7ZRLPPclARZJMYykOGAyqnO4smZeXWf1Pt2C2eVZEz9jPIe72FHTUITwAknxIU+N","layer_level":1},{"id":"7ecac486-a534-40c0-9a4c-cea881f5b68a","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"计算机视觉示例","description":"computer-vision-examples","prompt":"详细解析SimpleConvNetExample.java中的卷积神经网络实现，涵盖MNIST数据集的加载、预处理、模型构建（包括卷积层、池化层和全连接层的配置）、训练循环设计、损失函数选择（交叉熵）以及评估指标（准确率）的计算。说明如何通过Trainer类执行训练过程，并使用Monitor类可视化训练进度。提供代码片段展示关键步骤，解释每层输出的维度变化，并指出常见问题如过拟合的应对策略。","parent_id":"f4ba2b64-d220-497d-ab20-b4d22dcc9be4","progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/cv/SimpleConvNetExample.java","gmt_create":"2025-10-02T11:55:51.503493+08:00","gmt_modified":"2025-10-02T12:08:09.920069+08:00","raw_data":"WikiEncrypted:CwJ3npcAtL/Hf0eGSHpXwUVy76HVDXALU3jD/Ov7/6AW64Zb427lMFPtcgk9Wwnc3ZWqQEWRNXyVf0FKql1Izq4K35do/GVa2FmvWQ6YT7mkW480sFjMG90wXzP5weqbqqc2HKuEEL5ThibAd1DibejAgJm2Mv5hGRuCzM+MB0mAMVImBbulFsQnOJAlpt7OWoHL4alNHPX4pqUrseDXBMb6XEnjnr2w1J80b7IPE/KFLpvF9WXgML48l79GuxFYPNUxXeifzFAfYQu+TUtUJv+82zsNkU21fAUubTrYp0nHBAC2lv06Dp4hZUECf2zVTfwl2c5la7mbV358O1zRrs5U+iXmq4Aqu7RWedvrKrS95RzyNfHrDiMvil8SfBF55mmqH9pcj9keCu+bSHVdiD1hj6fUxIDyZsM8x9Okh+XVeo05mK0xR68Cj89K9CFGWYFLIbDc76ejVoDyh1SgMhpW8BIxEhz95N3wzUP5eEgEPTkusf4tRgCsBIr3xQOY8f6gKhqolG6xmV9gMiUUGXSABtbgV44BgBGQvHS8tnT45UFkma+Q/la3VkDko5tq3TVIxqCuThwy6ZHo8YpATK5Mh4eiCiHShaBzfGNsiFZm1Z1qZ1uIS/KHPHLgF+JPWU3G9UzhN3dWoXftBSrpA8A2FscLVZeriPHtr+WUAkN9cwd7wfuI4ZdbnGdjoW8HlCojbEcjsuZtDNLkRejZ5LKksG/vEcI7J+ab+ZUh7jyimACE4bWCA6jdHUBGy8+7a1oMaAD9JD10TcxtZGuf1VcO8raLeMMk32fGCM4mjz4oWPj5hWe/R6wnfKFu8WRNv/xoy7fyhO95vxlrnoaszIXnqGf2nXMpX3wncIND/9S0ha3l92lEMSe8vhSycm69xFBSIz+eTWeVu6sooI1reKTEoLpcCGkLp4/Yf8oTTw5Z7ADQCQYTScf4haZozkXF4RV5dxHUHraqH1eUaKCckXXuATTkOwyixX6hKgAecjV62XLcufvj0iE5MYzmlQdlMkWkl7AxOhiCvPGlFLnMt+X5FbHmYsShGAJ3JPUOURJ9MRc2tt8Aq3WvyoFXy6y9","layer_level":1},{"id":"98c7532c-6108-4412-8254-669176282628","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"并行训练","description":"parallel-training","prompt":"深入讲解ParallelTrainingUtils类如何实现并行训练的核心机制，包括模型深拷贝、梯度聚合、线程数推荐算法和并行兼容性检测。详细说明deepCopyModel方法如何通过序列化实现模型的深拷贝以避免多线程冲突，applyAggregatedGradients方法如何将分布式计算的梯度同步到主模型。结合Trainer类的并行训练流程，展示多GPU/多核训练的配置示例和性能优化策略。提供实际代码片段演示如何在大规模数据集上启用并行训练，并分析不同线程数对训练速度的影响。讨论并行训练中的常见问题如内存溢出、梯度不一致等及其解决方案。","parent_id":"bb0d9db0-0092-431a-967a-d1c4a7ee2048","progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/parallel/ParallelTrainingUtils.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/parallel/GradientAggregator.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/parallel/ParallelBatchProcessor.java","gmt_create":"2025-10-02T11:56:17.683325+08:00","gmt_modified":"2025-10-02T12:08:20.975243+08:00","raw_data":"WikiEncrypted:lhNRMh5kNTxTBCRgMKyOH5zAXwppYTwsysVl8gWXm2asxb4XZG/a0GmJBQggph0xOCyBH8G/mLa1t68FZ/2WQj4T4CqLa66ZSMWq9Wj+tywjHG0nnF+dF2pfS6pbGHfZgWnWGnqatzuhg4na//VAn8IFHH6qVBt6UM72waS1rV/wCtEYrpolQDWz1SjkhgLbXXpFN608liJuevpB6h3tP4Ppw+MM3zd/3pnk/W+3Z4/h+Qe+HhIVyhlP7GrrGIBKwkfDf89d6NpS0h04JkPSZ8qeV/lLav+LJ2y72zGdxUU5SpZiEh7iD8N0BlABZPpIn5xtNwGRZu/j9CUOPRnWHYHRCQyzKatatbyoFFL34ynCfwpmbzCj52Vg9mZxm1Riug36cxGJADpw93P6TJsoBXCMGRNy5SK4TvFuMyLVUGjQu3dqAvzZkPAtiTOvhylNI58+BurZL8NwKc2EsUCoxufk3nS65AkMG/tXimClo1EUOGX35WaM1seOyG1eqePrLgrzG1kDxuQ+Yj0Iy+zRyugX0nQirnG85qKkU/8bFIWQjcMnR3aqFH4JeKFHnhZ2EzvcmW1Vw8dyXz4ejManITZ9Tlr5rWWkpNvybAvbQDW5MwT1Rv8gHx+85Lmsf53X+Xx0yJlQ/gqhcsMsq1GpWALXLoufwkSeAhMCWA/fUZykOSx9x7x4GQ/7eMhiFpYZUlXJc5Yw5lYIZ2CtrFUgIB0Pgb4QsN58JouD5PEesBGwZV7oFxoKDoV1xM0F3oo2IkNg479+yVuqPY6W5jkgcHbmGdIEijhYQd04KdlP9b/rvXJeTzv+iHM6yyaStWse9FGOLjWhE0KXYmzp1tpx8gqgOACIw/WCf+eivekIQDUbZCH3whESa8epMdY+ggqmxzv0xMGJ40q0WESUVegs165Jbe6JlM5DkfnlUrJPiRvFz68yXdn6xTQvX9ticg1/B5cFLRsuzfcbXJiP8kyV2ztoqX/iHnwV3P7sNhahmq3yKsjTEtyCnTuPo/AXY//rpfa2aRF1TVxLHZc6/3A54BAlY7dCCpDqd+HdEbBWEcpB5uI6Sedtb7aIl7GDHixnZny4WOl41/L4pRJxY2jxNlvk6jdxg6/U3rF76aoumu4crDU4CQS8+uDOIVjEj2iZRrTisBjksDggp6T3OwIVd32mJzWtosShTAbgnPQOL1TNeDpPtquzKlph4Yo7blsnC/UU0bu7YxVbvskYnuLgpdzTkDHmbBTZYOzr+GzgJYpGipc+78VFh7k7LdiyyWU1t+s4a8h2XgaAb9jBOsrW2Ys9/FSIl1PaU6+TIG8FgPjNxk9a9zNFJXdPyHQRzhFZJ9mJ0IE3rqYXSTzP3hd7votDgXz+1IOoT7ojtk2uElqEjd+GTl3dtDGS1g6OXXjfr6rq1H5btzjjrvqDiI1THvqI+UhDcByHf9wd3lGpg0oU49S5NcDt0ged+rpTZYVwkwd8SyPzB/5+UWP7s56sOnSk9id1H0RaWMi/88kEe8lVZmJ6iCvPL2u+b7EpNHJulkwCoqXUGkyfRNfT7unbWch5yrXz9xUblk5PZPskSzXy26S0AXWIii1DVCwzvAbn","layer_level":1},{"id":"e2f26bad-3cec-4ba7-874c-f90734d26805","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"组合模式","description":"composite-pattern","prompt":"深入分析TinyAI中组合模式在Block类中的具体实现与应用价值。详细说明Block类如何通过维护LayerAble列表实现树形结构，解释addLayer方法如何实现组件的动态添加，阐述layerForward方法中对子组件的递归调用机制。结合代码片段展示Block如何统一处理单个Layer和复合Block的前向传播过程。描述getAllParams方法中递归参数聚合的实现逻辑，包括对Block类型和普通Layer类型的差异化处理。提供UML类图展示Block与LayerAble之间的组合关系，以及序列图说明前向传播的数据流。分析该模式如何支持神经网络的层次化构建，提升框架的可扩展性和代码复用性，并举例说明在MLP、CNN等复杂网络构建中的实际应用。","parent_id":"d38c0446-62b7-411e-a6f4-e3fc7a48b7a7","progress_status":"completed","dependent_files":"tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java","gmt_create":"2025-10-02T11:56:22.298367+08:00","gmt_modified":"2025-10-02T12:21:20.587728+08:00","raw_data":"WikiEncrypted:olSRviQUvb/fDqvwC8uYM+IgTo/DDW+cANlw6BT+pqawbUjAeH649oTvtDuaOIf1pPXK5IA+bI4wexCZRVp3AuVGRyWkKX8B1kxDwjdScSJ93mgIutADTgai+ZJersLKi43YCkeLEGIkVm8IjbVBLbjE4CWxaur0DR9fLZYQFI6vfUHcsqSamHeKxrPiV5SdR7qcr7++9/GVLjUIbvAbRiyRGOLyO1mLQpp2lh5zUUZsakyrkxKSMCHcDiP1ipOOZsls13dsggK/ainjFvI21MO7N50EwwRblVpuMnD9oYNEJkJE46xxVykrsJb/HA58+zhX7iZJSFwlXU9tHhU7MeBl8S1k40n9XCJU2fyVkD5VLsH92bjrduZUSm0LWC6EghbBPQglo8duu6SczWP6mMfqExJnZC1mlihc5WOS3o3p1jUqcmfbOtPyRhZ70a9JH8Cb1JSvpnwXH/TH0hExKS9cdiWf9MlqG6x6p1NnXa1pAPeAj6Kb3qOFR4LfYJCkEyrluRVFvSontrbv+PzL0o/MMr/U0mjPDuMJb3ml8rSehXHwwsk1IdpqmWTZAPN1r3wTvDdbLIGnUnnSJPN4OFP+rUMMyRQ/IgJ/MoG6rcN9CRq1zdLsdBnGte4z0sbsghIPPs+bX9eh4GeqfthpYo+CJpzALC5qpylPM+uCGWUxYb68cDYS3xNGMsRhJvawkc44zH/kc/iDZZMV1gFNNMYhH2MD8aouFcz4et45RVFBeYGJLbJlfeeI4aEYkR2NTI5Sd4GKumafR1zDjT/lTgEOTDPGdx/+AXntWGRyIAPKZepVYNTIBWNo1eIwR3t/8NccoH4i0bqjVZ8u0BguImMFr1Ke9KG/enf1LR7wI2eIxj0Ze5O97QvIvR0UmWLEsuZ1iT0754zGcbS/3CW3p4ox2TEs5uMMFfcbrdkTBQyNUsVONusL1EHobGUVNFcz3SYLUn0iZzReTHpC5EhvCbaSTe87ml7lgYf7CZCZyOsdlaZRiClm5f1BjLDd6tCcT53Y/pC8BazW/3gx2bj4Dys9RAoeMnuqLZls/2N9Ddyk+ug93kjk/vAQ9bbJmuuYqO/ec8IuLksSvQNmFUtM4CdaNjLSeyCgo+KHGXra2Z6wngaEkLarofVlFnOjxl0Nw2AUE1xf6Z7tTi/Ct2NQa4kf8GT1uGgwKDNOEy6zfC+cPKdmLYgq+wS+9hJt6R1WaumkIsEAOwY2CUuZG9bTnXxYGgsez9ejzZ5A/8L1P1nulvkcxQ//3zbBdpV/Ez0G50LPyGVYBmSH22kU5Zb8wLxbZIY6ri17IQs45RuAiFmHfYxlMikrRrBMGcUrnBalK62cocS9BsUvBIClIlXmtzkH0et6wdFA0N8u3epzBwCtih36+TY/1iNUwaA0Fu5JhdIcsmFkKQrdc6zDo7v9Kkef0eKWwY/LmqdIXC5jRErppusAvbN8UDnkwEBHEAy2","layer_level":2},{"id":"c564b80a-41b5-4600-9ee0-0368d33275f5","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"NdArray - 多维数组基础","description":"ndarray-component","prompt":"创建详细的技术文档，介绍NdArray作为TinyAI框架底层多维数组的核心实现。阐述其接口设计与CPU/GPU/TPU多后端支持机制，重点说明内存布局、形状管理（Shape）和广播（broadcast）机制。详细描述创建方法（如of、zeros、ones、eye）、基础运算（add、sub、mul、div）、数学函数（exp、log、sin、cos、tanh、sigmoid）和聚合操作（sum、mean、var、argMax）。结合代码示例展示如何创建标量、向量、矩阵和高维张量，以及执行矩阵乘法（dot）、转置（transpose）、重塑（reshape）和切片（getItem/setItem）等操作。解释NdArray在自动微分中的作用，特别是在梯度累加（addAt）和反向传播中的关键角色。提供性能优化建议，如避免频繁内存分配、合理使用in-place操作，并说明其在不同硬件后端的扩展能力。","parent_id":"ee92a8e4-3e38-42fa-b11c-7b6ec6c143e6","progress_status":"completed","dependent_files":"tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/NdArray.java,tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/NdArrayCpu.java,tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/Shape.java","gmt_create":"2025-10-02T11:56:27.897493+08:00","gmt_modified":"2025-10-02T12:23:08.860517+08:00","raw_data":"WikiEncrypted:yPzwxrUJIyQaZWcZ8MaHq/CCBILwxx6wTHrTFAshzf7uScMhCa5m2nhijAo7iccpaSWjdRNsOpur8MnWZPYBKAQyN1pd2TueF478I9lWpBmxBlcL8FsofVWzgt5yjECBQMnGViZ8Z6FzepctXJiFLLA+eXszMOE4yd8d06UHvOTT+Iuu4uucIScBMImACzV2jMmqrgYyYLl/vUo3Fzmn4kyPWtSYFMn0isTIYwy8PItz5ODHSrCk5B5n9PlMH1+e8LB+VjZMoYH61m1Hezjc1DpLoqMp5ZNa0/ovABKiARXB5rXnLKSTy5d2jFT9WJWEKQTebWdN/SKzFUuG9Nf+vuKkpKOCnO4kbxBQkNG4LAMGoAlkgzoeUAqS67/LRYUlJjRkA7ar7f4AP1x4OXbaLsoBYCOLaAB+sTY/uGWng3HwdRe1W4cibfqwoFCDfRxWdt3h0WAktlvestaagafKmHriBgR7EpZCGlVsiVG6ckodAeZb5f4EIis+F0vj/t+XBQoGhT4/wG4D7xef+TkpMaYptwIzGFcEPZCgT+GB7bXrf0IScuXVEqNYYMqiJ6Pdbb+DUDd+QvCJKyqk7LcW9MMwfPJycgUXHDyb9h6xygx3SYJSOL9PzdUHxMFRBTW2aLBBZ9ojJXsZmX7qSD8LrNsmSRttFdKqEbShaLePUZxFeA5ZxJbK641oIFN5H3TllPwUr+jne00YhnH8uubxF81tUdsKFxvUHJ5OjG2kN+IfiNRh/yrPaJN/eFLC7NFZX1c4kPKbobYv0sCWCFdmTmgC/UYMWfZtZOVSspAffys9l+Wl0r2zgglBBpH/sgCoojqTcurFk1YVHuMMa/v5s9AGvh+6WtbVwRtp8uHb2YwDQv1+Iq8HQY4CYO81uIC3Id94sYqHBLuahyWrF3gtDcd36k6CwyEHUliYqNvutd1d0iKaQG4li0yulE+F4S/78dwBF2BR6ytezcw/A6fzbh7DQrE29zOgGevOj3rvSn8BkqH/N9opE8q866KRVfezaqk8yx5XkHx3E3IfC6Oa11HbtR6sevbEXtJFBBm/hGK5PBP0qG/dZTU/zBDxjNiZHrEMG9lQwcVg11U3/so4l7uHBhyak33GVL+7sDv9eDOUy/wo28hOZCACrdYya8UnVjMaKRu64ni2A7OvvI5RAZeMXMD7AYu3I66nNTEfOg5PReyxZLWV+rfOMnesVv+Waifs6AOz6wBlZiBR9HvRHYL/Ei9MrkGZMZI1OjlfaFcnXl3LfKp5qPSKavBjoJCEiTaKRWHAw39MxFj8ss/SYGsAN2/sBTNGqkgHdKcspLisGIAdR7bj6Yyur03D4pnnlLrYPZPhqddGDuQfwaI7P60JiMUXZPBotVZqqeiL+yZaRs4QOwzVF1rtLleFRJf7DdtDNd1DDU8Fr1T1zo0LClq/oBTJQAdZmJas4tOIhSs6KaG/WotF8nSQrU/Ckt7F+78xVIem7mG+UjMNfMeeKqzqGl537ATR80eOekleyaxND9vYV7owQtsPAIZDysi/vp0+b1q9poEi7aYLh5VFLznigRI8Ya7GyWncsVGgk/tuUQsGNMaVcSREnS7iraDByMhuOFquG1hSktm2s7tpW602SDwNfUpLp5/hDDctdIEbGJAssvdeQ/jH4dq0hb0UsijmwJTWHMkB86je0Gs+TnFROEeRywKPYIrazA/173jcVgwzK0BxaXVU6j90WhZorKHLWloztSraYdkqs1hQTnTsjyGRps58XjOQrk+SLAXNNM7PQ7JXoOglLcnecPN/u6gJmPBgW/43BQAKnGARng==","layer_level":2},{"id":"1be08c09-6ab5-49ef-9299-6206d98f2e85","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"前向传播机制","description":"forward-propagation","prompt":"详细阐述TinyAI框架中前向传播的实现机制。解释Variable对象如何通过重载数学运算符（如add、mul等）触发Function.call()方法，从而构建计算图的节点连接。说明Function基类中call()方法的执行流程：输入验证、NdArray值提取、forward()计算执行、输出Variable创建以及在训练模式下建立creator引用关系。通过具体的线性回归或神经网络示例代码，追踪从输入数据到模型输出的完整前向计算路径。重点分析Function.call()方法中Config.train标志位的作用，以及它如何控制计算图的构建时机。讨论不同Function子类（如Add、MatMul、Linear）的forward()方法如何实现具体的数学运算。","parent_id":"141136aa-0d32-4337-adad-c5e39c67fba2","progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Function.java","gmt_create":"2025-10-02T11:56:41.155487+08:00","gmt_modified":"2025-10-02T12:23:04.215615+08:00","raw_data":"WikiEncrypted:vPyZhNn7BFu4ZDSv8BFRYTzuzQrQW2c1wjkLFwhxMVWjVY05IWKowVE5wjpI7eskJL8VWJIETgxN5i22rPgF/syOhNnJWGWZpGvQ94EwFjklTLXPDGkMWse4UzMFVp1hEbdA4HZucEwFbqZC62zr2rlVnfkeXvSnQvjJEeaQBEuT8SjvT6qb66RV0bNGVFLNlmN9wK0G4F4QiCTVBJfVY7RxORDM/iMU59EOH4qCG6U1iXqZogf+THaEWYJJdeIENtb4QRg5xYVFheJViZT1xS1yDNgefr7RfuA+WHFPa7QYGxEE4sNeOx+XTmamtnYiGFs3bZO+c3O5IauWFdK0HtJ2eMOknG8Xrvkqxo5WHgh1KZX5XYmppaEJZsn/+PlZuyVIHX1QfQrp9izzdRJa+pYvNCBdNnQaymzPR20OkdDq/ndgXul401AmD1p0BqSRT9AVDW/iQ+HGfIzLi5TXBWFK79LLH4C8yNsbNZfFZ60InCDlltrQzcaEgLGb6ocHcv34EAAKfXVOXNXEkwVL+6QXevcBEcuyyE1dTMphSXE2GfVxb8orAq6LPjwoypNwFzv4c+flJpCezwRGfE7b11B6Ln2s8wio0t+EV9rBi4n32ROQEqZ3D3UEvy4s/0x5Cvh74TSdA1ahJlFGofMBy7fNFciTfLRZ+6D60V0DlXLKKHGw9Mdr/GmMjjEptCMqW8f25pmVB4jzRlyVY1TG2P6Inl8SusFcZnXibHWNwAT2wXG/Yk2mQAvcmDOz5QT+/zDAnCH/eZVf/LU2q/PH/4ywcEaUh2/bdKt2ryu52+nEbKUNKJ0lewqqTcA6DAluP3MUzf5Z/QjS2RJ34W/RBYuTESaR5MnG5E5y4aNa/r/NXpmUYKIqKn6FCJB/u8FfAV+Hi9SODOJrzWhJLmx/qjD7zVY+REziGVvyBp0ngAp6f5qTUjsnC73ileP4KnBMG2nGAOWq3afZJpQhb75fYedroQXw0oxQLBXRseAAsxuXvvhqChyU23NjrMN4+wIGyzkmSazaAp1UnrgJQk22/Th5rmFd6ITq3lx2/naq6r28r18p6y2Q/8JRvXw66LwtmCDVSqiZrBhPF/72wV0i6exDsBNtdMuE1jm/aLs3qoNNJFfsxVCEofntSY4avVHM+4eVnEtIDhWJPr9SrreSGlEZu7fOj8o8WIu9Tyr5+KEdxWHnqQieAis2r7uIfAXNsLTbElrA0X50cQNwGWVahv1u416i5Uk6yM407G9x8F11nnq7SvPngYz3G32QlxR76BK3dVwBCZhZRGrCsR8lQhiAreO4CP0zpES4FXlKgCwO2CnfN9bn7buMdQVdDww9bv6uzsfTCYlUv+QKt4osxCbMb9Nbg+p6oo+FDyLjt6tWhcO4y1KOdMOM9uRVLDamE3H+bspurJpNkzQpkYOI1SGR94INqjePM3drvG5n4RIl+H/lANTg0FdC6rGCvUasUgtK5eEBxi9oRpkx+/VObuQLZQ4iKe6IGWtEpUZulRY=","layer_level":2},{"id":"336e23b8-978c-444a-b3f5-e66fc1b3fa4e","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"模块化配置","description":"module-configuration","prompt":"详细解析根pom.xml中的多模块配置，说明\u003cmodules\u003e标签如何组织15个子模块的构建顺序。阐述模块分组策略：深度学习核心（tinyai-dl-*）、模型实现（tinyai-model-*）和智能体系统（tinyai-agent-*）三大类别。提供模块依赖关系图，展示各模块在项目结构中的位置和构建顺序。指导开发者如何添加新模块、重命名模块或调整模块构建顺序。解释模块化设计如何支持团队并行开发、独立测试和渐进式集成。","parent_id":"6c45bdfe-2a79-44a6-918b-39351406838b","progress_status":"completed","dependent_files":"pom.xml","gmt_create":"2025-10-02T11:56:42.397939+08:00","gmt_modified":"2025-10-02T12:24:44.065815+08:00","raw_data":"WikiEncrypted:MaEDad3+dpW6rLlXdYaTGZzcgM6QdfMoDTfXIrROWKzMsEtB8I+WTipfMg+Pp58aCp6se9UrZrPW87R9lNzB5TmfrMPdpcI5DjEV83YYb7dcxZX8oZe5LogUXkiSORT8Q1gnc1cQ1wwgjX+g2gWKxBCAl5DOHZTmkOe9+iY34zeCV93vrbpKTLa05Hl60T4qT8ZTQ5kDSsQM5X5V62skuYc/cm/XyUb62EXSe1EZT7zLYsuUAlKj67IAJ13WNxdNkq1Fv0BE3Th3BcGEQMF4ZKdjTQ2dV0q1Vp/PRJ75BQRuUC9c7D456J6UEAP6Yqys1oTzmxF9UVKkoVV12LpNAbDeks+0Ldfk9XpNCKnvbXn1EyJpaSU7fy5LnN0NHLLocyo7sTXPvEM91ov6Qs8RGjOLIauPg+iG9aq1QLGEpQ7Id7AJw85+RpYRL5tMagOgOjWeGzX6OpOXlhcNTS4vAc6HPD8ug5PyxIxbSXjR4N0p5r6G7KMX82m9LapEzqVTAV/8zitVcBFP3dHdMf1f4UENivxNmeT0vxSwxBEHl+KUI0hpj78jqhtSgoQWiZkNycJNmXAynMYkKaqLxSC2soYMzeFQ2ig2Jgus9r3/6+0M70ate245yao5I1aH74GGgFYImMHRQueKNmjlQbPtIE3QClMAVCirM/qQS3FqG3Px/fVwcmTd44x+JPtNlMBfmxQtnP2M5Lw6OYcFa9sfy/GLwHzi9YITeN7m+csIlzUP5BFGUXQ2ihngJW9WG9sJbtq4vY5xCX0z+ERczcLYR5GJKo+sL2b5+cV5w88Fm62zLzYfkNNz6yOExF632mnXpNOqBTKUDxKR3neXvBFVAzOc+A8Kbw7RqMbhkCUK8I3D0hAi8Flvv+t2WETSIbPLO6WkDOhm+Qm25ycQZo0nJusdnTrae0t527XiK6UrC4o4+9xJ81HZ6bwkj/Zb4hzqce8wczI4b4H0r7yU+R8qoIMMoHVQtDk5BD0tyeI+bhaseux9+qhq9zKh4L5FkByGtnv5UtARbhWF8CtMegwGAVE2hD8jJJ8OICDEapQdvJY=","layer_level":2},{"id":"90570456-50db-45cf-b83d-baff166e15f2","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"训练器构造函数","description":"trainer-constructor","prompt":"详细文档化Trainer类的两个构造函数：基础构造函数和并行训练构造函数。解释基础构造函数如何初始化最大训练轮次、监控器和评估器，并默认禁用并行训练；详细说明并行训练构造函数如何通过enableParallel参数控制并行模式，并通过threadCount参数配置线程数量（支持自动计算）。提供代码示例展示两种构造方式的实际应用，包括参数选择的最佳实践。解释构造函数内部如何设置默认线程数和并行训练标志位，以及这些配置对后续训练流程的影响。针对初学者提供配置建议，针对高级用户说明性能调优的考虑因素。","parent_id":"1b29ef55-37af-45fc-ac5f-7ba18075eab3","progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:00.720686+08:00","gmt_modified":"2025-10-02T12:23:59.199824+08:00","raw_data":"WikiEncrypted:Wfo6CnSQSF8PHOia3Er6Bj6FXLEMnK5PB5ibb/pl/OWZGSM6QvRrMjMxf9UMxg4IqfgVUGAraDSgZM6REk69Z/uxodowwCt+/q62Cf48Ec394XxQxFOAURwNapMsTJnh+vDXQpHWYoxFWpy6nt5UiAeFMDnHnB2zfZc7ZMxomr5Ph1YF4K+WfBq4ditUaPnHtfLXQW2Lfds2NjX1UBZ0U9oYokxvm5gbQPgcxWGqXpCPIOLO61bNKntq1fFcqutu1qoFspxVccsaJziisAECrvqomlw/p0HGuyYKqbcxxTi0yULsgOU+xr7C8SPVeAIVZcxglj6P4xT9B4SPosWwJ+Cs7uif/1rtBF2VHaK1dfBI/ZMZMtMgudzv9bufluBZVWbyp1UtzC+fZwOcjjoCbenMsWExgVPEy/EUBl4T9bTuu21SyBltWiRvBT/OcVbipp500dNQB4gKw39mBK1h1SMZYeNkeKGTaxm+fzxZodV0yea1VobrFoBzT2yAdMfAByThT6yH6cYMVs/iKsZhGUFTtBIM50pFjv0uvv/YEwE0yqRD2l8a1Nx08Syb8u8ADqlMs8BdykZguxqfk2n/hKufZqlOPXjRT83JySmX3qY9g9M70jQUfILIrUJ8nPNBmrT5jKYb0MTr/ydVdfipkIHdbaTObS23EiZp65Xdm35UH2qUs7sDlEHdNRC9MZgcGmjC/yBGy8knu9Ugh2xGeySESFvNyo1SG2AJnhLhmcbrs0X/0CwZoWc/+QkaTilDnkxVFagHGl8+1daj62ZB01LQ+tkB0UJQR+C9R7fBbz3CYYvbwRdjS0CCHaDkz6dZlckMccfW5m+VHMrt2OjGt3NU7u7q2//pissZRkpalDLBEZ5bn9MaCRQC20tlue/2wEMZs+oO0errfj00a0zVqT8Pnh77YYXcxW2dz3ads4QvfLCWjhulBiYR5WxssKU05alR5/QOI7qKbA2jsqIktsfmBd8olIM+ZqPvacYBglCuHbVT3czAORKxpfapnnuGj3tPFPf/+7mGbvL0hdsjAuim1vHXyMYuVuvHsD7RPh4hHLvBp5X+SWLYfFkTU6Tobzdejm5np5QELLjw7CglIZLQ8MCd4RS+nAnVOgIcKijXzTbnAyJwuJ9xToVExxcky+sWTc86oceZNuZOL2cIaOG3jVcr402ETCI7Q9kRPDrHLtiZbS2TYfBr+uVDUmDGem63SRUhh0zchaiM81kM+Pi8ukOQKrcW23xRqKAvyli3gnUYnvgLJef0dz3DgrDln1GM2ArTECadYaLYE/BXag==","layer_level":2},{"id":"5d00f0c8-7396-4621-9d40-cafe989221a9","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"变量构造方法","description":"variable-construction","prompt":"详细说明Variable类的四种构造函数重载形式及其使用场景。解释如何通过NdArray、基本数值类型、名称标识和梯度计算标志来创建变量实例。重点阐述requireGrad参数在控制自动微分过程中的作用机制，以及name属性在调试和可视化计算图时的价值。提供每种构造方式的代码示例，并对比不同构造方法适用的典型场景，如模型参数初始化、常量定义和中间变量创建。","parent_id":"ba2c288a-2b7f-4e43-9ae7-b41234b9ba02","progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:57:01.942371+08:00","gmt_modified":"2025-10-02T12:25:26.973724+08:00","raw_data":"WikiEncrypted:5vQ5s0nS48bl7VZ0wNBcVwmjPnR7BJBILIdGDFBi3el67HQHsP1RsorEzbxvehx/YBI0aZi9UFWBp+WghSQ55hWQrkeJnb2Dy4mI9F0znrDU2d+FekidwO2GOhio6zQ/Wr93U2p6Z21PcpMXXcTBKudD5Ph3XH17kmyJhr/PqRTgBcgGS9KJrbcXdWy/xfR4p1l7BimATRJq07FrG+zHA+cPPyWZhFPf1rurAwtaVLEs3zRNsmpL8lDNe8Esgmqs7eMhnbhWOps5BjoEiLrP61J07lbe5EL1VUKLjey82cmMdO4ZlT8q+s0W4lA0ZQYoTqFi5cnyObBtJDE3Ip6Dk3lNydfYkXeYq8gbc7eHpXcTe1STdv7j+75nq8lJVSyr+yYIl8sYetzr5lHrK5NCDyjY4x5irIEiRSHu3BK+kHl3+EeRy88VKhAsHE3ilBK17krVUvDwTTto/9N52S+EAYsgnHL3NQL8dOJaI4y+IS9Qr2xocJi3ppkTdx4ep0nsH+SP2E8Y4Er+NpXmlxUZWS92UPVToJ+X6bj3mh3IxWiYZMDMZRu2AknXzIhkyT1Dvcqwjv9XEVw92OR4Ebtf7SmiTZsPRDLCH4IDWnk4sJleQNRKypACIBejvu/qkYU0gq0pvjUusB8/g1ZnUcxl9tPn8jdRUYGYRDLYMnA5qaEmfviL4xV3bpA3jYpak4enfF7P2p9VcjKyqMXihHu/zKiKXva+j4uDHGSFubyNgDiGOZkRFSjNYFjwdWsZObCObUKa7FGnxV48jl4Q14kiaIgudhEN2Te6sm5KffTn88RqBv3TnrLgsBz7AKTgL1lomXZb8YHlEfLbWDkea1T6iLauS1rRxsBLxz8VcUW10man7Wfqo1ascNFwT3CXs+xQwppPdXkW5bY8Gfvhashsmcf4WBAa+6Gb6LOcW/3uU+azwph5HBZivl8VipiuNLb5Hj4KosDYLuygW3ALZUPVkXBPbWKvKUsyP49ynEcWFcsw1I9qNhtiMo6RBUFtwb4xPCE1dq6AXk1ZnoiO08ceYacGH8vMaJqQaWVBFhGel6A=","layer_level":2},{"id":"a40ca869-e61b-4b82-a949-1a730c54c74b","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"词嵌入示例","description":"word-embedding","prompt":"深入讲解EmbeddingFullExample.java中词嵌入层的完整实现，包括词汇表大小、嵌入维度的配置，以及如何将离散的词汇索引转换为连续的词向量表示。详细说明Embedding层与LinearLayer、ReLuLayer等其他神经网络层的组合使用方式，展示前向传播过程中数据形状的变化。结合代码实例解释词嵌入在自然语言处理任务中的作用，如语义表示学习和降维。提供常见问题解决方案，例如输入索引越界或维度不匹配的情况，并给出性能优化建议，如预训练词向量初始化。","parent_id":"11b5940a-86cf-4a78-9b03-8d342ebb91c8","progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/embedd/EmbeddingFullExample.java","gmt_create":"2025-10-02T11:57:03.699308+08:00","gmt_modified":"2025-10-02T12:25:20.88572+08:00","raw_data":"WikiEncrypted:UtM2pifNmT3bLWi2W5yLKRrnUwu01114ShYc8l4dLg60cqL+LYGMdjPTjSqyMqn2nnYOf42jJf24+vmQMKjl/YDpEWnp6DBd9rednxtKxlXqu8OifDCpI+qPKHLqBy5Pn5cUbtkH5JwCmtyI0Q41rOjPmSyYe8Wy4CPCNeVPybkCbwjzhT3yeuI7i6Tp1EBohSaIdKBiFtIj/RVtEJTGM0aDHxdI2L/qflb+rUx7fx2W0/lhOAv65y3H6ykwpYz7hvRyvK76iPpZBylfW+TAUk2IhAdM5xjZIaz2A5U6KIdfrygcbERqVxEQWZhQHqigPDiJQVzWxjw+PZz93orKRxDpDxV8PyuX2Rwspw+DrVG5qY2aMt3N/nuXs/K4vKAWaRoV9948ohAVObUzRN4mV3dkB1jlRywS6/h3VlYsEaVKybE2gxDeTInkxe84ijJfFY/03CwHhxn2X3Xcbh+tZAstKqkTLUnN4LmBA6HlaeHs5EDwb1tbwcTX/eDMsi8wuLjHMNRLCxXiEgrS4BEJBP3nIVqlQxHm69ixrBnMLXSQmWfIUb6SV4x4WeDS9ThFVsLsG4AjyIWvLO3mXTmS+OYpC46QTOJhG3JtqS/2r7TqkF6kIztSF6azwiiWngbxoZ8fp5bV6CfUGGbOp+SXkxsncUeY4WVsae7ifRauAi7Vc0FpQBtxSsd+gXy6g6m92L9jYV/FbTS8qTHxFr+2+CCkWDiprZBTRXJTeEyOs1YlUWjhFFcv8LwSlvsaYaF0aGtuCzaIPMu+aeEZhUFaeJ3/eTqEF8OFIZjfHySDOG5wbmnpb1XoOBw/x4xTnSxJmgU8VJyxWSLdPXL8k/JX62yJVxInjFmwaXTIMdKgjVptDYLGCDfckR6GyrRXyF8i/AISCbwxOErkHlHvVHw61N+GS1zACsHBO9WvjOo+gLIXKMFRqGr6S2In8/Chg89aVFN//Ukx2WIo+jFiwCPrdDSoKrIGBSGBHLPiJTGXM8DITqZNNydnEK48sfYWgFAdPUmjAZYn/yBswCwQD4jwHqUNE4xEXDvbzxvh9kzLwat1h+lssH+OTpl0Ws/WED+gbnKFnX0cAcV1C6aUhEsvjwBZ4CMhPEUg2vr9vyL/S2A28hxVOOcj9tOxDAwyrmx9ZRAelhVgSQkuRcl0dJRz59mG/GU0c8Sat3EIugaWHlP3Uz6Y8uHfT4pzEZcQuoRq","layer_level":2},{"id":"db88a95a-774d-4d3e-a8e3-593b369b8190","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"单线程训练模式","description":"single-thread-training","prompt":"详细解析singleThreadTrain方法的完整执行流程，重点描述数据打乱、模型状态重置、监控器启动、批次迭代处理、前向传播、损失计算、反向传播、参数更新和监控信息收集的闭环机制。深入分析每个步骤的技术实现细节，包括Variable对象的创建与管理、梯度清零策略、反向传播触发机制和参数更新时机。提供实际代码示例展示shuffleData参数对训练过程的影响，并对比开启和关闭数据打乱的性能差异。解释该模式下的内存使用特征和计算效率，给出适用于小规模数据集的最佳实践建议。","parent_id":"9aad2933-db1e-402b-a7d4-00b40d03c80f","progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:18.396955+08:00","gmt_modified":"2025-10-02T12:46:33.585695+08:00","raw_data":"WikiEncrypted:neigK6RjqTPkV4w5UD3v2wt7vTQgfNJYdkzC6XcplAM9xVymoGFTeWzqLo5TfdZytOcCPTJj8Y1xZgkvNK1k80z5oL9eA5KVLXN69r8A4c11lb1vDsYr680ckim8LzUuE1ICv0sqBP59pnANG+6KsfVvWqqLT3o0B4kiF1DzP0tGvrG6NfHiJ8RH6qX+McgMwoU87eqA2OHEV3X+3gp23nPo6oReWxX2WnJL4LmZImUOcijoacGT9j9pox/0/tilkSVdWsNpUzj21Kwyrplqkm+0ZEzKLCPBkgroEW1o8PBnitWZv2N1TSorZX4pskOvppPpaDMr2cO8qdVdncTA0gLw6pH8WVcYjdENhJTcqJF1VJU7U5tX2wVYdSPaG3oc4kMxptDYwfuTdrWR0uX5zb4KfPr42UdZAOuX4AvfjZ43FiQtV+6Ri+6EK1pJq40EJ//K5aA7W0b9YrXv5L/p1HlWr8Z5cl93Wo0Am0snLDRdxjwTsOFwzv7bbtEZUazKO6yfBwus/wpcpwhbbsHFRKpr0FS9C8j/8hGuxnGgZz82I8zrdSn2mtl4efeoEwE8Ek7mHLyHuB7VUQoSTgwsbsx0BIJVEZUstiNoTdAHXr7Zdpi5MQZULAMTWQiJHuqiIQb2iTbXPjEkM54g4MHK2/usV7W0Mgf3y4z3PhddpAfq5u58AEG1cWhvwXlBeuWlnas6BMAvzS9TXzD+kbypzdS4ncgDi9jthm6onjCHiJRyhjaR9f10fQLrm+jUOOmuHw2Le49t3w93Ec1ibm3A9X4jmTPYZBPTPCZ+FH+Oy5d8Ll7mQS1y275NMwZlzxtKM6dR/twbMSANcxyU67CzkcFv4ubdWWVa/rV5TzUf/96wkEnwxs7BmOAPd9U985AjfUiM4bJQmBIjo0BBqWGuSSLo7ylBbRYKqi50yf5S0zVSuyTHSa296CSuSo4jTYplC+jpcRIjYHMJq9eQj5+0ap6tQF2UhYTqgNGMvNE8lVY4I9x4z1mVdp2mSOsyoNvia67FWvj+C9PcPB7Cx6oYgcGwvEvkcMO5pAO+Ev2e/m9cGOBd368iuh/Zi83h6qiPfinQSTtuSs06eevwqhD/W7fAethWbBonZKNJv//x4eLwNwvQ/UWlj8NWwM4B6rQe2Tr0aE9AfJ7kEOA7jge/GLVNih3CDdjEmkFVYfmPF5LD4/Ihpe0wf9SESTp6fHZeXdk5vOBPgjllg6I7G8fJ3ip7+9CGt/SnXg7t+8D28dia2QR7t2/OTXKqqnKQl10HzOKV83WaH1Sx1mrCi2a/eQ==","layer_level":3},{"id":"7d679107-3ccb-496b-99d2-372047f301a7","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"内部模块依赖","description":"internal-dependencies","prompt":"详细解析项目内部模块间的依赖关系，重点说明tinyai-dl-ndarr → tinyai-dl-func → tinyai-dl-nnet → tinyai-dl-ml的层级依赖链。阐述每个模块在技术栈中的定位：tinyai-dl-ndarr提供基础多维数组运算，tinyai-dl-func基于其构建自动微分系统，tinyai-dl-nnet实现神经网络层，tinyai-dl-ml整合前层构建机器学习核心。结合pom.xml中的dependencyManagement配置，说明如何通过父POM统一管理内部模块版本，子模块如何通过groupId和artifactId引用而无需指定版本号。提供实际代码示例，展示跨模块调用的编程模式，并解释这种分层架构如何促进代码复用、降低耦合度和简化维护。","parent_id":"7ff2d60a-8eb5-4cd0-bfc1-56b4e6e1ad7d","progress_status":"completed","dependent_files":"pom.xml,tinyai-dl-ndarr/pom.xml,tinyai-dl-func/pom.xml,tinyai-dl-nnet/pom.xml,tinyai-dl-ml/pom.xml","gmt_create":"2025-10-02T11:57:22.351377+08:00","gmt_modified":"2025-10-02T12:39:18.896026+08:00","raw_data":"WikiEncrypted:jChb3OmzaVFSIUd8v38aRpLHSBnHGKpFmqYIl2AwWs0B3ZUGu21wJ0mA/e9ru4ine+ggnu/Pv229SoH5qAsEm2V7SbmqmOyF/iVsovfYEyrVlk2T4WN642VroPMZtN1j2/JSRd9bT/0rm2RSNG8RPkqO/O/DBm3e7lI86nGMZEFngKCzXvhitbbDFFPVPX1jRPV1BY5+/Z7FpDl4bvAvAk3g3OJdxY+r7jakNIr+Vhz76biy4sZGJiQGtpmiXy1Uo2LsiIAZUC/qwOvi8EQBqWxFUFsRrudvz9RTHoLZPXyKFzIvDahEUasZgqeds91HZaRRv4oamZ03wZa2TwysOpH2l6ZeOvoTmUr6QluqgqoV4zTDFBbI2q/XF16GkQ2tj+Gl7AGgzOYlla2SEeYylNeCnAhoHXqNVX9AWHa+Jl2gLYNQclPI2v8jSW0ltH91DUqpWT4KMF48CR2K9aHaERduqqL0vufNqb9BsHL46dCPu3VXesA+nAUP/z1+U5wjOpbyYda5lS5eLoRivSaSTRdmHue3JSxyO65Y2llMgLWBH7vDWSXMFKuFxSXt1YkXx4ul1SkvxSljL08rc/MX6KTEW5rGGGMPYhsJqy4d4+2/urSuclQz4qVacwPvEqWCvI5CjdqzoFGBAtqLGTM/8MBFSVkV+VZwtjD3sU3m+iNWW3RgmBN9GhEhCJTLctsA028FLlTpdMko30MjnI7SFaQ1P2vUAKYX+eCjqX2RTfAypiG9ODZBICTxD1UOTMPPMmNacFoLuQa14OIceMHoei2fQWuT7aqVi3smle6RsPsOGxNbtHSz8GyONXATX8N9V1Jbyayi8fnhEiPPW/Lxc+0xNxLd4mIq62ztZfUWA2VlRQ+V7Di4UNl75e2ziLRntt9k32nKT0jc4BDBVl/CABHspS2gCZ9faRsijcVQPdBK7ZMEFmDqPJfDgALrx+h26GID6DxkUGbnASqkRuI8kqx4UqROEdmfq0hK8Dv4R94m+OXlQU33siic9kT9/1CrAEBhA9tmwBSR1WTVj8VjSz6ySB4Rbjuwetc9NmDI2BXROhnmGMomX2+J10gX40JRow1xBUlo6whLuemmOb2lGT6EnFl3RpwSjOzwh11ffH3llAsYur9hlWS3bAJVMMgfjkUoMhxHraMnvr3/tSv4FF3Kn6qKVu16O0omLgp2baOWTPf0jp9mqodq93ztQGpDta7DD+5kxdIYVL7DfhJSUYOv67kGn4isaDqJbeBjOyQ/9DwJAJAngHEUV6kT7Klf9jDc346Y0ln+uYoiQD2Nt+DCDsUVe8SJHvjy8ox8H0z2r5wx7n+WNK/F4BvCWuP4/R+UyRHQCb9uI8KQeadhmJtf1tb0bWyW6/74Hx0KOzoqUskLLKv06HQunXosbRZF","layer_level":3},{"id":"29f37df2-a274-483d-b5fc-9551dc19fc15","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"DQN算法示例：CartPole环境","description":"dqn-cartpole-example","prompt":"深入分析CartPoleDQNExample.java中DQN算法的完整实现流程，重点讲解Q网络结构设计、经验回放缓冲区（ReplayBuffer）的存储与采样机制、ε-贪婪策略的实现方式以及目标网络软更新技术。结合DQNAgent类说明动作选择与价值函数优化过程，阐述CartPoleEnvironment的观测空间与动作空间定义。提供训练曲线可视化方法和超参数调优建议，并讨论如何提升训练稳定性与收敛速度。","parent_id":"b57520d1-b55e-42eb-a5de-b0afbcd5b0a3","progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/CartPoleDQNExample.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/DQNAgent.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/ReplayBuffer.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/environment/CartPoleEnvironment.java","gmt_create":"2025-10-02T11:57:28.884463+08:00","gmt_modified":"2025-10-02T12:26:44.726238+08:00","raw_data":"WikiEncrypted:1wEVhquQ2iD4bE526SF7Y/EPIbFnKArZHll/T39Q+t2NKz60zHo5Ey/q/yHaSgQ3gxHmk3P+rf0l+NXmNAPlWam4Bt+JhL23wFCC9XcSTo3Z+nxF+eWo9SI/CjyTHoGeeFLIfH4fRa1HcXVwsbLfdEihred6sznSB1VlwZTQlVEEziDIlwyd/3Um2TOK0o6XCime5BefPSJTI53N/lT9gzl9kBI+ISVwuPEnjp/J49wNiTe0oCjQFhdS9wcOZMl7g3JbEbyGY50g4wT+IxszHtzFraV7Il2pGtVOCjCAx9j4ar2y2Cg1GVpm8b2OOt8RoY8Yl7lhdEa3erxbRBmB52eGchqs32pFXwqY25EeB1NC7MvnSh8SNszoD051FXh3A1ZUu08OtF3ZCNKnul6teZCDntia0joxnzulgaK/6xMxfP0pUOWrmj7LiP2IOG2N1u9UMUFx+DrGGlBDz8+y0knm507x/fR7kwLsJ7SuxoZOfhhrilB58+ld4beArQIBqFE9cojQmK5GUGUjo79m4CxAh/3Co5KKoVQtPuPdX6wgxKEv8TQNKQ7Sz4i5yY9iUaHk38r3+mtSC6BG8HO0nAdqkee4u7C0y1eGVFzW2YcdWKAByoh60MV73egRnt/3k9lZ7NdEQEPjYhXxtcrhJ7REc9+OmebJCQSUYyyfALEM6p9ZBQK52kKVwvFY9bT0n7f4FO03xTi/95aMbzDwAyYMy+ttPChRIayA11oLEQ/9qXlgIBBYSq1veDIH3Z8FcUvwqB4JFnKza3T2Pm2/1TX8JWMb544060XK293aD3s7CL4FK0Q9bN/aRwzd+NboLxel6pZRaeHRainhat5ZNfsIHAIYDqYFtB+xzsGHuXrGqC9ZrWOfUoUzH+K4UEUMQuE1mEcRlRiwTWSSwZvy48RzOCgT6YbtoE6VVNciKvIHIR07dmV3h8W5QLxxL4XElZ5Nycm53EqxyMZD27tqVSOiPm9H0EyxY5+zmPaBdHotbPJFYQcdEU+P+YE+zhoNnDPsMI1FyhzDU0YT9t4IO8Th9l1WjZIti7OgopGCJmeg5stnw43AmwpI9qk/tTjOe/h0OKKBCgQAdqHSDn8+hpRt/Mhh6bBU5JzAXg1MEmClc1manE3/XLM2JwQR8Ljv9Zw/ClDTzSS+J28wHR5fdKuYjFKh9oYMwrFqmB7lH7Rdn5j7hnzjLIZ04fFggSzd1tO/Aye/ejI62Y/W2HqmpUeF7Eb/958h1Ghudrxifi6MfIyDQvY0p0r9gNCg3uqrXW0kxeux4jLT2RZeKGpk+RRrH+MKJ0wLP71Qf+yX69W2460XxMVJAX6FmBUVBJ2xl7zxeKRYoPSHQc6A7HsQ4Rp8eYOcpoFMFjXGNPcJNr8g6sPi6Fji9AC7nF7XlSiq","layer_level":2},{"id":"f7e2824c-4a2e-422a-85ce-69d69f4cd461","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"并行训练配置","description":"parallel-training-configuration","prompt":"详细说明Trainer类中configureParallelTraining(boolean, int)方法的实现机制。解释该方法如何安全地重新配置并行训练环境，包括在启用新线程池前对现有线程池的优雅关闭流程、模型并行兼容性检查（通过ParallelTrainingUtils.isModelParallelizable）以及配置更新的原子性保障。阐述参数enable和threadCount的作用域与约束条件，并提供动态调整并行度的实际代码示例，展示在不同模型状态下的行为差异。结合代码片段说明线程池重建的触发条件及错误处理策略。","parent_id":"9456a5ae-1900-4d0e-b794-4322dedeb250","progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:38.155097+08:00","gmt_modified":"2025-10-02T12:39:06.163993+08:00","raw_data":"WikiEncrypted:lhNRMh5kNTxTBCRgMKyOH4JasnAcVpMkqSHpmLBHQjJxV3HDIouT2xWY4SQFKQPidY5lUKyA3HO3NYTnA85MQRwxlgSilBytr7iygZ5R1/jK9yYMV0XR1agJDEvVYvYLRxeuHPI5yRmKexVNIh+FSyJv5HLONWuUo2w+NMhJtG3uALBTiIZplM6YKl+xRTfEadLPU8xMls7hbxbrI8D0efWWcKOoSYyVlM6CvziNg1F7yzRfXSgfqFn/ODZ79gCdFZTdWxFMrj8LA9eYvc5apDAEAe/If5Hkt0Djs08r1lSUIppWni8rKGa5JIDByINxxuJ/I9cn6KI02bFF4c3H1C6TcwHMxsrHSIWlmVENpBHYklJPlE9hr4T7TstMvrWwWe99oPZkNrnsCESUumopMGW6sxWztHdrhFbUNbFFdvr3bgMBCQqQaVoOULtny9GeUjWIendT8+xRjvqTPBrVdB/Y+cmLBUYkWWbV6SEy6YFzytivHkmhS8pYZDhED3IITmuPH9dZZKun3US8vzKsEtEramA2LcVb6tKy7mcK4xQndtMJu2paprfJtghk1RmmeXkWh239s5rOk+3VReHB4TS0xWXhDS1F2CBLD/YLNLRzGIMjWPqfD0Rc6H2YvIdwrBoyxE+fFHgxh9P234zT5oItO7BVLASC2fpESFpr3g6Lo7bM9UhR2Agu4ozmZ9FLlO7ellhQJQWySoEj91ej+IhiiJhpjNixDSUA1wP9WSWYidcnRUF5PNaxk9zL84ANZYXuyNv8ubXXmlor+iHc1jH3Hkrsh2JF3wU07iCAreYntSG1zA65h9eTKiRbVfsogk5RQbC+cZYKj9kwOIYBTmGvH8r1vHvUVB0ibGFSY9zqmKPcYII369ppUxuQZNd8PUIRV4RLeZK9n+taG+9kOpM69mB24w/tPD06lUSHU5D0MtNMgRhufyaa1dR3z82TfjsKQnjEvmZ/ZG+WLeiqUb6rLJt8xqHWigP5wP/4vDaz+kNBA7ptUk35TogDjYsA9ounBetHZ5cq3C/ZAyAsOCH6GxDcQjbNKeo7PprwpkRDBp/rP7gUZUefVdIpSTY7TGxD8j6klplBjKP3a+f0Kfiuqky1Zqopl5OeelIWDpzCsuk5Uiczf19ZKeIaBmit4hyB1hHSddegqkUoGsJ27Q==","layer_level":3},{"id":"4a1c6f9a-6406-4f40-bc46-2b15412f9144","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"递归反向传播机制","description":"autodiff-backward-recursive","prompt":"深入解析Variable类中backward()方法的递归实现机制。详细说明当调用backward()时，系统如何从当前变量出发，通过creator函数指针递归遍历整个计算图。重点阐述梯度初始化过程（默认为1）、creator的backward调用、输入变量梯度累加策略（add而非set以支持多路径梯度聚合）以及递归终止条件。结合代码片段分析在复杂计算图中梯度传播的执行流程，并讨论递归深度过大可能导致的栈溢出风险。提供一个包含多个操作节点的计算图示例，展示递归反向传播的实际执行顺序。","parent_id":"2140e0e3-a193-4581-a675-3f62a43be14a","progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:57:44.362225+08:00","gmt_modified":"2025-10-02T12:40:13.053475+08:00","raw_data":"WikiEncrypted:H2Wkcam9TCJMx6ZRVoHRDqiCPiHCPhEYBjREv+o5MpoQmNqfc0rwn1QLEMaTAURzGxBIJFo5kCcgJniDVQM5h8hByF10qCRRs0O1ulCE9tkVMVQ/UGHszxfDMjCguzoyBADsaEGya6SjradWTO9gOixjkAcWCFhKWUK+2L4dtHp2kgmrztfOr0C7s1GyPX9ntWz+EoK++9Lt9ppVWPJCFXG+3avSoZaXZIrPM0p/SWMPcQTi5QwF8E8QjHPnJh5dPkLLkFf34roN7k9nVQ1rbwPOg1GXIoDGNtbARMVpKbXZuClpHYKkV2a5QTIwOpcglbwS4PAquYjibLMmUVqH8RVwou7ZaalwelDtlJ4BmNKPEuRed6n1ooET9irPbc3MPNY1VB15qMxGCb3bi+ZVq2V2kqq5VpBZ5TFzP0q32o88TwqTTSTIT8in1cO/NIHI87pKr69CNz7xosooRpMtf6Q7Ub2E/yWTANWiSWHcKtbto0hQv1utHSLFX+y7j0n2qSP2gK1ESDJ6Qkl/vKSfLXbJParJofZeuqse0QHKDvAy4oM8xqLHKhspHgYZzjS1s11+svrzGu4hzvcE7Qlkc2e9WOZsp6B2mAFRwRnLZMl9qjPUWVRX6OobZcou2dA30B99xp1l2Nu+v/l44+vDsimmBtvowCRRJ7URjSUM3/aNo3I65AKBnRCD9lz1+ugam7LZPSwllkMUvu8o0THP6QW4KRUtWSBSUVBcBNMCsERwX427V96VjFeBeMc6rHBUz/MVD9zl7GqzvBk5DFAESeN14kdu0R35CJvjgzdLZWVwh4Td4bB8433Ujbi0SCutPqxJ4lXl4kZZ7xdZUaDcGgCRa6YbcjBb4WgyCPnKhsXY5/TGpqDYsaP6+hN0EkYjgC1yViXo7X2R1itYF4xeVZdVjJHZx/yjsTDodykMpc2r9MKKpEX49mCUVG8bq+WhenMkwdsqtbFiyr+rdhKsyUDS3r8SMGXGo1LtoS6fgVQ5HMEk+Hy77H/fRgf/FC+lePnogsf6Em1MwnVdqhekfDKSzCkuWEaw5viqxFppXeh7pS7Mc80OgTObYZIBVQ3CK4wuH1ArlO1xPsX1Dx0KDC1HfkIyE6EMg3X2zfoMuoNctQXW7G6kztGZPVFW9WXB3eqzyKp23IiTnx+nR02uBR37Y6nTwpKovunmOrijwdwLjlRHSU/H9Dbjc0ZuIQ+Z","layer_level":3},{"id":"68b3eab1-bca6-4018-bdb9-af7a90268306","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"SimpleRNN示例","description":"simple-rnn-example","prompt":"深入分析SimpleRNN在序列建模中的实现原理与局限性。详细解释SimpleRnnBlock的前向传播机制和CompleteRnnExample中testSimpleRNN()方法的训练流程，重点描述其简单的循环连接结构如何导致梯度消失问题。通过正弦波拟合任务展示其在捕捉长期依赖关系上的性能瓶颈。说明BPTT算法在SimpleRNN中的具体实现，包括状态重置、计算图截断和梯度更新策略。提供针对SimpleRNN的调参建议和常见问题解决方案，如学习率调整和梯度裁剪技术。","parent_id":"e98918ce-2181-4bf2-9bca-c1fc79489513","progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rnn/CompleteRnnExample.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/block/SimpleRnnBlock.java","gmt_create":"2025-10-02T11:58:00.931082+08:00","gmt_modified":"2025-10-02T12:41:02.830922+08:00","raw_data":"WikiEncrypted:HcWtkwkAT5ktorTuU5kl/h4xI72QS44LgfF5fqSlvzglvQygLZHPSlscMv8kkg5unyiHENx6olTHcX+zzzX05j5fgpfXbHVmQpy4IhIMLkMiteVcwTY+BRfLcPR9SBW3OPmVq5Gn/rsTUdEyT/tDBSvo/QLZ/M6f8yOd8PbDJR0PT4k1VOPEvjLTilqRywAeghGWF8+R1hCkENuo4XFhFQAEpioeTJ1d1PCnRu/oe2jJ+QkIb8I+wL6l7DlsJxW7Qsqe7yiUAFGEWnWiofszobqjBoGzr7lAB/LM389rmhngKLj9pz0eU9qZyPbJTRH5XhkcfatEucH5BEqOPjJWqApSCLqIoDT4sg40zQEf++6IdZKxVlaXMZPLZtRLwX1OZdwta3WxB34MBGj02qyvQEt2r/fkOmfKYKlRr21Uc7tZAJe8oNJXELNstlWFoX32EeWzgSJdxiY6WxVM13nAlzj+zrSevXUxVyiOqIEmz4BPOPTjaSae0CTljEXGvz6VaT3FbPnngUl9u7NHM1PqKLc/CkhbX0Z9c5KZFCetXw4AQVuaVo5Dq8I8c0dR+8y81aNYBFtmG87x+UCUOidk4P2soNxrGkGoZG7UzI2XJE1UadAU9cjNGv5S+nZD5RqFcSbS8k7qN+gkquhDkkNTQR13s2z2CGN1otd24Q/RdJzlsMktLxqtr8WMHLS7FUSxlCioCdmMMu5jEBTUKZNfG/KfLcM3pBnUweYgrodnc6sEeqCGol6wlwqvgv2kZDbYwKqnBqwfjbGfevqNgqji3FCiPxnxDaBL/1ZDn8HN0TRBsAgyFi7ad0S3pOei4nJk3sewpqSyXcVn2AxOvU2Oyy2BiFviSypMpxSAG3LmJCSORB5oiiNERhdRs0bPmmrwyIfUh/movwVjXNd/4az8yF5RbEA6X2w+MZZ8j5DoUB4vKhE2INRWvBlLVtj0VSYh0zjUbgP3n9rTwoVA4mzFZo2IzmOhzQv0QzBv/O12wgbBJ1aTAXnlAYG2uuVX+G2xLYwYXJnUeMyHiouQcwJeKAcHqVz5WuBQZ02lNtwN+BM5M4j3SuKeJO3A6ZTzhZcQ5FSUurlze9M/iRh2WraXphAgKlk479alnzY/9pHiEx2UICoFEAbQ6yMJjC5Kynfcfwd2crt+qxoWzjkvawmx9M3KzRYIMUc/BXdigAM7dZwe7SyfKlAZenZOFpTT/hN8DZaSZLqdFPK4k+iSBA+AyNBwEDTiUuG8Esn3L64ntitpD1NHF2fBgpi0+3TRZNor","layer_level":3},{"id":"0ff0745f-5d83-4987-abf7-401a28fee1fa","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"四则运算操作","description":"arithmetic-operations","prompt":"详细文档化Variable类支持的四则运算操作（add、sub、mul、div）。解释每个运算符如何通过创建对应的Function子类实例（如Add、Sub等）来构建计算图节点，并在前向传播中执行实际计算。说明这些操作的输入输出类型、维度匹配要求以及在自动微分中的梯度计算方式。提供使用这些运算符构建线性模型或简单神经网络层的代码示例，并展示其在训练循环中的实际应用。结合代码说明运算过程中NdArray的内存管理和形状校验机制。","parent_id":"76d2f906-894a-4c13-9503-c173ef46d3c2","progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/base/Add.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/base/Sub.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/base/Mul.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/base/Div.java","gmt_create":"2025-10-02T11:58:08.70655+08:00","gmt_modified":"2025-10-02T12:41:40.709396+08:00","raw_data":"WikiEncrypted:Wx7voAILpO/sH3s5o5KpBfPCs2zqhNSmiPHxB4WDlVNiUci+3NJB+ml31rP92wF1yrSlLfHUDBr1z6KfCHWQIYjYd9lgjmBffPk1j7wVvRxXvaCI240byNWaBun2ZaySgh97rs7EToweUoSM/u8dzJb1HSmvquwtbVlGH+ioD6WgfdcW8HIm80ppNQOIpuTUEQC8bUFg1QzPYXVoXLrFV18k3ZLwfdNCMR0PkaavKkR/EFCcwtUT/Y2y46Al2wqLICJFsXedKXyPxO7OzK5dOHzunRaZKbovFjwfZr6cqXZJyJHVoExn1onO/L+mCioxPKw0xGlmRBY4ELItk43x1kpJlU66NG9gklMN8ifmml07bfJdf4lfiNoBYlHvu4Lpd8Ni0REutAYbfpNPr3FGiV5cunQm2QmtHx0hC5lbeb2/1GJylDNE9LL9GztvyAhad/1xMkfAvFjgZ1t4X9T79KCfVVtXdm3jUmHzF6gEwA9Sfl756toUQ0U5tIiypRkswYVsAld6Jpa1+eKdGWSSAr7O24yVZ3pOafBiQuNB46r47+3RovSOEz7GageAiFOMvtw3xjzpifA+C9Dg8lpLpQFlk7VV9FDloRvYD0T2wIGQ/kxjrOd6Oqwq6OOAcbCnmWuCSnvWLfLoy4kul4IlqpYMwkhLAIS/7y7/2dXcHES4QFq/YI/RVL8T0hH+MYHcgQagL0slQV26MaIar+FeW9z9usW6X/4Wg5LqpCg4egQ+NypR5BwQ7kuNuclCXqpxYlYVn9uoJ4Rukaq575io8zoiz34youLdL1QM7BedLvRNH7isYmHdTEDJzvoITV88KlHJrgPHFa1nzQsIjIt4i7wLFI1PxWIlU9f/UFMKybImjfbTuNK2OO0jGcrgCmBHJLP1hSXvHlFHGQGSzt6l5LEszN8hBufeQthezuzHS9mL9CDeEdmvZAJMlqIjRM95YBdo2xLdVICjRgGkFr0zKEdFsHV7/JtwKnLyzvkcyEXBd4mTJccMA6+zxW55ndiy4awHTFLC1Wve8JszLrmVdB+6uZTAcY1WU2hGVA0yB2RmsDLrZIIMH5MCg5kYYNkDOCDwPG9LU0/cKvgrx4nxxC/GNISfUKM/TsjamjX5l+IMHC58lKfmm45TsejTOaxYRg9mU27XXrYnKBTBs6Mf6Aljr9/pTC2JnkUBFY/gYW1e9vXyMsa+6tRmuj+jwL/PZN2f+s15hzWl9a1X57LIG7IRRrFn+Zg0g/8W4BihvfpYZcXppUK3J7xBVLqY4af17/M45AzacSRdpN1+/nuS7jScKoTxP4Q96SzKHin7Ry8HsWS1F0dTTQquqLO6e0TaldlDVRVkASAshIdIxyr+Y4ULymKCxw16Jow+kTjLnubiJMNFzp7TUBHKIACN5gVmr22ClYzSyA5q5JSWJVeidjy3TQy8y5x9E6G1BERulFpEVzMvD0rVaIQYKCPUQKEb6GP3Jd4eNb87FPBZa3MtMFJOzn2YDF77YXeX7EOS/sed+IpGjDMFvBj6Vfxk32El","layer_level":3},{"id":"ae360708-3e9b-4ac1-8a77-98b2d517e7c5","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"GPT-2模型架构","description":"gpt2-model-architecture","prompt":"深入解析GPT2Model.java和GPT2Block.java中GPT-2模型的架构设计。详细阐述其作为Block的继承关系与组件组合模式，解释模型如何通过GPT2TokenEmbedding、多个GPT2Block、LayerNorm和GPT2OutputHead构建完整的Transformer解码器结构。说明Pre-LayerNorm、残差连接、掩码多头自注意力机制及前馈网络的实现细节。结合代码分析init()和layerForward()方法的数据流，展示输入token序列如何经过嵌入层、多层Transformer块最终输出词汇表概率分布。讨论不同构造函数提供的配置灵活性及其适用场景。","parent_id":"376ca184-7866-43ad-97eb-ee95ca47d2d9","progress_status":"completed","dependent_files":"tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Model.java,tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Block.java","gmt_create":"2025-10-02T11:58:13.036974+08:00","gmt_modified":"2025-10-02T12:42:38.732624+08:00","raw_data":"WikiEncrypted:lpOPyi7hhDSuEIQQfcgfgx7+reC6ze8CO69vjJ3AiywhvYTfzDQZQcmtsmf1+mbJlar5PKv4SpM3oVXOrP0shV6Lfbo7Yyvjezf+x+TZAfnVS1u5qaTBM0bPtVUJDlprCuaIyxZ2RWdufybxCkRIBSWhnvNW756za6rC24/Tg8hXdyxEkz9Fd/9Xmbi5mAFzf0QBlBZ9sC+Wi9PiA56cNoyNrO3fpdW93H+Fuv34i1yXKyTBVBuyVgDQfJVCJ9oMw3sjXFCK7kgiXNcaTGzJWD0a7qFgycRLeAfUANnDy0dmiqv4iahxssOOdLfZtabDJSuAzk/Z32LcCI6CiaxSU277CzCr17B3jPCeAlO+o8JUgr84SPVEm5Yv1AW2fV/TZCRWU8BMS2rtmcjQ0od19Fyw/BS2M28xu1cL4dcTgPeZE9GdKyUz8uJNz9KiVHF+BlhtPQJpIGMw/tYAaKSRMBBRD3DxZr1NcNH20PYppp4rRqW0X9wmTH9saYBUYDXPjHLr381yswhLZIC4J9Qr5kh8FhkAJbzMa0McvW7WrFejPug5lBb4HAyg/8D/J1N1mOJGJUEqQBbGQ7wqAjyr5wlTs4Y7H89NbDKuKI9j9ydFdAa9p+5g3PbnleoRqrDm6EQZPD6i55n9D818jH4AkJGj/Z+CRj/MRnKOPogg9K7E0cSaMjFd6eCoIiwnGrthYAWg6VgNK1SKtyxctnYpQyo7GEHhsTXXHTw/r9sIy4aFrnOwV7x3bHL4AgI1YUXd/C56PQLn6s0SHVIRLLN0rwOHXmNmZYd3+7q0rBBb8mk5/AlspuCZvpU5sdK6p49tPcd2B7p8YeZ9kZM/G/1TkZUnLyVLDYWShyorB5oKznJQgoeI6AI523yfpb12eX8TURTlFlvFz+90we8meN1Q+rEzz8wrAu/ABGUpvRUAfUusL1JeEQPkDF3mZSzaVdl3wAZgSSvtTJiD6gs04AYhAZi/HaFsLFcxYczEKcMj6uM7xUvTShF4MdMcnIWLZw/JPZFF6R6bhHbXP24Njw3ENtKp/MTsaQaD9y5A38ZKPr59mlAL4lHZdx1gm5rGWCNvZzC6c+fh+/NtIpCJ7CfJsiACn6Ve8FHlWhhQUjBwCYKpvyCiN7NGZZFUl9g4k+KEfENLSvxR7TADSKBywknRuMYaldSQhyk0OqL2gfnkft4OHBoP5uEVIsmrE/87nDu670DAXjgagGZwdT/gqc+xEbOa7iU4cbE+g8V4AVfGETWLEuI70M7XnLL+dIU1kaOOXkQZH3v2eRrpHYP8K+E7ZWpIjXuk8sGCEEm7FFmZWhw=","layer_level":3},{"id":"2bc08091-03df-4eed-9b9b-427fe848b3c2","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"技术架构","description":"architecture-design","prompt":"创建详细的架构文档，描述TinyAI的整体系统设计。重点说明分层架构模式：从底层NdArray数值计算，到func自动微分引擎，再到nnet神经网络层，ml机器学习核心，最终支撑上层agent智能体系统和model系列高级模型。解释模块间的依赖关系（如tinyai-dl-ndarr → tinyai-dl-func → tinyai-dl-nnet → tinyai-dl-ml）。详细阐述计算图机制、自动微分实现原理以及训练循环的设计。包含系统上下文图和组件交互图。说明Maven多模块构建体系的作用。讨论工厂模式、策略模式、观察者模式等设计模式在系统中的具体应用位置和优势。","order":1,"progress_status":"completed","dependent_files":"README.md,pom.xml","gmt_create":"2025-10-02T11:54:33.687195+08:00","gmt_modified":"2025-10-02T12:00:10.420399+08:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5QXmatSKh1iukhkKRz99kcVnjJ7lfN5yi4omajiF3ql4j4cuTOKg/VLkjLAyqEu4at/cTF0kbhPD2ddPnMG7UTvjld6tSzSdZ0waPaiIWzNkDXVLkGH0/LJ8nQkJERIgNh8ULO9gWHUL/ky8SV5x5l0DAzOCLxc5W8aEvCJK5pYVXRwNI3FBbYvbcSsdPo8YsQY/dShaNxTZaNMxd2WpOknXGbM2FGPPfIr2oojLCyGfNdmPEQX4CNzKOPdTROJoVLQY9A0clWHR/ktmGJ1T1+fCWpDVEPjx0HB0VWspfHZWx3y+BPY7HIhz+doKIADJ7m/OrcLJkEaqHUVH2k1hDCojI1sYNdOdqVtx5Kvc5iyUGQIgju4p7DJ7LQ9ArPIMMAO1ROBkuudKJnUkETzlAhR6evZQPJTQPBHcKAgQ/gBQR0WfoleJ8u+wfrAY+JI3oIGnRqGt8715/f2GCwjFv+eVsx8PxZ2eX1I1BjmCQ9JINSqbfyaMHP78sAtYHnbIWWZL1vm3p9vfY1tz9GnJJXGmM0zH655lsga91MkZqi9Le+Yu94Db7PEPFhr/CZlH73ryEPUt5g7KpnZTJtpeo58gHSl++j7SEKn/VnDo0377QUjVSeiccPup46mDpPf4tAM4MdAjCfG46R0OlGVAVnprt07fuKEarXI4kISgbdtRo54Ik1mj5rzrXw49pXJVC7OHBFbsnFJe8RC0t/SJ/XtiYA6owkntozM3RjdjtPM4FLK7j04CQNVmIVgohV/7CzC/ah0Fd+ngBYvx6aFlvfxNkohopwfaX5p5Csuk+fVhVrdeZH49uAX7wpdcYCar+tPfCKfkdo4JfiPnSpExavg9mx0Fqb/XkA/vnccOP31cPEbmLknEEyeP1infSOELpGxsfTxd7Q3C+pJq6rmwbUQbuAGZkLbb3mgEqAtobdhpUtb+eyQoPvV6rK9vVxY1IW4bpLUKQI9RKOc0+Gl5kSXMKTH+QgwCokCcmQS7mayrJb4nAzqywuTct2EiRRTzqo6ZK6NkLidRDyruTACPyPyP4dAdvk6QqnzHr9mxsyXWwOlu8u3ZRriqMMGI0MT5Wr6nA203KJZbKJKt6meC9G0UCzMTGOvpG5Pg63otmzkB7Q4FzVrDxdBa1Mma4815l74y+deNGa/QxxAMynXXNf0TGD1zU4Grr2rX8LJWonLdpSWF7KwOnzZcxfvaQPOE2VlNjsyBTiwvNigvP1t5zH6QJBAfamGdHd8PYbB+2HBR"},{"id":"400c6aaa-189b-4208-8f84-f71d9775773b","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"自动微分引擎","description":"autodiff-engine","prompt":"深入解析Variable类如何构建动态计算图并实现自动微分机制。说明Function基类的设计模式及其在前向与反向传播中的角色，分析Add、MatMul、ReLu等基本操作如何注册梯度函数。详细描述损失函数（如SoftmaxCE）的实现及其梯度计算方式。通过具体代码示例展示计算图的构建、反向传播触发及梯度累积过程。讨论内存管理策略、计算图释放机制以及在复杂模型中避免梯度错误的最佳实践。","parent_id":"1275e1ee-6647-43a7-9473-015f0957e379","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Function.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/base/Add.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/MatMul.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/ReLu.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/loss/SoftmaxCE.java","gmt_create":"2025-10-02T11:55:14.987482+08:00","gmt_modified":"2025-10-02T12:08:29.413817+08:00","raw_data":"WikiEncrypted:H2Wkcam9TCJMx6ZRVoHRDuhxF+fpNpbwr8DLtDwuQRoyfnJ/jeoR8/fkJ2X4fhNJ4WgJdLCUwDsghbrLQz4LXb6Pc8Tq7ydNG8kTGG42GcIEqmbht39eZT//fz/Tl5zvnTs3QdeqL44Ja3Y4K2t6uwO1+zemc35AuEh0ANQ9Z4ui0iBbys3BtE7N2z3Ppu1uh4H78/0hBIfiKpSKJeqe9Lr5PaRulLP3AC/Y/+FdHmQ9jbSdmIOuImkp8fwLiotIyH/2P80aX2eKP/jQqRc22g09ciHVVic831rBS0WFooJisL/HIbkN19ExCGpnSTfClSkeFn/P2YxAGkujNXvxa0wZ23SrUiAkb4h6+MdZyW+ZYC93r26nMHGkbCx2MfiS532jGZXbT8NnnWv1SVJ3FPw1utb1T/4ytVC5tS2SXUyx2DhVJar7VmGkcHEXOPnqPjjJWdmvVvZwFmK/KQCzg+HdFuJSSK9yuiFTedwK9lqtMSeecjbH6hrGqsUr+ClOp+ADKDPO/T3f/D2UhDMEUOYpwh3HkcE7krf7Om812QcWMdNY3BFmKfB2mh7nFMWD4HXqv6GmgOtYgkKsIhQ4F5Xg0JlGSYXnguU6SrKRJZo4ooLqsVm/b/AGf1EMOLUy5UCKaEoncM8wRpYV7tNCXtJLgbdBhQb8wTeZzTqFYEgsBC2a1s9hZeR5P7kUtTSyUHxweAdc5fqf/+eC/9k5daXHwaQhytHJkaoFsqg7RQKWPSCJJ6c57YA+rpbwpTjFxLSFdxonJS9UkUw3qc4Bhm9Y+mZb99iZX3mszWishIst+04UMcdERfOFJ/fpHYPBbxva9OSaYDgt0Pzh9YVWgyZQuLVNuwP0sSmnpTUa3bnOsiqpG+rLGb2EUKxq2qhwB7WRjDEttCTfcatTkSe5QOrWY8xIvCjRlJDvKN9zuYIGxR0JuV6sK3XyS4AQaK5dbiAqdp8VFGEP65+gsQJYI7PQF8V0EdoLwRsRjvXYJ/2KRRkYUq4cAqG8YImW5WYXLTxXbWpJFL07Z8NioxBsbUF9tlD2cTuy2zitZPq3cpn6r/smsApmOKpEAtNJG/qnYXh2cNUJ73bJCfU4K47xa1wXCMINzKJtl43pl0kN8VH5Z1UddrFmjv/7VcAefGuncwOzzTFjR00u82Nr7O6FXAY7gNR+qPkHeYzTjO4B/uiJoTuyZbTfn7xZts8O9685Wx7v77gazkDIU2Vrc6DDWLdnKq4vQurkY7l0TCyy2F+7+onxzIiT6RHuE32bONphZeW2jvc+yxtnNjqHkVXhY+HeRHRCttDcVmBpYws+8XMVJjObnQMEhTzKOEY7tGRvAEJ5Gsbnblj4ZZHFd/I5AVRTnDxfUs6vDYJ7QPazNhKfu79VOA1GJP6lmhnf0U8aEQJxuB1/N7bnumw5yMhCv6yv8RxMwComSKAahGHQme0nDB0KDjM4f/0Em4nixK1M+nRmPTW9gdmZ/2zR+yq7bUkRX4XDgA+/j3SUkx6CjuNaOz858YYNNFx/7Zq4oA9rpQWmOuXxqDefdktWNUvI+9gDGTvnr/M+Ng4G9/4WkLaXR3WtpKO9C2waJxtZ754rr8PPrGUyqgQ0E57bn7QRb9z2+GN0v0c3RBjk4hPGOqg=","layer_level":1},{"id":"d38c0446-62b7-411e-a6f4-e3fc7a48b7a7","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"设计模式应用","description":"design-patterns","prompt":"深入分析TinyAI中设计模式的具体应用与实现价值。详细说明组合模式在Block类层次结构中的实现方式，包括父Block如何管理子Layer/Block的添加、遍历和参数聚合。阐述策略模式在智能体系统中的应用，如不同Agent实现类如何通过统一接口提供差异化行为策略。解释观察者模式在Monitor监控系统中的具体实现，包括事件发布-订阅机制和训练指标的实时通知。描述工厂模式在Layer创建过程中的使用，如通过配置参数动态生成不同类型的神经网络层。为每个模式提供UML类图和序列图，结合实际代码片段展示模式实现细节，并分析这些模式如何提升框架的可扩展性、可维护性和灵活性。","parent_id":"2bc08091-03df-4eed-9b9b-427fe848b3c2","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java,tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/ToolRegistry.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Monitor.java","gmt_create":"2025-10-02T11:55:16.122783+08:00","gmt_modified":"2025-10-02T12:09:59.896398+08:00","raw_data":"WikiEncrypted:tQ/n3TmqqyhuGeI8lCgAb7KSHqqN817DnJ5UMJRH5GEy4rOCxhdZ7sGEkKQiYoXLIgWTWGpLHuygvuGWXq5IoRg3ZWGBiBvVpxz2BObO4L/9snDPSqVJEScZ6QQYsJbj6Ufjv4Tzghov2Y/MfS0BWUFhl8JX8nvW0/RvGw5sMJp4UgokA2cyjJ5RRbYNoqkNxynyRlnhCr0fg+JpXLVswcNPY/9XsA228gRrF4G2ee/cpWuUDH2xODvnh7D5XTzKLPhAind+3NYECS+ozqRksOO2NgWVTyJ9NeXB28SqyyGNGXrwjkec3mFYqhtjY+RAtPiDjiHxpSI14YxQJGjoPAA+vgstG7+IdU2f5ma7HjG0vuJaAJgtFVXGXRFveTpnammYdTr6P6LpCRBAGXWF/mYrhB6yLdC3H2FA7K+i69X7/PHYbaitHnimcmy2axOVEWrhMhqGKXeSl5bcKk7CrTjdmu+wHykw5ZciOtfprBb4BCBYvfsr8W65pnEXdN/7JfZm9dkTHZEs8QWiO8NDI24GcQ5hIVE745ksWmFbzw/c3TL+pPalQMXh+i7u3G4oaXeuKrLFrQioAbEt+rhIfdQWhxt0zROCl2q41DX9LfMSGjH9Z1VDQWgizMLbyAhpByTRrRZgP2ijE/sGWvZXJnyPpzo3/vIuXFS2HGtK7s52b1wmr5W4Qv9MCTE6jKZ1SsN1HPOBhQtJb+wTMdX6QThWza4VXGDWIA0em705vjxtRMQBUFV7xT0MNi07jC+6304ND/AScR+HS6SdyD7YTbEMPXyFN2BvVkpsA0zaRwklk4kOoksh/ORALWabVIuXJDGDgkgi4FPuLvjSAfUOn5lKRw5b9r4KxyKKkG20WTvkgTZ7keNgLHAzhKrvEnP3OlczKLmVMh2k7hGz1nvHnlJy8OvGtJqhqH/JlIE8ROYDGfna2vBSucTU/wMBb0wqi1NMAS/4XtN2IRF5ZZA8NnJl9vpf+tD/pwZr3JdvTtFAWiWsg0qK09QrWhm57AgZpImtALaMx7co6pVlZ9L/GyA0cvXIsp311AWRSt/JdQdP+TcdYJTfF2E+bMYMebZJ4MnO1oz66/80pikIn8fm334gNlttVdIUNDeFp1PaMj2P3gFSTPcaNcHir9Nhqkaa6I440FXMxJep3ayONKDXjeMCB36GV3pot2v2grUclxOCUzNYMoHROFnaHgNVKOLvXP17yC1ucd7TsIzasNR6a9FUtsCucHcApjrv0PIt4+864SAxNPVpirvAD+EseZ9YAMOX6NGbLHPdPMxZIO0c0qzc+uCxbJ8HoVj3Z5NcNqfK3Sa+uJn3H8HSKk9+PTRBsiOg7akeoiKeiwjaJ0dJQFlACxAE5IPLvQ7XDGEFtyOKVm9OvgfXmhcni4lEFeGxom8iVK6Rc1di8JYXcUyPqSIA6HfZ+ijy6Q7eiZZ7fmLFBuU39jhegA82w2WDFE+9CXXuzagNAywXFuHw7xe3ezm00W5pIpcdYJm8mfRXPKwdv+nCIugG7ztUK+SHmL7YBTqFB/obLl0wTqtVZlV0yNE5azHVexLi2he+IcR+OPzrOvzCcylzFFQKAEG0hJWZLB0rdxfrDKNLmw3WciOja2IDh2ZjEqz6zFRvq6/HEt6rAHGY34EIFBOnCp8CKnenRgqfhCmnHxX7qMU+DmD/1GTySonOcza+Yt/bE+rtg/DP9eLe0PHEp/ik/NyqMLIb3E94idKv+3c3WBERh+KxrQ==","layer_level":1},{"id":"fc191fb2-e556-494a-837f-9549b9f2eafa","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"检索增强生成系统","description":"agent-rag","prompt":"开发关于RAGSystem的深入文档。详细解析其检索与生成的融合机制：如何通过SimpleTokenizer进行文本分词，利用TFIDFVectorizer计算文档权重，使用VectorDatabase存储和检索向量，以及通过VectorSimilarity实现语义匹配。说明RAGSystem如何将检索结果注入到生成流程中提升回答准确性。提供RagDemo中的端到端示例，展示文档加载、索引构建、查询检索和结果生成的全过程。讨论性能优化策略如索引压缩和缓存机制，并提供常见问题如检索精度低、响应延迟高的解决方案。","parent_id":"25ce1389-fed2-4ea0-8024-9d54af4913d7","order":1,"progress_status":"completed","dependent_files":"tinyai-agent-rag/src/main/java/io/leavesfly/tinyai/agent/rag/RAGSystem.java,tinyai-agent-rag/src/main/java/io/leavesfly/tinyai/agent/rag/VectorDatabase.java,tinyai-agent-rag/src/main/java/io/leavesfly/tinyai/agent/rag/TFIDFVectorizer.java,tinyai-agent-rag/src/main/java/io/leavesfly/tinyai/agent/rag/SimpleTokenizer.java,tinyai-agent-rag/src/main/java/io/leavesfly/tinyai/agent/rag/RagDemo.java,tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/RAGSystem.java","gmt_create":"2025-10-02T11:55:22.108599+08:00","gmt_modified":"2025-10-02T12:10:10.494317+08:00","raw_data":"WikiEncrypted:gTiQk8pR90rzooKLiaXVucTXeORFp6ae+PNJrxAme/uYZ8KUePPa8GjjacejiggJreT95XVWmu55LY07PHIGcYodgx/vuvyXYLof2wFa2vcOBsLCR59/EMSS68kdVKelcLIyl6NeT6HFQJSMaa5Pb4Yeel6LXniYsQEGGta14MI6rMDlAOATP0/w2zIV2SiTjhfZYn9Tp5NfAzyAYh6KGA54eSes/Pi9X8DlaOov6r6gw3+UEUccLPFRQdjGJBNXiDFKyaYEU5Zv3dS/QbdGfH/i2KIR/f1jPADiAeIig7rjmakNQIkrxOPADEyB5DlB1ukCZ/ys7MDMBT9BS/oLW9zBN6zvlrB3wPW/g9mippWRiUOCT88kRtHlfFPJvSRrlY8CQSayk0nkWLvrC+ordaL2WNFbuhSHJ1o8tJACWLJK/dOw5l2f1kNhFVsNIuNfwls7NRCwheIT2fgAVYGjs5DfByvb6iv5TRePAof3nuE81nOlceUvaF4nA/IWFDvy/dSqF4sHt4WRep9HliEoRDjHUw9sIp6vG65SR9ZcOYrfayH+ROarfVe6/m6Zs/LNrbChNI9hFWj+u5oZEmeqvl5pOfKZ1SuFCzigtg1xWDEUk7Hjg3DOmqpV2SQoUqXqLyoYv4bbmrMz7y6JXXSHP6FrE1OayX/MixlLrapALeUjrcB6eOEF8WhITeOH7VgKhuge9Fam0UU8KYxR2CFROBC49BwvQUddNp+xlEJ0Lo8bta+Eq+oesCH+O8l9ki0pYQuSGiXYDIhsmGCoAdwz1DpmbAXZ0gmKxlLAz78yF3Aj5fqJlfGkKIhxpecpXltXb/7QDhs+/hG3At4f9Wo//lEIrpVe9/2Q3av09CZViF0VEfSSuZWl5dTDEVm5E3wfinTso1b3iw0hRgM0KEkcjmlC7c1W0iXgIz4d0yQd5Lhw8AbFBuMLcb5VYK+HMz6P51IesS+s+yt6lfuU4sj/ANePn0OoNueaqPfnqJyf5L7yk6IDO9w5v1WqpCQF/8ZeFIEK4cv3nsNtrmtFtgy5J69xjzCQ3nzwUlnYGalDWU0HGZdLAg2nMWxV7Zi4Rqd3wTo2C9DpcRZ4RY1dwlO+f2/jnc5DDXvLQAeUEf71oBOy9sl90GkthTR79VsgJP3jP7Or+FLW2Bbpk1GPAosRb4KSfReBNE1y+97fvHm22ciwm7dZPZlktyAmXhaYB0JKG53Mk8d8m0hfYhp5gNfp2dFcimq+ITrDQKsgWNIbJ0sRUtV30Gle5uIcA2YH6JNCAod9P/M+KaGMY9HJ6W3jboFd5pfGNaukX4bjWpbFNkDtiAqJXtNRrFU7JyEX8sAym/XUEIanwUpjsjhpmWsFsW026StndTuXfbqZVEqj/tITaU44gJQ4ep51P1dsEuY/uUIVaGLggdU/seHAmBA+8mrZ+uTAzmEnhPS60HkpMrtJtcDn3o9MFPqtntYswwITeyO9hQshpxqRJ/ZJghiv1cXKEGL0RWuyHjyzB6jArTwbJFtO9+iDc8C+uz+dxiBTO+MG9DU78G8AAW9kJ+xBz85gcaxqT1c/5//108O9KH+aeQnDv/pExNxi5DRogJlCeExa3eIOJqCcpgWtqpp338us5A5zo/YHR6HGJCvDMQreJp8B7VfRf1eV/GFM4CqSSECQskK1wcwlopvlr/GXMQB2hZkoP3ZlsdEJspdo1FgUkwYaYD0EDGdfb7SHPBHZ9EIYqPLkROMClayYJ8AZcgtlctOTgvpy8zbLnI8JkShQyDCzXGEwGfMuRLUF1hvvVtJyUlevXRbh87xSQB09yt906TUOgeKn4jbLmSr0o/urJl2G9iF/AVhcDFKdgWrC","layer_level":1},{"id":"1b29ef55-37af-45fc-ac5f-7ba18075eab3","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"训练器API","description":"trainer-api","prompt":"开发全面的训练器API文档，重点介绍Trainer类的训练控制功能。详细说明两种构造函数的差异：基础训练器与支持并行训练的高级训练器。完整文档化init初始化方法的参数配置，包括数据集、模型、损失函数和优化器的注入方式。深入解释train主训练方法的执行流程，以及singleThreadTrain单线程训练与parallelTrain并行训练的内部机制差异。详细描述evaluate评估方法的工作原理和结果输出。特别关注并行训练相关API，包括configureParallelTraining配置方法、isParallelTrainingEnabled状态检查、getParallelThreadCount线程数获取，以及shutdown资源释放的重要性。提供完整的训练循环代码示例，展示如何配置监控器和评估器，并处理训练过程中的资源管理。","parent_id":"1d81f045-0d3c-4bb3-a24f-3cba807356fa","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:55:49.496934+08:00","gmt_modified":"2025-10-02T12:10:05.725271+08:00","raw_data":"WikiEncrypted:Wfo6CnSQSF8PHOia3Er6Bo/6upjtMo59t01K0hm+ceUyymhdASfqfq2LQj5lIj3YAExz9DjqTa5PztSHcrCUR/n0ElmrQr2Q4ZH+SgiN0iNI+hhn8A4qy+jG3JVG8S6LBkqbSktP4CVhuEPQqHUoTbVNpED+2swWfH3lYzJyJCvQVOEoSKr4RQnW0CigumUBvZKV3eNy0mYgg8FbkGDgwYXQYhZ9zOJ0Wqds1X6TSdKc+ePnYdsDflmZRLOvrxq3lf1WvMkdl79BAcntSjb//2VV16rZABvmJnC0rzdPt4ZFh8vb1qeOIyDX43d2IMWFxCSp+RoFgKtB9ASnJeXQhkKHuzcbESMo0EIb/jWuZ9hwNlgJgHQijX7QlGZNKX+KIKmpVgr/hrM/nxeKhjBjs+H3+kO/Bit5dA5OyucnZOo1o6FwsPrEjueZ7O/6mr2r/moMkoAC3GTnFwQfh4WDJZsJ/8S36tmQ4aUyPFA+hpk4X7Hfva0CJKfe5ygfR9N317qDjiyjZEZC0wSkPdAuwKSOX6N1pFZ6uf4//Wa5pFEmaE9PH0DOxm6SZwIIqhkn4s2/fvtJ76PIPdsPSyAhhlzxGINmw8eOiZBDDPINhLD81i0BOa994x3S06wvSZ2hWgK67kX1wWRY04A1j5njvDlPE19B9Dk22JGavpDUogPy2wYv96i2GPNlBUHx8EM35zJyD3cT/ilizPH7doAmZJL7B8TwtJxsEur9UxmmgU7chFImxzEsWNJ/ce0M1mzlWkmJkbM6H1rVl9sPKra9FDpdbDRXO5UkoNtFJ0LK8JqBjQAS50bCceLS6tPiSJmyXb+7dRouWg+C4FV8Wo7Juowr3D/sge4Pa5HUvFC4QY3O4x2fJNg4IWsRpundX3vj7mXNYMgXiKiBMWD1drQY72vHEDHYa8ebeYk7FkWB9JJSG06VUSWiYX93F7Sg/YR8WkzpXwHau44r/2hHKV2Xvt1hK/fZD2piX7cTSoongpLX2618JKC8/MFEhSaGiT9+DpSjsfFUZEUeUxP5XmM3JkvYXpiXYEZedpCfqtGGkrKqIT1jEEjnbOFnvMCDnJltY1Qdsrizawbpqh0ucwHQ6e8Kmk27HOZqGQkHDcnRyeDfPvtyM47yAhdmu3gLERdrNjOcLBb4cUMeSTbvCfLWtF8UnEQF520NY8p9RPMDD3f44eLZlcwHkVmcBtrcmKujSu1SI7SDeH8d5vP3wZLuDD0mGSPm0VvuoUSwlp317tzCg+ESpdEzsHHxxI/BlnNeiJNUv2mZYffPJcVnFSZ0fscRPDSdsR678MZJuN3utRpI9BJ65PJJvlaLfg+SpPM285d/BsPV0zJPxfkYWYED5S4o3Qi6VkfuW3vsUevaNV3u9cDOfCJ15aSwEo+PsLrXTb6pK/tnkI1XFJ9T0orScX+Z1IOY0fOmqNooGHcz10NqCGAlnJEM1Nl/reL3/N3XH9rcW1VCMY4zwpyxBFDRo8QaTQa77B7c8kmCKhd6V2gmeJM7uU0VQASTT9bpTmyswKlYAOGIlEGgEOah2EI6nA==","layer_level":1},{"id":"220e7e0c-956a-47fa-9314-c99b5785254c","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"DeepSeek模型","description":"deepseek-model","prompt":"开发DeepSeek V3模型的详细文档，聚焦于其作为混合专家（MoE）大语言模型的高级特性。深入解析DeepSeekV3Model的架构，强调其继承自Model类并集成DeepSeekV3Block的设计。详细说明V3ModelConfig配置类提供的不同规模模型（默认、大型、小型）的参数设置。重点阐述其任务感知的推理能力，通过generateWithTaskType方法和TaskType枚举（GENERAL, CODING, REASONING, MATH）实现不同任务的专门化处理。介绍其丰富的输出接口，如generateCode、performReasoning等，以及返回的专用结果类（CodeGenerationResult, ReasoningResult）。分析其内部的专家路由机制、推理步骤追踪和模型统计信息（V3ModelStats）的收集与展示，最后提供模型实例化和多任务推理的代码示例。","parent_id":"a9a0ee5f-a5c6-4f7b-bf70-ae25d29a382e","order":1,"progress_status":"completed","dependent_files":"tinyai-model-deepseek/src/main/java/io/leavesfly/tinyai/deepseek/v3/DeepSeekV3Model.java,tinyai-model-deepseek/src/main/java/io/leavesfly/tinyai/deepseek/v3/DeepSeekV3Block.java,tinyai-model-deepseek/src/main/java/io/leavesfly/tinyai/deepseek/v3/V3ModelConfig.java","gmt_create":"2025-10-02T11:55:51.289031+08:00","gmt_modified":"2025-10-02T12:12:01.06506+08:00","raw_data":"WikiEncrypted:GR915Fp9eBqR2DXHiMnJO1zZXdiEWF9xG6qBbs2bSXy32Wcz1DCe73yfxIci1Twd061ks3szvZo/DIa76cEoDdUrmSAQyYiyu+QYSRcQmBQLtT4hQNCcm9GFBkpwWQtpn5ubTb6WhrXobIh4W9eiD+yu6iHLvLS7AeGpBqjjJj7T2riY3O2vRpJVA7bSoLU/jP8mhjYM2fJ7TNJuk4H1BPRas/DKPt2vXxwTMWA+ClSx+azoZxHIkyf1rvYhOR8/sJ8HP+f7zUNaRHQ57CW5UNV48sX3ami0MF4wbTcZaabDgAsP11DpW6H/CBf34LudbQsxn54fyfDrgqGAxLp/h7+EO95Jk+igZxaq6K6IElblRmRZtSEPttgQdwcr69AcqWx1NlCBb1Fd7w6icL/3VHtuPBRFsEBs3N2cMJP32rJTduGW22sH/rr3HCjM934yNxQaOX4B25IkXwsC9vKujefJdUbnYAs06wLENG/owtMsipwVCnF8yOpvbS8yp0l6qWpLEKnMo0UQZBT52iiNu5exrgVETWDTeDO+KijvB7qpV3jxiKlo9R52hxrzEdkt1xygrWWHw3Y7wfTnP1nzgpQNuSUVPuEB4ibMBw6mkVWOpNv/emyJHZC1z8BqRRKTnJkftH8jtVfP0YCS0c1nuhQCyEkdUDf+GamQlwc8SWVTnQ8df7zp37v+c1+eVNNDVjAI83uhEFLYVReaTCwcwy6x48a9n5slJcFRKbMT/BoQcjbuCGTzapFnohglvBVuUmzBasrLdiguqLMywt8s2wjM3TVIKJwQH7e0/h7pQt8SFX+DmdeI/ca8ObVVq1AcHbAksrLZ6ae7/+A+ezFGgQ9WzJ1ZRuy6XekNkZibPXdMYwHlfU/vyqFY/T7Rdaq79+ZnCKLQgTPV6D+k3b0flY4P2EGIzjB2wRMJcyJLGmsypfdaIX9bQJc8ABFSdBiWEAxpm36PHxRyPeELAXcNnjKRSrFTbVh4LX3UB6Qg/MzcCYKv+4WKThlTtGXbYjPQxT9amGmOCoYZAxZ2Ww14Zdl9rNrZcw9xzlWsHV9dNcwCpm7asFQxZGQNane7NRHQ+DCRQAwT8oxHx4icH5LEDXpY8SCCJUioN5NOSdJUW+MNnzwaQXJXT2NjKbXCrhlB8rsWU25K/z31OCaXJHvaUQz//aST6dMvG+8qv3sgZebKSoT2PHwZjH4Uxg0guadVPz8sSUaCR6nFuCYGTMqHPQMwIdEPdCzU1ObKi1sJl2gsYpo6gSS2Hts5oue2/17h3yp4Xe8pKvlN3FzTbuv29/RhknnjJXVM8H7Bvl6HbibYeP96QCZDlBEn/taGkksvPA+9pp36T5BFU3RUtooTeP1++gWJGxnZUIBe9HzKWGHN+ztGwy3R9VZ03HbmfTrFLB/aCLT5bhWRt/4oST6Cu8rxstoA4ASzqz7iG0WPcpTN81IsOo+ca/bL1Vasy+aLTXgw8VBpqXDZ6P3y2yS+2+pSL6VwCO6A+nADJg80lzz6Ib4QaHMOmRkkDY/jtoEcsKJwOmFYhlcMhHynA8dhWjRc7bp5v8H3NOLmPYeU53t+agMb5K64B/kNCBH0BDd+n/s0BkLCbzrWimEKKhPf/EnOfmwCpGgIFibgXBkjqgSIJKUQtofDNHDIUbZLvI2N52Rk2nhmul5kN8Y6xKifBjkA7ZIoRRZKit8pW23tkCjJkHZzu9P/QyRLCIzmSHiVZy/QcwLo/PX/GfxJ3O8l7fh2wf7ILRuyWxERq0sVBrm/e9vHN5ExhdX9qPXXyaIy6tSvDYo8H+3pYDUaFOjO7r/Evpvqi3fuZ9F9rD9SBWkDCT7FYTDURP4Zc3tisxKx","layer_level":1},{"id":"11b5940a-86cf-4a78-9b03-8d342ebb91c8","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"自然语言处理示例","description":"nlp-examples","prompt":"深入讲解GPT2Example.java中GPT-2模型的文本生成实现，包括Word2Vec词嵌入、SimpleTokenizer文本编码、GPT2Model结构（多头注意力、前馈网络、位置编码）及自回归生成逻辑。结合EmbeddingFullExample.java说明词向量训练过程，以及CompleteRnnExample.java展示RNN在序列建模中的应用。解释输入掩码、序列截断与填充机制，并演示如何从预训练模型进行微调。","parent_id":"f4ba2b64-d220-497d-ab20-b4d22dcc9be4","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/nlp/GPT2Example.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/embedd/EmbeddingFullExample.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rnn/CompleteRnnExample.java","gmt_create":"2025-10-02T11:55:51.505861+08:00","gmt_modified":"2025-10-02T12:11:30.86606+08:00","raw_data":"WikiEncrypted:877wxLckgGt6rwzsx8X7c4RXoG+rwr6tDAiGGVoHdWFpdP+e7NA2UkMH2WEpNtnLdwkhmcDnH21wHzNdPNBljzC9FDBJYBuyaJ3ystCSfxeHcNtvh1wkBG+y0Itk6Tzl2m/trRezD1Y59Hg697au0unqnn+JH0XShIy8DNS0HYdWt72/Fw5CRDB8cJqvVxcpr27UAgjaYUoNdnazzH5EjavBW3oNnwtNnjOLFYgbyjvWkJdIAAwNIsmPizhbpcjJnzmFVcrkVdq4ggNKeZmiuDPYacDHNFkBxCoffs5RYnrqzO94PJas9eweN9pF5036o8r9WgHLX11+6QTRDWQ0z/O8QHNwz6E0n/+tJPK8pnuSU77G8a0HgeJlzH+6uRa+jPWwMsqbIhB7HntfPssrOGq/VSEMMU+s3tm6kXOFIJ//FiyKOnx2EKdb3+9Zu7AOXwgvdUXHzNC70Q2Yfd3yQUtIaTdfYkgPy6DmQ1CObwVi2BECgYL80hQVLcuznN0WD0VE3IFmEGrS2Rl1zbmTZ0GHTDcoadP151hAPYk/iRVPBmEnSMHoeeWflminNgA4h1y8yIeIu210m6DZZyv30Z+fzmBX6A+dG1dd9xPCWFAf4pDoP3gFdQ0dLmmaCgW5FjgJrhIhh+xvtvZkauaGkVEzRDfsOD+NuDkoAo9HQdQgm66TV8qaTCOjcloypphNZDEzt189xU+cBrqlwSTKMHlit0vX/U/wbXIRQycuhNrFy9+G+DYnBFX9/sSAck/RC0vclepMBNZAh2Hl+Xhh6BYxvfVkP6VN2nLf1fBP6gXZB2ToDoC1G9Alj2uvSSbV+kGZ+MIOymEvlL+BcF9jZmAZEDt+BuAmVtHT/60a4R9m/Frt0bkK456/1A31qQpa1FakrKKH9xPfVy/kFUwYGa5GnalAeT1RkUvX5BjJyBWiRtd9lmPiOj7gSojYcsL2TxJF69tJpbCvDrIUBkrN7Frg6xSClBI4NEBSekr34JlF3uBHi9Gje83hfC1JM7KE/tRQwbpTfK3fFR2rDvOZ1BPpQhmtkio9HcJ0MJ9XSrxWs/DqpDApg+tnLYnKFYGLdCWDpEdeJZOCZTX4CStqRRV2zb0gophAaY0wvU+TUol/KwvOrBVI5zkDojGVn/HOsRhpgwJ1znqMQ+LZy28m7cg7fodtCpBlBlMA03zUvFd3lEbUHNDIgFxTZTCOFZSmwdry7ySJfEDergZGO1Yiu8VOHU9Y5nD6JPU9cNR+9wqDoRjUcTa/XiAXOGocmNc7MO2iOn+k8K1mZXLO4G5dOA==","layer_level":1},{"id":"297c287e-63df-4878-a712-9001329bbe79","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"模型序列化","description":"model-serialization","prompt":"全面阐述ModelSerializer类提供的模型持久化功能，包括完整模型保存（架构+参数）、仅参数保存、压缩保存和检查点机制。详细说明saveModel和loadModel方法如何支持压缩与非压缩格式的自动检测与兼容，saveParameters和loadParameters方法如何实现参数的独立序列化与迁移学习。解释saveCheckpoint和resumeFromCheckpoint方法在训练中断恢复场景中的应用。提供代码示例展示如何保存和加载不同格式的模型文件，并演示compareModelParameters方法进行模型一致性验证。讨论模型文件大小优化、版本兼容性和安全验证的最佳实践。","parent_id":"bb0d9db0-0092-431a-967a-d1c4a7ee2048","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/ModelSerializer.java","gmt_create":"2025-10-02T11:56:17.685325+08:00","gmt_modified":"2025-10-02T12:11:52.332633+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTT0akkKEnJbrNIavPeBCe0MK/C89668FrarlRk3sMi60pThhH2/0o+RYfZT6SgeexYdN6tJL4ng60USOZAaoOEMtbM/qllGk7cwy3j0wW1hdpKOmHdSNKOo90GpRAb2AoslE7JQX0nBiMHfFH20dHyeCmxwCbYPHYt4gbH0OOtjv8aduaOL+bpm6++v5bbqMj7RSn6+B/yId9cb4OB72EKZOg725g7pKSTtLS/Z1I3T65SlpWoyesD5zEbn4sB3ZGijLCC2ghPhOFJdzsDEVjomLxSRpkgmRXalk/mwH8vAm77w2hTgnIcIAtJ726XyiokXNiZe6F1kjljADrKN789CmKs6nZdRAR977OnoSn1SPMF1rHkkb7UrpbGs9MxBgpOJKBepUc8eyonYLD+VdbLyddm6coydo40Bpf8lXd2RY5wSXgcNhu1rxUg1ekrS2AAdeQiqAIYb+JKwKhr1SiAlkEX3I37bVWcgDv3MZkEEtwSmYrCVA+8G1EVy1wt7+0P64zQ/uWsajfY8e+Pi2DiN5tvYU+noHkOW0dIXdyqhKxTHPRSkm9Bad7TozZ25HLXEVMvADWe0QBLLA+LNVxlwYOjIQ0rNir66dY4QvWwcedcPmmCPLk+nMMTHamqdb0O3l38Dn99cO95XY1EbNCTdosbsKYamrLA+p8fqb+U6OMiiMGSn4lu9dg9o/EXt8IRq/mJ5WDSwZ8a6uEU9FkdEXByuutg61KVzTFXeNjWWskObDwKu6htnbCdv+j2YUjdCIghLz92R41AkYXbb4dj9Lro/8omY//8qUv0BUObf/loDSNK8bYaZmAFld4RzobU9AAAgZYLlW3A2sF4LDFhIFVyt2CGWxEPWO3Qa2VgS4shOWMbdgKFfbbcSS3cKKg/NQSbkwCo0ShZ9zLge3537i7h3Qgzr1MNmQ7u+K/nzisLNzrIhYXlOfMIcT/ikiHMKqBDJvcgYZTw3DWlo6xyTtAGD5sD4exH8+5J9j8Ae0rBETuSfqNzEujkf8RhGkUb937ZfhNQ++/ylOFqI5HEBDAzSPfnDnuGrQIxY9Q0CaD8dHkC5+y6zQ+yGRnKDoguSrCm8hV8i4eFcs0dS0unduvOWGKwCz48gEFC3jQpUqTM1MXt2e8jFEJlq1rJ6vQ85GpRuQbQf7bSvG2oIX1pEVQO3QYF8l6uCRw9IBEZYcaDEExUA5Cbhza/RZMSoDROpVsJ/HKzOEKXhMYudQPHZvbEQ9ZDLle7b0/JVKVNm5ttnJJlf0FusqbbfI5eldVIw==","layer_level":1},{"id":"d84a71f3-f067-4ba5-a34e-fbf89e40931e","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"策略模式","description":"strategy-pattern","prompt":"详细解析TinyAI中策略模式在智能体工具系统中的应用实现。重点分析ToolRegistry类如何通过Function接口实现可插拔的行为策略，说明register方法如何将不同功能的lambda表达式或方法引用注册为独立工具策略。阐述callTool方法中基于工具名称动态选择并执行对应策略的机制，包括异常处理和结果封装。结合代码示例展示如何注册数学计算、数据查询等不同策略工具，并演示Agent通过统一接口调用多样化策略的过程。提供UML类图展示Tool类与Function策略接口的关系，以及序列图说明工具调用的完整流程。讨论该模式如何实现行为与主体的解耦，支持智能体能力的动态扩展，并分析其在构建可扩展AI代理系统中的关键作用。","parent_id":"d38c0446-62b7-411e-a6f4-e3fc7a48b7a7","order":1,"progress_status":"completed","dependent_files":"tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/ToolRegistry.java","gmt_create":"2025-10-02T11:56:22.30134+08:00","gmt_modified":"2025-10-02T12:26:44.507174+08:00","raw_data":"WikiEncrypted:vncIuVLs5gKBPQDvkV46pOdg4mmkajjroglsp1WaKwHhgBZ3VeiBt41x/Lu77kefo/nEYv4H3eHlZ7eWyViNbCX9hSIyesg1wYufWWLHhCxAAG5X92s2zQeJ3v7BWMhvDdFWPWt8p1u3/pJ/YByXqE+z9C9isEFQhXVaaxHbT45PJ8ZRyWwF83sgX/1y8ERQpQSQaA5CAh2DP6AtvWk//YNY/pSaxgoVY+zPjQHGaUR7gJLV2GZRfFhxefC4K4KE6KpdQNfsRIH33n7yRlwrT/7sVqTCsFVdoRnuQK8Ko6LIHwrGyjGiaO1RAFhh7ESXJO5pe23gUIoTu45oIU6dlAFfKr6U5zEQF3Z0600R+yKNANF0y14LuHJ0qdh0S0cOm/VZD1BHHP30XOyswZl15JA+fxsNA7S9PfWIaGoi+ytQh9AMCwjN/ypjgieIkXXtjGloVI1Y7IF++BQ1xR1ciS22qsAI9tB2MzHgmT2pBFa37j9VcXMJ9+62DFbgeS+t/C2mO6G6R4S280Yjjirsb6SAyaW6TgWXGWTpkjVFTR7lP2syBR12DExvghzhgpZT7BGZFvDm3w94jPS8kYQXyvg3iCDRKTfwmXQO9BdjnPXK44CsHFox5filM/Nt7mb9wff4nZ7mrJ0okrZ9XZxQKlcORfrmWwS4VZvTowvL5wkgl1tmD892LpAqPC134IoJb85UoNbJCcnxdUrKskkS18aFy1RXOHUriZx0W5nf6WndDWQVBzE8ISDqNiAfsYMgx3ZdgSWDbOdXudDXGu+B4GRTGCR4o1h6hV4NvTnTj8Sln7b7idaJyW9x543dTPSJPytNNo2xzAS2FulIdrIqEJkJ71+tXOGH5jdMtlvSKpEEZu2ZdbCuV+ZKJEbAeIBPuDYnH3lYAYIj0zpAjgFKE7vejsbnn1nk9SCnIMK8/VxGQ7hvNlqOe78IGIYeMkgBs+S9+/nNcc6NWfTedp7tghhJqQICa48Q7lZ7fJKLoXmlQn5L0dB4e5TFj462TnAArO5EzUP/zIffCoDaAA8R5+WnGb/Z9pJNNwuzbU/fgJkk02H4z1cfJjeddKByKMAVYyiSYY0Dw8+4vFPWujLTQWUFl3jNewH9MYY2bERPiLkZHEcr0m+u2aaBIULGS8pYoLXADaXwbn2DT3nCsUZDMVLapC7smZYsuREV8PUJ3dRh8cdMucgVWEYUx7j/RTrjJJA0lRWlQRIYfET/WHbZA6OJbZyPntBNxubCfYN4VPqX1y1ArT2jGZBtYLTkmujZuzXxRGtnBG1IZevDKnIOvOgxO/QLGgT2r6DbEvWFsu7vGBI9qbYI4DaYeJirQXozmQ5KhjJsdv7kLxPStZroO+dIBtBJ0dAoy6zFQs+EuVQBvoJiltTxsx37UXo6zmiRLGS7qbofjgwXRZf9Dzn1GEuZ9bP8rqMHO0yRCsv09wZkbFLwz+Rsef7TTksygjfnx3COoqBqls7IKVVo7YQTyp5Lk6pwm/sqhSzAaJehg4uSGRNcxKQG6bI+rY1vTJPN","layer_level":2},{"id":"34a0253b-f14a-4531-9fce-7848a3a4a8b5","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"Variable - 自动微分引擎","description":"variable-component","prompt":"开发深入的技术文档，全面解析Variable类在TinyAI中实现动态计算图与自动微分的机制。详细说明其核心字段：value（NdArray数据）、grad（梯度）、creator（生成函数）和requireGrad（梯度开关）的作用。阐述正向传播过程中如何通过add、mul等操作构建计算图，以及反向传播时backward()方法如何递归或迭代地调用Function的backward()计算梯度。结合代码示例展示Variable的创建、基本运算、梯度计算流程和梯度清零（clearGrad）的最佳实践。重点解释unChainBackward()在RNN等场景中切断计算图以防止梯度爆炸的应用。说明Variable与Function基类的协作关系，以及如何通过序列化支持模型保存。","parent_id":"ee92a8e4-3e38-42fa-b11c-7b6ec6c143e6","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Function.java","gmt_create":"2025-10-02T11:56:27.89937+08:00","gmt_modified":"2025-10-02T12:26:36.313744+08:00","raw_data":"WikiEncrypted:5vQ5s0nS48bl7VZ0wNBcVzn3E+bLdDG3T3uySfxmqoIjzudAOBLnMxjs/sve+p0Lu2mM07vZ3MQ7mH2iUnpEQgsdQ9Yga39p40DsmKEe3yLZLqydb13mgSPNYuWL5pdw9ZTCD422enuHA5Ikr7JBp1CvrEBmN7TUI06cJC4kvZE/M8EzX71KCYqnxcRJddIfQZL6OjrNfJQtR68/0bxTgcBKu+sovFoTgmiqoM1eZSv3a+CFpWMAAuVxVPTeCU3dOCALJu3Tqnn3Jwak86bQ+vXBr60SnnaiyAohoWmmi2oVHrnbIKuW8Az71KG2kLZEm2MbEBoJh4zfPKFSAi3YSOUFWl9f5BtqIfpZ4lPxn7A9O2SQs6btGAKzXOQm6wlmzTTrmL+Oz4ABdVwTE0TnWT+3OWbN62nyfLvunTFjO+50COsB6O8M12x3Z9AwNaFl24HIsog6hQNl3wwV790ircpQ4nrD07mZ+B9D0h43hGdgCFhOWelGDogZvbtToCJTYE295vadcrQ1ZP0kOg06giZXXOpMJWpGIToP8KuDJ0f2/ob/X0OpVhpBkyK8e7S0BQYo9Sda0HYf8ltlIm/vOvbQX2dy5IzZBp6sv93zu6etATdJ9GQVNrh02j1NeMX6h6Ks486l4zFm+SUZj1kEUfCTUOIu1HesUcAf++RWNz4aYGJtdKsD45R5PhbQMDZhRp6wnq/ITAUBuL188vixoV8C7aZzqpC7HH9iidC5F9lNVtnvJaw0O173vvW2kEvMayRWYYV4CohycAGsES2Altlu3Qjvyj3x/2T4wAoxkpXwiyBL8beOUAktY+UbysXLXhrO5GIkY1aBViqEp7VHbqk6SXoCiHnQj+HAG40reN5JIp8AmLKQZtPsn7+kX5gOUzqMkfadjFUcjdRSAc7bBnjo1nTjQFO27UG3YaDZyZGREf6cWYpmHuq26uAqRcNDP5Wwg+SfuxQrida7OvBhFhORwW4vVFyBU1hHtFgSYb4SWjosK/oM1WhoZudEtZ/Z9W489C56FyCo9bfd/jpfxWlotwxRT99VVft7PeHNtiXiW11mphh6j9oIUAUR8mD/Lh5JXokTOXGHVbYyOqSYIzhEfqAtvAFsr+5gC3zoEBhxkUIlMpXWtuG7bRAxjVsBm3Xj6A3cuSXFWdJJlTVtZ6+9gA0bM75Mk9wwCM5bvRrT+3gox1BWHLX6eBCxF+eTpruhrAo5Fv8RA7kjfrnXII0xrnUipEfz64Ziy2zrNuSPy5TTLENRFHZ3Q2rx6LCVv0Ce/DMzN2fslhWgsvVT+37KVJNBLih02YHcw4mR27Af3SFcynEYU/bZM0cUF93H9t30rJVr12LQ/dPrvDSWWa6BkEv7VKNy5LcmcuCY7V1wMk8LxxbIgLZ+s8ewLlJXK+9x5vu3qBXoibThc75QqJL+lIHLnygtvHk+REeSismdaqfzdGaRjigV0sjPrWsAaTHObQt+dw4sg+MXozfcNIw5fxqXABaPkqn3q0rdzFg=","layer_level":2},{"id":"86d47946-80e0-4c5e-87b0-ba209ac24165","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"反向传播与自动微分","description":"backward-propagation","prompt":"深入解析TinyAI的反向传播和自动微分系统。详细描述Variable.backward()方法的递归实现过程：从损失变量开始，根据creator引用回溯计算图，调用每个Function节点的backward()方法计算梯度，并将梯度累加到输入变量。解释backwardIterative()方法如何使用栈结构替代递归来避免深层网络的栈溢出问题。说明Function.backward()抽象方法的契约，即接收输出梯度并返回输入梯度列表。通过一个简单的计算图（如z = (x + y) * w）来演示梯度计算的完整流程。讨论梯度累加（而非覆盖）的设计如何支持更复杂的训练场景，以及clearGrad()方法在训练循环中的关键作用。","parent_id":"141136aa-0d32-4337-adad-c5e39c67fba2","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Function.java","gmt_create":"2025-10-02T11:56:41.159342+08:00","gmt_modified":"2025-10-02T12:27:57.378014+08:00","raw_data":"WikiEncrypted:KtG0v5CqzW/f76BFd9z/OFk4yhdX9LrglQV/QrwnKmOOpdN0sHukeWdvVSTN29Al0AxqyUsEKqUk50WchK2Q5AxIwzXW+0VTLknOJMh0dUCszc0rals1OHCxnfD2jLWrEmao1f0cT3r6h/Ndd5XOxXPQ2ZYulZrDS1lX4UVljfKQ9/+9Jgu5Vo+axXkZ9zpEu/vVBsQbiuCal0UDL49SJ7SIEV/TrkWBvnTLexC+IswI6EkmF5Qw+VZAPVPs91gihnvdFV3MGJcAnyW+EZHiNerQ6QS64P0NW824TRWuWxVA5B3ag36VjKi/ptujUvGu1FrCtminGQBCO4WZrYUKwkrB5qeaXgH0OlO8917SYUUTr2JVnn31XymFIjpI2zEbmBaMgPZs8vG1EjLuWg47EB4dyhigbImLF0D6uKXol7amALRhr0oHXrWXnyg/NRb6BhqJPWZgcXxWK84jp5JKbjwyCamzJ6YXEwfz+AoO8Kh116fxQdDKSUUao9UOAL/hcK7r6yOnv6lb/h82WQNHL5Zcv6EGDvvw7jbqAo+ZffX3y/j5eQVV0qpCmK4t0bHnrRUItpl6AmU6UueloquluucQd0GKrRp7EpvUD1u3Nuq8fwKAzbzil7Ed0HXtfoErD5VjXO22U4FWRoT5yOq7dhJhZkYNoAovx/f1VcqqtlgipA6a+FriWvf7MNHxNS0YS4RDNaaOyFGRjLRcYOIgO8NhOjeoI0oruuqlG4oXXERCBx5spjSKlx0/7725TEkyhfyudmfPB5zuePwV2VRYsjHgn195ME65QnpvjawYTaeWUWi2z2Vuefb2mDsC8Diqy2DO+JcwfmgBAm6Xdv9VC+dU6qeopWcIg4opSIOz1p+ryw38mFqWATdyYNk/8QugNpbQDTJrrwfxClW6CehmBIubDiEZdy7iUBqhQPkznPmsGudmyzFLSb//ZcU6/XJtIYDiUwKc8WAspkcvYsDUJFptBWwh20JB0gXCZcuEhdKkTxp44WH30MCeYr8JDKPWU1OFTXTyuLq8uzbQKSwdQMWY5xfiWgOUJtRPhzc8C8T+TKE0PBKl8uui7Xqdiz385N0RNlT6td1QaXQGYC7YAyO3l4Ndh6osVZ/aMksFNOvaz2Esr4C2yscRigqRCvFbLncMVK0hjA+9K7Y2aWnEWsSG3DXKfZhKSRSo3bZy/nICgrYHTALatU++UZWIGJqcYJ5PgI8JyuaqhyOt9S1L9CBOI+LbAkiHuszsjEkGUXjAtym2dpXoIsGLk8R7GPPVjBn/LJoaKcJnEIMnOgbtCbw7KT1tYcGzwUVdyRbmn9ySnL6RrknnmH70EO8od5/XIJLfUMm+TtIVySMXwdz+CLJZbQYymgj+yNm0m/UuXOBsGXJxx2AInBUM9HKaf1GuVpAduPqsoAosCzxG3/CCsEvTfFN7dGi9v0+qjN2aphzvkfmyTTVFPt5u2B9KJ0SPz8lmr+RmxJuMrA8GE75ldw==","layer_level":2},{"id":"7ff2d60a-8eb5-4cd0-bfc1-56b4e6e1ad7d","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"依赖管理","description":"dependency-management","prompt":"深入解析pom.xml中的dependencyManagement部分，说明如何统一管理内部模块依赖和外部库版本。详细说明内部依赖链：tinyai-dl-ndarr → tinyai-dl-func → tinyai-dl-nnet → tinyai-dl-ml的传递性依赖管理。阐述外部依赖版本控制，包括jfreechart可视化库和JUnit测试框架的版本锁定机制。提供实际案例，展示如何在子模块中声明依赖而无需指定版本号。讨论这种集中式依赖管理如何避免版本冲突、简化依赖升级并确保构建一致性。","parent_id":"6c45bdfe-2a79-44a6-918b-39351406838b","order":1,"progress_status":"completed","dependent_files":"pom.xml,tinyai-dl-ndarr/pom.xml,tinyai-dl-func/pom.xml,tinyai-dl-nnet/pom.xml,tinyai-dl-ml/pom.xml","gmt_create":"2025-10-02T11:56:42.401038+08:00","gmt_modified":"2025-10-02T12:27:53.462452+08:00","raw_data":"WikiEncrypted:Mh1qeXd3vDrFfJakTA2LVI4lmmDT735eDFQ7LEn37elrtS5ZcxL7D9EJTkmNj5Hqu1CxZnlPO5sKeO8rqOoZwOtLBikmNs1vNf+7UBfOv5XPfecvhCe71D1vWYsdMVsyKoHT95GT4isac44EUHJPCyGfxiXV1K/9IlwP4nyQxQTWTFBhCRRA0Y5d0Mrwit6eMpBN59cqOLZ5xMSCliDoHDeBl878l4bUCt6gEbFRUL5LP6Pt4M9JQw3awzOdzw7SHcinx8YpmPLR+ZIst8FejRHVwmBtEhqtXlo/awpZCFs/ubVdEeGVPyscAjHWHMRRwHZsZn5eubrCBJ+z0mrYTEW6NhOzn2y09m4vE6oR7mCtoc2XebPZoPapIuoqa3/7PZNyJjDocrJIwRFM6oChRrU5wWlEbd/8/Dsl13MdtighxHPZW/6BHx4v3hfoMJfPB1ghznLKELzXX7L3ZbfLBDvDv2emV1LyLf7iQ2WoUba8Yj0qNyTcf/NkBp1Aaen26AGaN3kJogvo1lJhuJvrtHcfUYMsLe7TlZlO8fbn/MWlfu3+LKbneM43yb9i6RXxy5edlSfnzlrsNJQNh26Kl7D0xmM4ldN03oixHaBp1BJkyu4DYoLWUJzVQrLyq+TYnY0J4l8LXZK4j3BdQQsk0DFmk2/Vda1QfQQKXq4K5kdzMfrjwXlhtg6y2wiJLaf2j4aHMSolyOlPU+G4PW7WD6hjwi5hC4LPY8dtTK+VBZsOeREWrgRRhN75E3ubX4M11533P9S5km/u3X5S0WxCpX6jC4iSFkIWmFbqe8i96zK63JRzePJ+L2DgHzSXwTdybL7icjRGThNVGMZPom4xp02RZbFTMKYmUeHLL3OC8qfFa6GalyeArnbOaFBfnYv2clZLryXNisGU5P7jUuAU/zndJDTd18lT0S9Ln+xwjpsq0EJrMLw6ZBSMExhcNoN5/GB7N43FFpBa6OYfMRwtktUZLFMlyYTJMT01/PBccSZ9CydZgLsVFHwtg4qX3LIaj+lqgOjwsRIt9NL0S6SJHBl+sETUQCtolHttVwsYMByJCC+Thfph041QWp7ahTLoBlnrZkjA8RXVue1wN+n4kqOeVeWusnQCOZ3xQMlUznSjwSrPQb3Y80fxE6ZzHwmjgkzC6+diYIW8+7FnFsQeng==","layer_level":2},{"id":"279bc716-ef1e-44e4-8b3b-4035f4ef6d32","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"训练器初始化","description":"trainer-initialization","prompt":"深入解析init方法的初始化流程，详细说明如何注入DataSet、Model、Loss和Optimizer四个核心组件。解释数据集准备过程，包括训练集的获取和批次划分。重点描述并行训练兼容性检查机制：当启用并行训练时，系统如何通过ParallelTrainingUtils检测模型是否支持并行化，若不支持则自动回退到单线程模式的安全策略。详细说明线程池的初始化逻辑，包括如何根据实际批次数量调整并行线程数以避免资源浪费。提供完整的初始化代码示例，展示各组件的正确注入方式，并列举常见初始化错误及其解决方案。","parent_id":"1b29ef55-37af-45fc-ac5f-7ba18075eab3","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:00.730507+08:00","gmt_modified":"2025-10-02T12:28:13.883602+08:00","raw_data":"WikiEncrypted:Wfo6CnSQSF8PHOia3Er6BkEme0SrMHKVo+dujYDLPP/e2wXhctPBdNhVnbo40+BhNt20nroOBdT0QJsxVTeAfv2R3Y4xpML6Bz/N2vJ0U79QJHAFMpXqEvXXJF0SeqqdsbUPhV5j1Fk6T17Qu0n3hxMlbgzniLGKgrAq41SMJulMdP8912EW7dnlJy9jwp1TnJ3nzClyNrb19kyoE6DeP84zSln2q2eSWvpjrHiRmVowPqgBp1tFo51Ni5a+qJP08JAxPppSNi4EUw2lhyMuvtuQK3A0+mLQMCd0iKJ5TiJ7ytA/BxlNysqllWxTXkp3l6nkzpA+4nO08DyTMV3oM8cwNBsuPwMzJF2fbpllEoKKeCfFRFI8ae2LkDs6cASIGhKNSOWXjAZ6XEvzQaHfKUbs4jzvmm4GnZ+BNpsuZWF6ozesh7TjzE558P7VljI9EV0CZokJHLvSZDk9k7hpsTmfWJKdzgnbwKxJZMpt1yVlN+vgnhGgz7tRUbYr7+wOiSR152tEBRdlqU69DPcX0R4YhLWyMaMT4xPPtyR7rPO5St+cStg6Xi8Dguj01Qj4H80PIaaBf1hqQqc9BWXLWniqrsbbE69Utl9KOFITnURbsOU+Fx9AUeirTqRzM8Hbm7NxFRXK7bHJBZjIUCHTHyeu1YWZpT2fvuB3nQU+BFZD3+0RRGnE2wK/nJSXrixVzt1a1b1qdnnjtmYP3S3z0907H2MH+QEukRJY6UFqham3Tm1y5FlwvXo+MMF0UQjmhvvYX2fqD7FKwN0LTs2RDFzq8op5WUYIa+qsS3x0DvamfcrELgMWPy+UYqJwdeBOJDw4jftyyp1XTUfHF+IStI5Z1tyHCcIa/nOC5qGro+he+tkBj5WA6oC5f9hhQ5SH84sByrZbdPeupD7BqYGGEWu4BfmJSqRMMd113Q3biXhM+zI502PxW6o3OtEM+rZ155plSf9ZT+ME5YsuNlx5fZ50VsdkK21NX3j8+++nnzUIDktwqBXlQUWQKUpWcZoqvzt2svlIvk+IdODmMf21b5H2KHFcIBF6ewNa4HZaLl1rhunNaU5OBDggsOEBMNuMt55h2aXJR0ebs8VeRkbiAX6Vmo+yxLzO5X2+72Vxp/eM3SnA0wxrDIAMD9DYv16r7KdAJYR5BCwQWivY9VsqITbJ0Ph3W3AeNf7ZvoTdmgKL5Bdd2/1paoZw+hpLU+cbyUSyV/IsdEhFMqfZJhAGfQaShgT7ieLvuQjtGVxeLekMThk60uBptrWb2L219x5lGJAhjQCx+p1geMmXVM63xB1hWwAbOCfIboAit9v9PjE=","layer_level":2},{"id":"57418e75-8238-4f98-b672-c53402453bbc","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"数值与梯度管理","description":"variable-value-grad","prompt":"深入讲解Variable类中数值和梯度的访问与管理机制。详细说明getValue和setValue方法如何封装底层NdArray数据操作，以及getGrad、setGrad和clearGrad方法在梯度生命周期管理中的作用。解释梯度累加策略的实现原理及其在批量训练中的重要性。特别强调setGrad方法中对形状一致性校验的必要性，并说明clearGrad在训练循环开始前释放梯度内存的关键作用。提供数值更新和梯度管理的实际应用示例。","parent_id":"ba2c288a-2b7f-4e43-9ae7-b41234b9ba02","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:57:01.943963+08:00","gmt_modified":"2025-10-02T12:29:15.600434+08:00","raw_data":"WikiEncrypted:5vQ5s0nS48bl7VZ0wNBcV9cIi3ubH03C7yBA7sD7V5Ti9Mimvm+pPrSiUaaZUiRsfgrTzZ5ZbnyTwvBgKViAaX+f0itLHKhQj+Yqw4M1Dfpd9KY96CQf/DJvz4plB471ufWeoYSoL2fawCJZ9sMXvhwg8k8DmKAQ3UrJqSQsgxPNvB/DRsJ+jzzE3WdkBBw5bX6ce7rwE1yF/xUWAaRhcdGoHLgp1QXyCck1lcO5JX40YBdu3I5UMVPDOZd5eLsfYXozg3L0BSD+vK9e6x1KZQUlJwOCIJ93E4R19tkmH6aFLdIMiWY5kX8x3gQMN6/FWgrMu8LjKi0qwR+QOf9WHwJF3HJ3JH+F2C4kz2szqSj3Luxa35nmbhHPNK+nS1Vc0Otcb9rnSUtUjeHiGfC25L4WwSdxhqLoEiTHtvrllKW+lA5MQgIBTRMeLPQaw5j1xiqtnDIalIS5ft/VCfbnONNY+mCM76sjLAwHGgKdw0yQwKZ6M16jcGtNnmuR0FdSn8rNFb70ueU2aXP++xn+3Y81RR7iIWj/eAtUAE95NxnXLcYsI99fU5U+yZhcaXYeKusFjPt9ay0hCG/4Y/xVhJYJt71eJ4aC5FWJyEE+aSsYv54/MCUrm/yBa/giFst1f41hJ3C8co/PuyN/v8jR75suNahdQOOzrlA5c2GBxdBWypH2XpQfhG10EktQWyqpqL9icQEzCGUJ4SbWzHUA5eZD1wOakhATfw+xL2Z9rU5zktmQfbsRsELHCdbwJvWpXWWldTSTG3QlnAVeRZfbRwDAhPP8P1t8DhtDYZZqrGOD5Qxu2zu/aQcb9GFWjrpIZW/a6wGP9lYPOMVbKAzl+RxaVI/Lm58K/JoKX6NJCkIldsZpk7rCNVUjPif44d2hvj+ubr2omK3hUycFbmrk1zhVcIj+sEUxWvTrEbdnKDcrdCnJmcpgy16ouvqrL34qUrvL95IYOhqUqDoFayDaEzoSzWd/S+RR+jOoCrEy3m5YXMRKVKHgIGPlKXgubAc0aOCb8z1gkTX8It6Dd33k4A/ChYIuWeMJhvwYudzIGBHdbkAEKo0m/tAPJbjz1eaT","layer_level":2},{"id":"376ca184-7866-43ad-97eb-ee95ca47d2d9","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"语言模型示例","description":"language-modeling","prompt":"深入解析GPT2Example.java中GPT-2语言模型的实现细节，包括模型架构（多头注意力机制、前馈网络、残差连接、层归一化）、位置编码策略及其对序列建模的影响。详细阐述自回归生成过程，包括输入处理、tokenization、掩码机制、概率采样策略（如top-k、temperature控制）等关键技术点。结合代码演示如何加载预训练权重、进行文本生成以及微调模型以适应特定下游任务。讨论模型的计算复杂度、内存消耗及推理优化技巧，如缓存键值对以加速生成。","parent_id":"11b5940a-86cf-4a78-9b03-8d342ebb91c8","order":1,"progress_status":"completed","dependent_files":"tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Example.java","gmt_create":"2025-10-02T11:57:03.701435+08:00","gmt_modified":"2025-10-02T12:30:03.089008+08:00","raw_data":"WikiEncrypted:G3qmt5UDg7Zj/Y/UfgyPaxVJZZA5Fvv9Vm0dKVvEltBoQMVodqoAia7Wnm/SgZEw02fZz13y/vuRBM1Bz4ISkg6+F/LvtSgNfzRlvZHIOMAD6GAZs5JPX0M+nOCQQv+LT8GWl0KmhHOjrdxM2WBwbZcgG+jlSQVPm8QEPcOkRSUCBxDgsW5PHLHJe+KcMHaODw/XSyoyYJQLe7iP9nYlrwAETesBv9KsybRO7tb2+gc03pM6YlkwyaqYz0JlYYBvnIDTsUQZyDaCTjyMRwaDFDyrCfhw/tKfvjR71YRDrkJd+q3V1WGu+bzigUUj2mx/2dgvtdgKXqEa5sVCMSvAaX0LAnc0N4xLGPx8g2+N3gAkRljSSPsaNGS92s1m8HIEEEKTn677EOKoMgHt/hdME5MmisMgO6d9LsExwJh+pSVzPl1M2UHZsn6VywPt54Vigwj5GFx1CJYToYSg2/Sdn4ZSNsyLJI/S05/tv9RsG2vWWSwquK+TOG5synYWaZAnXf+pHyICZQqOsGrh4N8K8llySgnVPhCHrOBAAoTIp35xvNbHEtiD936GCy/5Ver+vX6V7er9LuXGtZ7trI21sKY61m+EKwqP02FE070byuzxc4FK0G05945jWDMh5AUS7dyz6ft1/gyPECaCNI5lqZ+QLC9We0PJoaUT/9OfJrHfXWi4Wu97xrJHNzXX0Is/fo6Q3JwkFIhhHd7i6t6zYqVOVWcXfPAGl4ZN2erH+5TaXYxe4k5+esmAmtTFqQxvMTdN4FN86avgao3zfX15+Npo20J7Rh+ic56R6mLjTPUs118d8CcWhTsMGW/8RG0lbo22Ye19CwlE9pprq9+4KazsOv0uDdbmAFV3T8h+PbkVx3LxEoahxvQivlk44kOcFVYLqjz2Af5FIYo5zlj8iuQi+9buDrEJpuhgje5A1lKjLUUJZSBnn1pDM5nAA4rSM48vaDUQHMqBQ/T5ITAxSK7ubW5QUCy/VyEihkX039ntBpweENjNk2kyo2eTCLS6T9gEYsX8Mw5gHXSvlYqG0nB0tjOrslzrHxv6dPVtJyucrcKfZb4+hNt2fpjneuK63G136I5iywjPq1yU0pgXjombwYyeJQbqjxTU3iuNbmC6RYNeqO3Dn4Qm0aE8dcckhLdTimgI4DxWcNOMGq5sQJuBykKTK8ryW6d5mTInSeE=","layer_level":2},{"id":"6d017f4a-69b8-4763-b93b-0034c1cdb6c1","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"并行训练模式","description":"parallel-training","prompt":"全面文档化parallelTrain方法的并行处理策略，深入解析批次分组机制、多线程任务提交流程、梯度聚合算法和参数同步更新的全过程。详细说明ExecutorService线程池的配置与管理、Future任务结果收集、GradientAggregator的梯度平均计算逻辑以及ParallelTrainingUtils工具类在模型复制和梯度应用中的关键作用。分析并行训练的性能瓶颈和线程安全考虑，提供线程数配置的最佳实践。对比不同batch size和线程数组合的性能基准测试结果，给出适用于大规模数据集的优化建议。","parent_id":"9aad2933-db1e-402b-a7d4-00b40d03c80f","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/parallel/ParallelBatchProcessor.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/parallel/GradientAggregator.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/parallel/ParallelTrainingUtils.java","gmt_create":"2025-10-02T11:57:18.398565+08:00","gmt_modified":"2025-10-02T12:43:05.917992+08:00","raw_data":"WikiEncrypted:lhNRMh5kNTxTBCRgMKyOH5zAXwppYTwsysVl8gWXm2asxb4XZG/a0GmJBQggph0xYpfQOAA7I/v6l8W7kpT2DmbT0cyNRBHoEByFD8EZwnip9D5/4UqgsvoK4K5Sr/49tR9UqE+uQv6bxUbaCAOOsHs5R6xDqfglQ33I2g8ZKhsqdNJY9sAdZu7S3Mwx1j0f9T2NidI4qHHMUJn89jqimORaSPPlOpz+EAGorQCoE5BIXzNZ3pOPlPHxTtcFUdtsHe9N16vCjzgb6fbu1DjHnQ9JucAcnoFV6xxeq3V8H3UB5Tj6wH7VDdVAghB/sD1lP/8Ygc7h++EwR8kV4udiEUvY1ueuxPSdVO2iMj+Y3NFZyMH60uJyJzg/jGJovG/wtIp0/mRXszcRCA/GCMZ8uCBQ0dL8Dcpp/6gZmRCYOXxkUf9cqNcmKMxqAcWY7OPUBgg+SGxDftERfgKGhXGHtsMvvMMDqkH+5NvXpwpzjv30JmgPnRaFd3kYWvI6WG86C82HbzbcrTWtMjQfhf711YBcmJMcw6w4vihiTpaj7Z9Ki03qLcrg8oXhqGXjvLYdyY3fdUH4QlHmlYY6p9lEHwKDBPQGC5UTRFoSod2eNXdQcYk4jp83uOx0CP1M3Z14KgTqsvE7APj5+Js1TPTWj6cf7abxrFXGNRh8pxQh/nSehSBCtoAKIQhen7C6flIm3mEN6WtKAqyjOGaWYGn4FVQqzcvjDfpzTlf3D2KQiab3Fotlh5tWdHrTMCzs/75xKB0VMxUdjkROScL+HVLGITD1OuBLzORMk/FMBq6U9kmVER9xAPtB7T1HfOKLTpks3RnlcddYYERnUJ0cckhCq12/13un1HXT9M5oI7h5PNoDzaMC9HoehSMqurUrbedUGspfoR5LNFPLzTV/P40J4aZYCurhHnE3Kt8r0twvN+qG+nSueAy0LlCWSliPSrCZ8mJ0s7pe0pPCKbYglJ+tZR3NXdaGwruIULu9JxF7m92Js8VtFomUx8eHOJCoJifc97rEwbVPADuHwfyQELJJReAfLX8rtskSxPPUZjGxxNaRtF4jmjgifPYF2E+XScbENB0eRhT64d5MaruHVSf5nqmEt8POavegrne2UzVLrealVIi5C8fq/qnqo7yOB5JgrE92lAGWFCGgolL6FFfcwqXQw+2ycJ6suhJ1SKbsMWiBl9RNOYLqLPErtYf5wnbQ12OAU2f0bTvDXDe+uQZnBn4oiTfi/Kc6UVTNtWkA6YQA/3kTHJSWLkQdBszpNTFZh8YA+AH30eJ76ZqMugew2Jx3bPil0a3GXz3T8gDbgjGpfgp2t8ASOb/p+VxifraXddrudDQp629AUwCEOvbYTE6aWxPQUu/GTxncPRakke9MZKSIY/+3KB4nNnGKnp0LMj398A5AGIXBvjdTKqSY5UNeXxY96HodnScWoV0YkHQcu53bB80vv52fGQR4kfOkqD8vA/QO4Da+HjL4K+Bp2rTO06OTlzYkeYD2lTEIcmygOj6co4r9FIlu9B2fmYnC6Xl4Yrs/4Awl3RjBFt6XsQR1VX+8WQ/zIfXWJmpu72xwhHI+Xrjmk2whn6Xdai3Q4rd0y8kgGHzwgQ7/a6SqJg==","layer_level":3},{"id":"8fd067ea-5976-48d5-8166-310ab31987c0","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"外部库依赖","description":"external-dependencies","prompt":"全面阐述项目对外部第三方库的依赖管理策略。重点分析在根pom.xml的dependencyManagement中声明的jfreechart、JUnit 4和JUnit Jupiter (JUnit 5) 等关键依赖。解释如何通过定义jfreechart.version、junit.version等属性来实现版本的集中化管理，确保所有子模块使用统一的库版本，避免冲突。说明test scope的作用，确保测试依赖不会被引入生产环境。结合子模块pom.xml文件，展示子模块如何简洁地引用这些外部依赖（仅需groupId、artifactId，无需version）。讨论这种策略在简化依赖升级（只需修改属性值）、保证构建可重现性和提升项目稳定性方面的优势。","parent_id":"7ff2d60a-8eb5-4cd0-bfc1-56b4e6e1ad7d","order":1,"progress_status":"completed","dependent_files":"pom.xml,tinyai-dl-ndarr/pom.xml,tinyai-dl-func/pom.xml,tinyai-dl-nnet/pom.xml,tinyai-dl-ml/pom.xml","gmt_create":"2025-10-02T11:57:22.356092+08:00","gmt_modified":"2025-10-02T12:43:30.583068+08:00","raw_data":"WikiEncrypted:AEnLflvTZ9QfFGHl8t1BHD1q6OAXrm12ksc2TNs2/ca1nTcd9hZb0b6fPHkoMbFjV8R33/h2PcH0J+m4CFlL572ceXM1ntety3f2OMT/vGTZqv8ZoNKVgqwdGuoRGgAbVHLhdhQTSgnjPAsumrz4QGA8Tp9hzNkQrPxBFizoxpGml6zQC2dLSmpW0vneIHC4MAh2Q05GjzfuaaqQeNWGAzRxR6VD31IXQCj1KyvKBrUk8GcEMBplEx6TPCAgfU8Ubu59e+2Im3+ns/+uNZr2C+PeKGdLTMwUp08+UuH+NYcZCwtdXuuZvJ56JX+OK9733VSPpM0cig2CQE4H6U2Vdetv5rUMtJUrXAmSTZlRiNit17C57TUVZK8rfUiTIIu+W6drLhHbfGrnNqsaOrLLhL3KFqaDN6iM4fdezWx+0RdAGohjfGhMuqKCQvaHIU0a04Wbh4GMrBwu/kBkFvXTOn5E3VOdVPAoZHSzqCvTRoxkMVHg9VbHeyZyy4Z4k0QyIotVpDbLdmB2KSTHTCedFvHTzw0MCzolmXqIhIO9YHstowYndVoHBLqXU4I4wmaS8wA4Biy4MOpAPNgoJLrzjZx7I1nneooVqLHnKjYwK5unYjFm+cKDV/xdcNl1N2JFlAFz5VOZobzV0PNOip6ojkIVPEzRxJH0eCit4IzcnR3V1Fy4ggBPxL27Oyq7O2eC/LRgVMLesy7gqn3Tt8MkAV8CjOb4K6Z6V783+3PlzBCT66LZ1thLQpe3NQlzobx7nB/FMQ+lbsyZ82CUsD1zAbOE7dwifgefkyhtkelDdIaGbfugl7Y9/txF3oDI/DtJvYPLzfg8Yy3376cp1j3REd/x5aYJZvYmmYYJ5sjMh0zMhbIaXenzFzndUll7ABxzZrjuKlNG4WAYWSHkVByUsqe7yE19PgH2H99LAI69AK552eGfrW1KP3uct6CNK4r41FCZ7ZP4JiRCgdzAb8pj3xJz/fLbhezg6Ga9xhvVGZT9VD9VLAe/7PV2lP+LVR06fI7ZHp5klOkwpi79YZDX3ike8mMqYqgjsE5OLxD9OsRxYilfrSEEHsdME3kWKU0U4JY4iEYKQIHcAKCBMJ/TvHn+WpbsMJj9vk9Ry9qW3zUP3ETfLcCB5IvWHn8V1DUmDTVHEnLBWxwsOtwNHV9tLe2F4D11gXfLpfgFp8D0xUeD+UwnxPpXkTCRc+m0EooErPOsTst74xIeOciv1uhu7NXjWFKna3RcLO/TljEY6eZx5Tc4YBds6sfq7c6TetOj++g7kJueAl6NXJkUETfcrlYbwtKs63hN7Zz8eBw4w6Y7xG2jd2pcmfj7IqUX24/aM8sU2/LfxQv/3y+eyqushY/0KVjtH2zpYUn9+yx9Dow=","layer_level":3},{"id":"e65c5ffa-5f11-40a3-bf1c-94dddba6f0b0","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"REINFORCE算法示例：GridWorld环境","description":"reinforce-gridworld-example","prompt":"详细解析GridWorldREINFORCEExample.java中策略梯度方法的实现细节，包括策略网络输出概率分布、回合制奖励累积、优势函数计算与梯度更新方向。说明REINFORCEAgent如何通过采样动作并更新策略参数来优化长期回报，分析GridWorldEnvironment的状态转移逻辑与奖励机制。讨论策略梯度的高方差问题及其缓解策略，如基线（baseline）引入和奖励归一化处理。","parent_id":"b57520d1-b55e-42eb-a5de-b0afbcd5b0a3","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/GridWorldREINFORCEExample.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/REINFORCEAgent.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/environment/GridWorldEnvironment.java","gmt_create":"2025-10-02T11:57:28.887565+08:00","gmt_modified":"2025-10-02T12:29:28.145444+08:00","raw_data":"WikiEncrypted:TFkHGYWaT53fnAFA6Zzu6GN+nU0DSYMBhwyc5j6CdXnDI4RCS7hbadUggixi6PL7Ifcl+aBjjV+n3W64uvSsOS4i19zEkrEvZh0ujnKPnsWwgayfUZhMIZSiAMpDiuFpnDjsE7HHXy8eRVyHO3VvqTZc5CCi1KXxVls8glttsEyKDRh4zB7s3eEP8xRsTeI+qN6UxesG7/tiUQg2NR7qRZXP53/ZQhFSfpJ50SiN6QLMMRvB6l42eYaOr+99Ju1kBuUDTqzpQ1DhzRhoxFqyQdnpXTD5ikojEOJDrYXshWiPZG/AA7+q9AWQDIiRwcbkb9ycp1uCZXrlgfoEgq77losaN6nxBd4s30+xXM7pM8Febp1MJi6IboyBZDRsEauDdDBeQqu0OdBqDwoub33/+jxPvCH+zf11mUGJWFTvtbdJLJq08oFbcgpYuEHx+2EsEdCEZuZTo2xclT/9yn1OgoyUkg0HQbNfqmcRRXGNJRsLpjfErEdLw4BgaCf6HjXHcru3R2mVu8hfY80cTGIOpq9W2N75mvMIOCssnvxg2NNdx1wy+8eGBLaRi60F1xMgeR+OLZMR5O1FVED4CPBFdV+wCkPtZQ8SDLVS/SvMLoF1UQy5BBbxcnjxlQHQrKfd05jrtB1K7WMbkxcvt5ZgKiYHCmF/uXkpG8svZff79oCBrl6FCIHZPnbI0m/sFgrRBEQqK2oKIdwcPvNZkO3lVncRRxreen8MohuN5QS+UqSve828YT6cX3LSDvQPPZ6WVxO4O72qo2nvoiDcBDtkcf53AE5rLeXSM0EgR8MA2Yc/772dZFy/8C+9iaihvzsm9sJ5fpC1n8E/y2zkqEe3uU1WqGTTG7+p5QjSLY7hFOqxN58n/yy3Um/qAR2FsQvoWhTWKhTznUEhjMC+SKUdg5ttpolqEYpNsM/WFzlkllwZ8Ub957asby+x4Imh1cH6z628QAw8iraYSzuAafLMskLCHLgzBPqtfj6fOX35j49MK22UVuKqdNI7FdsQZ4QQqSJzFIMtoitERQii2YAzlvNyHFwj58pQ8D1B5x/sK6l8cVvVKQH3F4gwMDIgesmuXMpCcdaLGYcDF/ZaV5+NG1LbOg4f3uHuul0spVSg4RWIm0a9xwAHhZ43Dz5aXRd4/AbP8hGQBSo6MNEKWfmeYYberfZwGN/vzLTekG6BANmJTdT3Z8SNPUKAyQEa4iyZRq4FlCsiEvOHqGYleN4IKDUsyKEd13oIglBnqqhyL9+w56MR0YHzumzH58OxwGmq","layer_level":2},{"id":"9ba26dea-5064-4f2e-8827-6afee2ef18f5","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"并行训练状态监控","description":"parallel-training-status","prompt":"深入解析isParallelTrainingEnabled()方法的逻辑判断机制，说明其如何综合enableParallelTraining标志位、executorService实例存在性及线程池关闭状态来准确反映当前并行训练的可用性。解释该方法在训练流程控制、资源调度决策中的关键作用，并结合实际使用场景展示其作为守护条件的典型模式。对比直接访问标志位与调用此方法的安全性差异，强调其在多线程环境下的状态一致性保障。","parent_id":"9456a5ae-1900-4d0e-b794-4322dedeb250","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:38.160338+08:00","gmt_modified":"2025-10-02T12:44:13.749084+08:00","raw_data":"WikiEncrypted:lhNRMh5kNTxTBCRgMKyOH8TRR5L4vA+F/Ed0++w3V2rxI9/t3TcDgCbW4/GjiE/rkU2xiyTcjke4lPVVnOGZ2Ks/mCtaGu63NZCC17AYHgrjA+KNtfQyTLVFlb/ZLxeGHJvHVS6Eq+uDxXjfqDe3roEwFXf7pqrjvYnCapYLcleCsJsqjPf93Q9O95FQwhcjs8T+caNQaRA1u7aIut4W3w2o9XbarRLy8Gc0MAHvYwoSU6VE6D5KZooBeA/8wuhQisUw+YAl4cJ/5bQqdzJHyX6ItCTnJaPWqwTJ6hzbOEUmSoiRp4OEEvugGCP2v4Zums7Uf3fxAwKv+Y7+H0A7krNC4jj3x0EUXye3mVeftw4hh+R2z5i3kcjJFC9B/Stu4yEfWuOorL7vxm7U0BNBlV2lVTharka9nrp1J9whcxEylMZ3TRbGGmUQTpEjx7vng8sXVVLT/3ecIR3+60Nrri2dxfLKf6Q8FBgcZgHK1fnjxCHgOPglVC7RMy7Hs2gRXwxZqESKKYfeMUB+u57OYeyFUuC886GLrncU58/e1CrV2QQ37LMuWoEdtVJGvdL74UGJAUslhb+2Tx/muUxmzI5wy5pMQl5I/cvAR8sfISCxSUDeP+nhNHVrfKtnvBcUmvvRioRYeOgtp5EBgG+x8ekSIPwsxQ+Z8PwAcLh5Y3xZZY/4bnewK67BSjk3m6F5hwGQghRe21R+IoBguu+fqyWtkAi/rpwGqsn3rAGtPjHjbEsVCfg0S85CjgmWE3lMJPsgEB0N4rL3ip4RA7AJRvWZFQQQAEFgcYzJp7PRm4hT3nrabz4IwKyGK//kvFQ+NsCiEf64JY5wOJW1vGJ7LXf6N+8HkMN0HNOqgsaSCbCCagVtZbV16NbfhKZNAjnXVwcgvk3LUnY40SeFOmUiE7Ni540QGUdHk0e/6zp1LcJOrMTB44hMlQZU0Dzbt76nyyBE9Hlg2xOwEvv5GJUVQdzFdojyg/L59Ung1eE37Zn/wsXtKEj0NqDdlvhCNNXVH1k6IqQbDEQjX6CvW7w7MlsdOT+MW3PKrFtIZwZAN+4=","layer_level":3},{"id":"2bc4f8c5-a443-4131-b2f8-d4cec0a59c97","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"迭代式反向传播实现","description":"autodiff-backward-iterative","prompt":"详细阐述backwardIterative()方法如何使用显式栈结构替代递归调用来实现反向传播。解释Stack\u003cVariable\u003e如何模拟函数调用栈，逐层处理计算图节点。对比分析迭代实现相对于递归实现的优势，包括避免JVM栈溢出、更好的内存控制和潜在的性能提升。说明在循环中如何处理creator函数、输入变量和梯度累加，并确保与递归版本保持数值一致性。讨论该实现对于构建大规模深度学习模型的工程意义，并提供性能测试建议。","parent_id":"2140e0e3-a193-4581-a675-3f62a43be14a","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:57:44.365009+08:00","gmt_modified":"2025-10-02T12:45:00.159005+08:00","raw_data":"WikiEncrypted:H2Wkcam9TCJMx6ZRVoHRDs3uxk0MBU0oZ0+gl4g3NjwvgOqPC3GVFuDIkKbsEa0jwCepz90mI67rtbdzE0dgxUqfT4qO8RzL4MXJ0hPM2agjJzIgtHuFD1TTe2jSRH2pyAU+DhR1BBdiL3efUog9r4hpdLTk73Y4U3YNPEV6UsL+pq/y7RHFHCaVu747acYSGG+Va7pbfABeue8zx6iWYLgEnJWA/kR8D2xbXq3GnTdgbH0hLUTuBIQj+1Es6Vlb0n7Lps6UjHDjgq+hYtIknzDuXwVmi4dY8WniVNEhMOQ3eJE98h2bo2LIfJIsk2Mj4hPgVsQIgxgTZ3DSPKyanlk8jI7A846LAQLfu5JLNj8K08TFzf0YyjUMmSgH/pIHduLoKb6KpDcLbf+Zk8YyjJY13XXzZQ8e5D0o4iS8FeKrSXNPcpIpSrEcGQSODjUhOSLytJbO4aYBkoXnZpFpfcoqCpn1kurHH3z0aZmQb9EeFWkf7ao3bEwde0y4rcdmUzgWfEzTV6nspBdn1jDapU5QdiydGqJSygPQ9jmRnPG7PWvaW6BB5bLjwP8o9GKHGDwmLGOrwqK2z3RJbN0/y0Jm1ChV7JtsGPIRk0WvxaX8xpjUEJZOcWy7HADCKxG0d3IAeLkv4x1oEFD2WRVugH8YYdhs/PXyP1yOeoYWIfugW6Z/z0iDXRim4GT+wVBuBa04yMfNMTV2ghD4sQdUcv+clYQ5w3DxJ8PfKPuCIOdK+NeeHMMZrizWF+G5QiBRQB7kxK7DGn1KS5W1uN90+ywHb+P7wpG0ujhz1CR97dBS2Li02FkAtf00+z4HXvqw7deuV69+57YMrbvpk1fPm0nEAiP6FC7JR6vII+0XGx+E6yYdIbRywlTmiPwwaLRI7jMLwu0BH9jO0rNp3+YVCw9PVmusC5+GFApZwmCYEUeoaLYavfFY2HAO9L+cqTQB8pn4TSCdRhzc7riMtEkKlxMMXfKsTARpANKRaYZWZJvE3+h+j8zVlZp5SD74iWdWBkR7hgEAvmN7E5TnYCElRVlVmuu6OeWpobsyZZKLVWd6dn+JIVg+XvRS8QMuWOWrgUUrAVL981cE5ANcZ6gcR8Zq0ZPqU9gRzK/6V7xaoQ4=","layer_level":3},{"id":"85955f65-3aad-4dd0-bcf0-b4bf765680f6","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"LSTM示例","description":"lstm-example","prompt":"全面解析LSTM网络在序列建模中的实现细节与优势。深入阐述LstmBlock中遗忘门、输入门和输出门的门控机制设计，解释其如何有效缓解梯度消失问题并捕捉长期依赖关系。结合CompleteRnnExample中testLSTM()方法的训练流程，分析LSTM在正弦波序列拟合任务中的优越性能表现。详细说明BPTT算法在LSTM中的实现特点，包括细胞状态的梯度流动和门控参数的更新策略。提供LSTM模型的调参指南和常见问题排查方法，如门控权重初始化和梯度爆炸处理。","parent_id":"e98918ce-2181-4bf2-9bca-c1fc79489513","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rnn/CompleteRnnExample.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/block/LstmBlock.java","gmt_create":"2025-10-02T11:58:00.9331+08:00","gmt_modified":"2025-10-02T12:45:52.219475+08:00","raw_data":"WikiEncrypted:U2T7ytqX+ytrbLVRlgb1Usagigv5nXG90pY2eowmvvwhb6AoFMpHIyjQnxFYFXvuGHGCtx0pq/lq24RaRgMlDczkpjMJttaZ5V1Iv5YDrT5iyCkVarXB+PGdKdOSy1KIaXGFLGJSyZCE/njYAkCnmfJKr1j4O6BK84GE7iZnGPELuZhyX3jmIIJPs9pNMgO/GC6IlAHwxJk/lzwU6s6fOy9tlEDty2cHTh9LShxwjM5QIJ7oWlItceT82yQqKpIcYQG1q5akfrPAszBvSB7m/d+5SA8JOux4m360NvTUpKbnREOZKWRQcXhoiIVNqjp/XJN8c5Y5BGiDZ9TYMq4XLDqf+m5SeHp3oX14sfbek9igC05KVVuXwqsMt+WohGRjt6LYH094FiaHf72HH/xMr17nsZFV4j3Pv2Ce5/BifSkesxBQdTPFPkM51EBW3OSXk+EgpmQyaVrPceEVJUemWEPd+TB45U9OeGVYGMWs8WDjXoYGHV8kirWjgVRD3sbg5DtL0124T+U8RCYWe0LW/LHH+BQhVWDZBf+aB4oSpQpYdxb1tJoMY4Agoj2f2j4+VvVd7E39tB0Dq1QErCQ5Ej2d69mm/1F/nufe1v326Ksb/dISc1BAjOpJI/ADI6x76ISBxJ55hw7aAfmOyr3BEbLrD1f2CZR7i6DaG4tPp39IgaQHtM3xDbXEM6P78JUbeAqTCBE9ATtOG+zai4WcFg034IgA9tWv9Yc/zgOH1Atsc+icgwgOjygfGwhTXBG4RvJjIEqJUjwIRXgwaOrhhI5kdXjJdhkCPUUXeN9CnJkYN8KOUN26q+PtNm3kG5H/3f87ztvFNr5ifV+NoCbriW0VTsB8HfJZV4D9NlSJQ6Lsyk6KGs4XO0jNpzHcZYD189EtyobE5nESM68JuS1ufGQFyxc1jKmHAQwBXU2wNr3uznJxzRlh4/J9p3MCCiPONCAVGeEwT1QJPDf6+njLjCtWvaKlyfHpA6AB9nq1z37XgjsDSzj0rqaqyHnUwUENOq8mpVOg6xrsjos4beSscTty2GyMwcvOaHcB4+nlezZpgVlyF+LSvw76DjLmPqvPkLtjBkWmoUM3zRlSObQzIJde6NzMWpfVepAIo14yIDC7HQ5ERfN5hMTxWAiK0EG6jzbyABlLz5fhNmuQHgyOv28ghHKgYdXaT6hCp56RyVcahF7sbf6gWxCjE1K0F1S49Rdt22QS38g4LT1vD/NX7MOnqBnYufRB3keDx6jPdNxS+n1ookq+J3bRmfwcW+J+","layer_level":3},{"id":"d76dc77c-1d34-4362-afbb-e07e6a3cdbe3","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"一元数学函数","description":"unary-math-operations","prompt":"系统性地文档化Variable类支持的一元数学运算，包括指数（exp）、幂函数（pow）、取反（neg）、三角函数（sin/cos）和对数（log）等。解释这些函数如何封装为Function子类并在计算图中记录前向与反向传播逻辑。详细描述各函数的数学定义、数值稳定性处理（如exp的溢出保护）和梯度实现。提供组合这些函数构建复杂数学表达式（如高斯函数、衰减曲线）的实际代码示例，并说明其在损失函数或激活函数中的潜在应用。","parent_id":"76d2f906-894a-4c13-9503-c173ef46d3c2","order":1,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Exp.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Pow.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Neg.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Sin.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Cos.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Log.java","gmt_create":"2025-10-02T11:58:08.707314+08:00","gmt_modified":"2025-10-02T12:46:47.251942+08:00","raw_data":"WikiEncrypted:tIugEUBHCgMXeNbyfDYiCZfQBJCN66bYO9DT+qTgNMx5HARAx+0y2s1e/qzWuufghEfkrSjt6ojYTOCW3TlHL2Z19yN/ocB6wn4s3M18NbuV1V/o7/xBQEo6GrjkskJMgdAHIzIytGlFoSIEdhy91mHKBbiBzQyqvTkPbONAJ1Mcc27JlC5s1apGTwN/KDE0cPVYg9ROVZAnGJ7vh9w8Zu2pcMt5ACUKoZR+psibTyYx2l04KFuRMEIoGKN1mVHc0eyDa5LZCYxotzjm/VtGB+0Dde2zNT058h4s4KFP34pEqlA9QTBFft9DMM8x58g0bqkbVBUUYiCRG2ktGTohYZD0tUnYyhhD6yK11fagb8DkmSeji7UC7aHnlEuPNNhP9/kC3ld3IfU9Hqt24DT9j4Jl37yraE20ejHMN1KmronbLK3dOXtlQqgVZUKTbj5GF3z6peI0wX7SAtm2zRnFnKTLZD3gC+piqvP2+sGAwevde33EnlJoSOYGAo5X1gWY93cluNBeKl8nGAMDQfsLX9Vdzt9ez0V3u8fJVrOZ7nziDr9K40fQ07DPWTdgSilGgySr7lfuyOcRR9Ln/vC81r/fjPmfkAW74vq/nB18UVFzXRJ9FG+Y4dLMfBSFV3a9PF9ZD/PsrWvCcCR1efVLGNMePulwHnRdV3pYXn1s4Ys9IPWMyddPn93d1UcTfmBpOnyCDruY3mrZspksmYP+MvRhtjOF2J9oV2dzZzq0kEb63pvYWmqc1rN6usJczIiuWDMVw1rkmGg4ICEtliK7FkmvIyPnJCExp9cnqnth95paV3x9cG5TEZicLLI8IhVIeKaQqzDeTUkpfgVhEtMnWeP0MjC94YHq32Yh0fRbcKXfcO3Mgg6pdKbwPA+5sH0uw+dYMymMyJhgN2Xqf75/FIUMHokSuFftflmM7H63YYERjhAc/sqEvh4SYxGgEqQSFety25cQfjljRz4lHAW09sl/EooY8B+C9e9eSwLctyInQ/XY1AkYZ7IcXOEUNQOgunaMhVL8sj884CzmtPoonMwfuc70DgT3+iFm1IS3FShqQf8kMUkfrUhPhOHJmu/SEhTgayj6FdhvvlX6Ne9ZUynC4TaDjkm563G4qcUDCNaOUMyd2qh6H0OzYY4xIixYXNmAEV1yrVR3ict9jzU8iOoRyorzb8UbuKkPd43jTxUOWjXDzerJ/XrfxAxDhMplu+zPkXRO4EBi4/Lb3rRl74jFP7C5zxbUOh5AduuiJf04cTj5GW5DYuEiIBW2/zm+sYTqHWvZcavRHc7qrwvJ6OvrmfblPUD9goU/SvuF+F0mdJFhE08IxbP6P7AgmQklpXvd5Y1ePD11aYUZH2Uj7Vf9NKLt+2ahfzhwJWXVs0k5Q/wdDlvhiPICCDiGC2gDfazL6Qszg8y9b5BGptsQRJGfc2bIlIpgPlWwtqw1h9g5k2eRnFH9amniD1y4++SlqegGqq1JI4ryHZLwxOoRUD5NSAVwDc2y39Zug9TWL4kSlVAEA+73z67B7DTMyqfne275VAbk2RokbfjSz0YiMW77VzvORYHtf4OTxaxRQQEGGF9z7eGXO00G4M+g7WbA7sYniQrPNjyb1k5ibMDH2HOKKBlDFbRc7iM3eyR9RawWeJ8XBjv40NMd8hyK9Nvsb1p1Je/r0NhZwTH6Q4ci/qatK5G3mU6Z24KeKGW9ToQfZHYuq7xU6Nu3riz9Ezfq","layer_level":3},{"id":"325fe314-5164-4ba2-8024-758419b1081a","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"Token与位置嵌入层","description":"gpt2-token-embedding","prompt":"详细说明GPT2TokenEmbedding类的实现原理，包括token嵌入和位置嵌入的参数初始化策略（正态分布缩放0.02）。解释其如何将输入的token ID序列转换为高维向量表示，并支持可选的位置嵌入以保留序列顺序信息。分析getTokenEmbeddings和getPositionEmbeddings方法中张量索引与复制的逻辑，以及如何处理超出词汇表范围的非法token ID。讨论该层在训练和推理中的作用及其与后续Transformer块的接口关系。","parent_id":"376ca184-7866-43ad-97eb-ee95ca47d2d9","order":1,"progress_status":"completed","dependent_files":"tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2TokenEmbedding.java","gmt_create":"2025-10-02T11:58:13.038164+08:00","gmt_modified":"2025-10-02T12:47:07.83556+08:00","raw_data":"WikiEncrypted:/KTh5fb1zy+924gRG2eZE2fJAA7PQb3hiOLXE6WpMkYX/k49Zk6ZeaYnorriPwf6Kpf2IOa1N/0AkIGBo1s+u/NFmYDZgm6xixe4DPzSwwwZS8iQaonIkhP0p4itXKoY/j1q+WbN6s03P7z/+p+gcBrgEaZoz2rN8hHV3Kwt9D8gwapPlYCzlcaJEJNO0M/vvZjItwJ/1+4F+f6Qv4EP7jH1GneqPvzCwyr55Bieihxk96EdzflMRPu2+Iiz9oap+HsdR/SmgunwkRn0Oc5SCp3NBeZRbR4NjpTpErXUTGzKCWdSTRXm5jCJuBen2ZE298yCDA3oy36BCcMGugRM68Qhimd5rDJN/Bml0F4Vwbn/iG4aU46/CduIVMAeO+3G+Xon6r1Bpama9e7qwTl+gpa1jaOKg0TQuWMKKNuK0IjeMWTpl67N3D1f7q6eP9jT18FnKxHjktI5jtaclNFNQhlkM0mtKJLwAz59iG594b6E0uTXfGRiW+MTqbs+BBBTqR1BJfpX3gy/oUSYjLCcydejudboJunVTQ4MnIWhD5wNWL0PNlh1rrMk47/ybFogFxrlIicZQfKH7ZLISFfmU22pebfUjz0/T7CtNIifvW4NEG1LNjxXUMvYJyrYVNWRhpvuil6xfIvXxso0ZrYkYg62CWWpzL9BAlI3guPrRDCH+Tk75unCimI35/v/ic3Bu/cl4tRCJACrzUxJwWzRFof2VRXv8in/z7ADVKtT1gfC3UFD8hiX7j4V3odYIENj0kmkmgU5fO9Oz8DPVnWA4YPTLNbCkokGZLKREvci47mZfp7siFIi7PC2sY4bL8xFGNBc0RlFABAKagbaPYqTPpt0w0EdrcWDDBNnd2pAnkV6ZPZNw/UawsTqzBxnNVSfPRJxl7oNEPbVjK2PGgPPVCzuSaTVoDx9cBsKGZ8OrbhQxZMEq5tkeYH7ErSaBZ05Lj3yX+vhi+Cp6bNXWCaX3RzOW3IRgnj8kuaMdtSebQgo/mO0k8neJYNyPc9ViJDc5RD8TFP+SIRR80feXUU0Jjvc+F6mvwdvk82c53gi5kEq7FztSPBbPhPGKG5TYP7H","layer_level":3},{"id":"1275e1ee-6647-43a7-9473-015f0957e379","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"核心模块","description":"core-modules","prompt":"开发核心模块的详细内容，涵盖框架的基础构建块。深入讲解NdArray多维数组库的CPU/GPU/TPU实现及其广播机制；解析Variable类如何构建计算图并实现自动微分；说明Layer接口和Block组合模式在神经网络构建中的作用；阐述Model类对模型参数和结构的管理方式；详细介绍Trainer类的训练循环、优化器集成和监控功能。提供每个模块的实际代码示例，解释关键方法的使用方式。讨论性能优化技巧和常见陷阱。","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-ndarr/src/main/java/io/leavesfly/tinyai/ndarr/NdArray.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Layer.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Model.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:54:33.688671+08:00","gmt_modified":"2025-10-02T12:00:19.085379+08:00","raw_data":"WikiEncrypted:bpQ1QlMq61uqjeQzqQaeFJ8lEiuSQp7TFZGpUgKRJgaf7PT+zt7MmzNkqVEU0hd1ivmcFoQ5NrDuJye6YrJgMoV3efupxeD12F6hEsrzlU4BZ62l66Z3g/Z3e8Pr4yiI3a4IruedgmOPJH4AB++sWfbKsJRc6qB/5XNBnrfC9AthAPsurfDTOI/OKbK1nsh5sdPxAp9QItfSd8F9WbSWxUMJgdtaE6gU0MWW2qjd98fDSCKZBeS6LkvK3aYrpAF8u525cxW/57v2Bkjrii4+iIlG+kruWJWY9OBXKmqlvIVhycI1MQDUM23e9d9EPe99E9nYUzVoJost5qTQXGzEIojKvSGKOTQFeB0YU9iGtaIA4mUYqZ/G/S2o0dxX3BeOmziz9ydNvx5q4QEt3E5dkF6oY+nk0KiwiIM3O0UPuPfMEmB61NXfNIEFkkOa4fcr7uQQoAFEZvMh3kfcxMopI3otJqEH+7Lnt1zpmsZmq5WwgtzxIWJ1yH6LIjGnyH0zxvm9fVNPojpp3TK74aswYY7BrE3OOhzej8x9bN8LE45hD6i/3mylJNXKpNuARHuGjEApC2LK1ghK/jo/OcpfnBsyBQhuDimzZ+N0IBkNGgnVszdG3uVgzx8k2rtylbpA40dQ0P4tdrjWsfRn6rZVwOKS8AShq4MWmnxq4o8KvmvXG7bzBJoVP0qP5KeQqNAZVfvRX9PEbs3/OJgQ8vW0Ok2YS/HR8lub3EGPNGMmTEN0mP9bF5hMwvXq3by1vz7Nn5k4BenBxlJx76Uk2y8XGRMzQxtUd/ntDKOHPSdIHfMQy8bFMgBc60AKv5wwyfp+Z/J0XkzGdqRnz2pvOmoXs883OlrOkqDzO8d19XdEfW9ATUPtMWdB5RK/fMWuopXZ02oiudTHX0SAnUty3vF8X9WdsXUgWLv9P8ZT4J+pWSZpT8krj9Ha1auBQqj3QuMosKjMR40ZcD70bSGqL1Sdi6rzTxENRM86sQhoaYRmdOrdfRJHMmzazDbvyGeEdQbDbAHgTtykX8wTgbC6zmRUHyAOq4bH8wBm+4sO413jDhTNou7rpBStmwxnrhyM0ciyKyzV0dnsfqS9l9sf/5/51uABUKaQvoZ5Qrcx9ww7eEeSQ5rK9mNhERjjEp4/QzjQsuAqZhGDEAYlDxo+JIiOzIK44dTWrG21BAtAFDhdMRXdv5SMLRj1zBKY+j0n9WZumOiWwr8X7ptMM4MpqquZ99S3X6n4OgodCIMXsN0m2JrnY7huUaKoXYmnuzcyAwnpE2RHWPC2PRqrfuPLF6z5/MrHE/xylDsUrxKY4cej+Zy7KE3pR1ir4grH5hkp89mI5t6KT83HLqVa4qEQp2RvMHRDftYGBIdteMZy8xUaRMlf2sjj63lrqpeTSYjaT8/9qJK3T4kgierOzgnWzI7pkp/WhnRXJvgZiFN1wY04OES1QphXJ2j6kw4XXvEULC9vsxH0VLqaj4qkq+8JYJrR8AtUHrDXDBcInSR4IYdoeoQokLr3hYMJ4MA9KU3hXse3IYaX8bwQmPUMi71BcfpEHOzlfRRtHtPK8AAGX6eYSEDqR8xkE82xQnX/DC7LWAYMnJ+sXbvSiifhxz++JjFaiQ=="},{"id":"2b4272ba-a29b-43ba-b0af-a00cb369f756","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"神经网络层与块","description":"neural-network-layers","prompt":"全面阐述Layer接口与Block组合模式在神经网络构建中的设计哲学。详细说明ReLuLayer、ConvLayer、AffineLayer等基础层的实现细节及其参数初始化策略。解析LstmLayer等循环层的状态管理机制。介绍MlpBlock、TransformerEncoder等复合块如何通过组合基础层实现高级架构。通过代码示例展示如何定义自定义Layer和构建复杂Block结构，并讨论层间连接、参数共享和模块复用的最佳实践。","parent_id":"1275e1ee-6647-43a7-9473-015f0957e379","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Layer.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/layer/activate/ReLuLayer.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/layer/cnn/ConvLayer.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/layer/dnn/AffineLayer.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/layer/rnn/LstmLayer.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/block/MlpBlock.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/block/transformer/TransformerEncoder.java","gmt_create":"2025-10-02T11:55:14.989793+08:00","gmt_modified":"2025-10-02T12:13:06.548852+08:00","raw_data":"WikiEncrypted:wrRKJ4Ygz4yLJzqEIf96ziOa9XVkmlE3u7GmBRL8iPd5OMAShlJr7teZaDNxgX/OBKjp2lCONLGk3iM0bzsIJZg/87i6T6fVinwmZus/9dsp0Qf2Me1/o78naMyDg+fNrqIQVOyGtWKGr/8Mx5cpdJ+3PScY5SrlSrvHQ0fnofSUd7QsijePhf9JsadwVnWJQzrHL/QyxiEIf/wAAyoslnGj2RkfLmQBjNkgcT1bzoUki2ACyEbv+wHpLGC82eurldLNHBl5YCmEeJwswz067ygNjw4Kq7R3vSU8JiAPSJ+iqzG72sRXkDyd6ArMLTJjFW0GB1CeBWTf2i+lUH3ko3CXznHI03zaucaRnlI64lsbITJK/wdaR0zUDT+Pis5v+EF9WI3kM0G35jx5DvaQapUjKPtgl586F8rknxU7QYluziuziTRH/vGg7wQRhlyEIXcrTJbY70WED03PuZN+VmNpEtE5DA0T04jbzfMLywoW+9rlnowPOh7ViFB7AsoIBJ8Em22X7EbwZk1gaJ+OYkcNeLkRhhC3wHYHw2Jo/dbbhy+raoSPRwtp2hpjs2hvL6ugGMCwju0YZRQa2ZLnSiyPpuEZjKcdVYps4O9YQ94i0aYJPuskHmH+zOD28cjvUUhH1EL5qEh/CfHbVxAQQUAaFOnXUC0gYrMdT4jmstV/7xt+2s3/04NrtS8auAe1164bZIFl9iODxe3zRa4uQlpm7YTwdfKfP/cSkyskv3wt6OsyVgQZ2X8YMBHQ3suMquYahfIC+Q9FSWrnBb08aYVuOWcyMj/QE7OcmPhFSnhjWDJSOrqsGT8Fxyz5bE9ir1aB5akBFzYEU6cMQiMusAYzoT0A6r729/WQRfrjfbzOswx5yblnE8wJbl197+4PoJCM2cg+WNTjdG5Gd+IRJe5PHYuMqKYyfmI0CDbIk7MOuZl9dpmGEIyMRxpVFRerKk2kn4FrsZliKjRbitnwSJJEBlIDEbqfwFQL3agM5tMhvi1y0S7HhgK9kEmDISgPewKYW3r5x8gv5GuJHKTLwCzfXmPeQIp2qEscHKsr2EhEdFGJiYPqgNr5rPyk51wY7Lsd2hxIDU/LteRv3EtmeF0dykMW6bny30kGyhqTdMU62KbKuvKxlTxMCnNX4HfL7W13KPXSp+6rIwWg8SbxHM8N33nPHgLGvw71VTmKomZsWEfBAdkzWzMBBxAwCQRrjPJ+Op3SSqHLgcT1Na079jl5v1t5bQGSF+3OHfj1TzVP0e70SfLQY+va/rgwkUNy5UKGjwxMn5l7rnmeTc4M5NWCHAeDK8T0KpXrbobeeSCuq4L+UxXxw7IRZDzO8qd+Zvy+cL86FYTWodC3mwLJNjpZRcrl0KAGgCBKHgoX9dfIetl+XocliAcJFPxKgRgZV44FG9guj37ccUt7i5VeblVyO3pOZwNZAtBruh+HIUELbuMNqzDj8XYUWVmpzvy6nWwDmmwNgvEnC8FjEPQiDJI5AmDn5yJeRdoxh127/ts2faLc/BykJgokwneXTAzZy6i5FF354cXIZ62uUOyMJf8YmmNgqOZCubPnIZbCkzXqJm0GV2Hu2xIx1/9wRNiVjWum+L9Fikzq434oCzQ0rApbRfIgeOi0qiYoleJGaXP8oMYlZBQgwALqkj3zOr8z79oMvKcR91YbsFjlTcMAwwdEjKEijUbzXqo5W4ye8A0m3JNtLk3Vcwdrme0s3sjf7dKiU0+l8MU1jcuVBgTbzsUCCOrL+ALYF1e2aI+AxrW6gIRCWuxYN+HvAECVp4BV9EjCG7IrTuiZyAthevcPT1Y/1XFwpLqiBxFg3SwmEuwFn1DCHjPWGL0cJqb2rFx0f048Z5wc6YDyFQIa1/j6DYbWU6JG/sCxo4TC/eYO7KGVnbwI5QVzeCNsMFbyNuyE","layer_level":1},{"id":"141136aa-0d32-4337-adad-c5e39c67fba2","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"数据流与计算图","description":"data-flow","prompt":"构建完整的数据流与计算图技术文档，详细描述TinyAI中动态计算图的构建与执行机制。解释Variable对象如何在数学运算中自动生成Function节点并建立计算图连接，forward()方法如何触发前向传播计算，backward()方法如何实现反向自动微分和梯度累积。说明计算图的生命周期管理，包括梯度清零、内存释放和图结构回收。通过线性回归示例的完整代码跟踪，展示从输入数据到损失计算再到梯度回传的全过程。提供计算图的可视化表示，说明节点类型（变量节点、操作节点）和边的语义（数据依赖、梯度传播）。讨论计算图优化策略，如操作融合和内存复用，以及它们对训练性能的影响。","parent_id":"2bc08091-03df-4eed-9b9b-427fe848b3c2","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Function.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Loss.java","gmt_create":"2025-10-02T11:55:16.124326+08:00","gmt_modified":"2025-10-02T12:13:26.567714+08:00","raw_data":"WikiEncrypted:PGdHQOrMWxh6s6galmzx6/AH6koaRsRZ2mPCIcD6cZO7IicVYLhU2F4UfYaF0mGlNVauxWOe1pCPKOrohkeZVt0cIRdeFxR4OLZyhg8UEC9m2XCEIJMzAvRXqwAKZ0vkPO+/8Axx3NKEIcxhVkdfOuNaCnuecAuw9mXkhQjX+xQ+r6VlT146HKRl8mjsJmWtpzSANeLSG3Lo3zF6ZQV8PzydUe3Uf0Ic8cTEI1CKcMlMiBXSDq+C7OYjTMeMBo3Z4YgU6YUbC3BTh4zfxOxJYMIWTxx3vcWXML89+efZkav/SgwdBc4VcaojXer+/ZdWKwnJ8APFXKp30jVWMu/5gpYiU5Go2BDdWxSGG+a1OD27dkJu4THPbAE0raFEd7KAGFq82OuU5NlNgnP0l0/oE5d3rJYsm8oYmkHJRvC1Ofw390xnWcNIacX+H1Ycogf5jWFIYA9CDzr/B4Et/euZpznzXAwNOAaLU1qcbvxqwmgBdJeRHwPQ+XDejTSQ5PuF7YSliE3MJ8towC8NLg2DmpTEsi5qG2r3JypSvNk56aCgm3ZEbmxDaAJbhtj/U2nPAx7AomsXiQyUDNSMLxRpOGDwAtWaKKUCqbaod6tymrhU+prddgahJmm9kJtPuZMCvsdNAniv8Yk9C52eqMCdeBK7MprXjQy00zTjq9X9pY/QIv7+q8PGHO/3ifZv7j0j15YJnqt7q5U7a/BCLjSbmqwiJrw+fCzQXDjJ5/yHYf8kKLwCWvLWeBiNB5aglfvI9u61QxYT+wgpreDDCrSW/QLGOM9xdiOC86Khlqy74iGYt2Esrsq/B5IEg+0TkwF3iDx7U+ViZw8JM/Lt/AFPghOXeaUyHXmQAO8iX86oOIQXO6GSxPJY/Sm9SnWboYctAkB8ha7Oz7RHM5+1Gdd2lxd9ADg5z2Wv7v66IE0TmfR16X9oRk80LtvNG5ToR+YFvAxAHunYAYP9jCr5lq43g8Y/gjDOiRkQUzUAI6EGZj4a5UaZRelIgy9b3ykA8I/tD5OtGqkB5/xZT0q74mSDaKaS+SCEuE9X0deUpGhbvwc7OR5K9lv46RJNzw7dGR14o+77wNCxlcrOzoc4NV3z1y3aZjS7vnIdKAA6zDZiwhFhFHi9IHC21FXHvjocm5PVcv+mt5AA55c+3iXX7EtWYxt2V0v15dO9k9eux3LuccZBFRsSlvOODOXxw8g0D2BnQ/4+PNFip8jGCnNYuJy0+gb5f79TRdznIovnOfPTl/6wLSDjZNNymByNRN64RUz5AdWB8V0aBUNJtken/x7hYdF3L5TwpJvMENiZMbgaF0cXyPMkUD8GNpmFc9FXUsIY86zlH59bLBE1J3HZiTBrBR1dn6N2V4GYbFdyT1xkp/JOoAYdkrSTqAedcXMkSxIYHpxeuC3XxCkUOztxI61a11zQTwMg1iRUozod0BNLwOBqB22zEikYqD5yNsDHjmXyIxNF6410cB0yXs/AT7WQuHkY9IhBP7I23RJjs19ajcvstwmUE+hAbp99OE3qXJTjteeh+Mjg+4LEyW8tZG2r6U+Kk0OvvuZ/FW7dUn2+x5GtmEEkhHjCESE/mwPw2LD9g/WEE1vwH4Ixe+XpaPMEdc3sSbfxwaUHwwPoPeqJTnk0aRA86zWzyDzwqDUaoboH9ABeXOIKOgJsDdKbSQFlu1y9/cmmwl85Z52S2atUilADOUgmWa0qcNbO7uTH1UVm","layer_level":1},{"id":"2f5c46b1-56e7-4b9c-9e1f-d37699c8127a","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"多智能体系统","description":"agent-multi","prompt":"创建多智能体系统（MultiAgentSystem）的全面文档。阐述其基于角色分工的协作架构：CoordinatorAgent如何分解任务并协调流程，ResearcherAgent负责信息搜集，CriticAgent进行结果评估，ExecutorAgent执行具体操作，AnalystAgent进行数据分析。详细说明MessageBus的消息传递机制和AgentMessage的通信协议。通过MultiAgentDemo展示复杂任务（如市场分析报告生成）的协作流程。解释AgentState和TaskStatus的状态管理机制，以及AgentMetrics的性能监控功能。提供系统扩展指南，如添加新角色或修改协作策略。","parent_id":"25ce1389-fed2-4ea0-8024-9d54af4913d7","order":2,"progress_status":"completed","dependent_files":"tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/MultiAgentSystem.java,tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/CoordinatorAgent.java,tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/ResearcherAgent.java,tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/CriticAgent.java,tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/ExecutorAgent.java,tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/AnalystAgent.java,tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/MessageBus.java,tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/MultiAgentDemo.java","gmt_create":"2025-10-02T11:55:22.110101+08:00","gmt_modified":"2025-10-02T12:13:33.943151+08:00","raw_data":"WikiEncrypted:gTiQk8pR90rzooKLiaXVuZVQQIRBFKPmzt0kNFIhlZTtvwgvbVG70nfr6LFCQlSQmlvZ0bnGgvLSpS79tBh0VYQgLWEC2HYVCzUXt3KBaxR2c/1K931mm3O7FRWv66899Ua8JMTdyiXT8p5saX1SdVZK0ZDFue5IaiYbFPB25WK9jgg3yHqNlhm4ERVBP9u7qIwjL2MY+jG3FDny1LdeFL/UU2PavFPHEQNIJjnkUEk6EL32geLSH4q3RknGUL14RF9Ulo45PUD03W8ONokG5UC5wQFBJv2Qa+6Fj3E4tITNXvvxlXqm7e+UTycU610efa92XQqnSAGnr5O0JEDxHDvVcdqQBXkwT9NCip5yr9Lb38xbjw9txyWRO2/uuRCC7kQ6FDcohijvGjXvsDjrZxQ5N3iaZ1A8cZOyKB5yLgEu76FB0GuyqkU/s4imhj9R3XHmw0ex382Lt6OhMCieCuxv+G9GRIjvP0hfy3vbOZ77xRWjKLTGcNruv+Vm/tLwlFDcMwLQQOYlzShiDENubh/F4+xZwOJObKaa/pwxKD8zDwGmW3FGTvFFmZTCpfGh2vIT7RANR2FX+gB5Zf6U4kCB6sziUtrj7Br0qHoVFkExvP3Rwicd8OMzqM4vaOMpCenVWuMRmSKwKNWfJ4M8jbe1VRES/3Ob+B0bQfaaWIQQttX3LrVmsgBfI2feLKNIe8kUaU12CGHYELOdyT0XmOP1jmwIXGAHHEg1VJKnnkfqR7/rpEvVuggUNUoVzFuhbyfFpgGUJnlxte5CksH6hZ8Z3e5+QxaUwBz1XB1eMykjKyigTfFM25UIIrPI6hafNYWVks+DwS0GFs9iWW/dSRKaMkQJBbKTkZytmNQWb+myCGNEBP1dzWejdLoTUPMrTNupmZ0ky3CqnETi4r+fnGynvGAdXB6hfbmojhVBQSIEPCs+OePFicAD9nndrgllfr2I8q1T86BP37FLlVuG5XprLLWCgCeiuhEUgKuY/ayn3ruqfKsTQkFq3q3NdRyI1H+Mn4qOaZoCvJy+l3uzEgVh4a+4n/VAlJlx3ccn55VeBksT1sjJDZAiWdk1JGa2IhOsmbtsUwEEEhdNiAe/83wGQcX9NAJ3ZppI5AZRZTFOGLFRxAx5O4dC01qKpCqkY/by65+8ts93HCT3rSPg4BDzVtrkXB42hh1ieHX3qiUoj+qVhJa4LwPbqSYjI7WpyvddoJyE5bPy0Fxw07NB/CgXAg3SilxHoPXTNj4dnMG0WDnK6J6cYIjLqLshuvzw3Yllb2n7PX9+1XAC9bCnTxBveRR1Bd7wvqkpAaE0A1dp9n1CgyEKBnPx3V4AO/XtKlInunlNCGHBG+qte6pp2p/n1lKnsnQWiQp7I9dALbmxbX0upZlOyQk9zIkw314pBBZN6i65EGn2vB6t5WCIQd+oKRqZVsqzMxJjHEV6tcipzW2h2kgVvLxd6ArhGkS0GyVeGoRsfDKdq3w5dFq7732mHLqV9Gb/w9bl2OGuFLnkY3zGY98S9f9lVLfKp3NT/6Z/ALnhL4m+8GrbJBTdXwmSzAdHMgP+0xPcwSHGxLKSlYv71oR7hujtPRx1TSsXYvgsWd1i1aT14J5r2Hhj9pQNkbzplIljRFWvvfH74lSLrTFdVeQEUEgIZTTi3wBJ+zk+8CZDra8UUTFoDStN2Ae0afA67u2KpM4Y74Sm8bSQymgGTAm69KUyEOTbaoPgIjUbP6EU4zbYU1lnq0CLOB1urvz29nkLwCnfLWF4bXEYDY+6acH8x0hkfDpJazNcENQPmQMt3R50SeslLAWNmo/EsrnPiR2G1GRgZPIxdQXcfuRG2bWhUNfugz8R1PTDbbmY3g8EmdsztP78K6Hm1qxzijkFOFcauhmCX1U3oV2XTWY8w205QaJ2WaDmUZV6Vce7mB1w89EtKcmyAV0d3JpvyEcqNOprhwERJ7qbo9jq45pQDkY6mygbCdoJjhscrqvN1jC9v61fxjHmkEo5rT6n6M2J9uqpJpZ8ZP8hWU6poP2hA+pWC8YO0KJyf+WMJafwlFRi9OpuXI0cwkHq83Z7zf4KfpHmQF/sXSkd7r/Q+sSSsJkrM/Y9za0ybCYfhCjSBYi9kxeM1DkInyq25damgbD2DaTMCqObt/IbY2PxaNs04hogjVni+lJ60AT5","layer_level":1},{"id":"ba2c288a-2b7f-4e43-9ae7-b41234b9ba02","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"变量系统API","description":"variable-api","prompt":"创建变量系统API文档，专注于Variable类作为计算图核心节点的功能。解释Variable如何封装NdArray数值数据并支持自动微分，详细说明其构造函数的四种重载形式及使用场景。文档化数值访问方法（getValue、setValue）和梯度管理方法（getGrad、setGrad、clearGrad）。重点阐述backward反向传播方法的实现机制，包括梯度累加策略和递归计算图遍历过程。完整列出所有支持的数学运算符重载方法，如add、sub、mul、div等二元操作，以及neg、pow、exp等一元操作。说明creator属性在计算图构建中的作用，以及requireGrad标志如何控制梯度计算。提供计算图构建和反向传播的代码示例，展示自动微分的实际工作流程。","parent_id":"1d81f045-0d3c-4bb3-a24f-3cba807356fa","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:55:49.497587+08:00","gmt_modified":"2025-10-02T12:14:29.645826+08:00","raw_data":"WikiEncrypted:5vQ5s0nS48bl7VZ0wNBcV96OdOgczLLs1WmB33N6Q2WUzDMm3/hLPwmDGImAyXjxN2ssdQ/jHmHdI6HRWzMHO0BajtwVf/2jWzR+UvV3MQivxubZGN0uHin2cKyrFmzzgYM6NPDFq6yoJNWyPGjHJuQOWQp9zyN9SKC1k8uePxvNnmcFqRrSLZ5lnczHe+SaSD3W51UVtsNTozsZ47JqLEzmHWcfafybD6TaHxRIQ9gLPGJqY1TlH39cqnnR5DXz5JzyLuLonHWwdXpzrxRiT/rsB1hPPG1/qcPdP7vV1k/dU8w1Yln1SGp6Ky4Mt7XkMZ/HQOEHH7rMivF3VkBd/BsHZuJPYvKWsrb+a97LfQ5g/a4N1TXQW2XrB8pXa3Vn+ZijUXRAlc8qrfskIq8+vM5Maj57f8rWyxER9E2vY39qfOaEIiCfP+DmQDH9pMsNydjEIhXFbf1kkcaolJw0845OmgL8vczrTnXFqyuccaoUL/WjqdCKM0Y6XogL5oy378NBLy9gWix6RaYDr9rgrWljh06b8DY11y2o4ZCq3BzhCIip/Ya4ttxLRQCWZaTWB7Asi4kGyzLezxfLoB5dzBVutX11te80OrTPZwia29g03x9lDNQydcPaBOebeAtX8TR/uAPrepTy7EYIgNMHJQ0eQTFHF0hqTcE+/j+cHUldgdEmeHMom0zFHOHG0/W5hqMcJIcqFSb1TZg+B2LDu5mkZDdBPFS1MlF2MxoTJ3ms5tDeFXtRJVJphgC1G2H1w06CE9iJlR945Md+NJvUB82LBnAAC2vQ9kbN7jZMwTZE6cwa6BTku7Rnq+BGIV1jNTd+5GAWvGtxrzix1LcgJSCKywVRsoXIEQqjUEkrNswp0ZzzUCxTa70D+0DvQv4pUJOI+DoOaYuBJ7r44LB7/F+xL1MR8djy97R6AooX0WPJVOGcqk6YibuBWFpugI5hVur52PYL4/TbZPOsI1gJCJ5/i9ggdTuJCAQOdW7oYqcS4i2I4Nut6TeDVlRSQF51mGVADfFKKUk22+x+IzKGUcrMwAT83D4Pctps0UOUGjJdNAiarTTANr8emBOpwsA9mi/Whxlnp2rpObPm/Fs4ocgG2YrtpO5xI5Z62fPSUkUmxINe1Liq7HjnRs8PgCPUjzWplzyMV3fOxvaMpj3TfqQcvjGL+Y8Odrs8adTnBBqYH9HxCKUHOxkIifHtN6QsViFXOUgJYHcA17/YkVvyEV3pbjPZzZzpV3f1TzEy/J1+3mu/5Vo3Lw6d41BCT+j+sP6/Z1SvlrT/GuWBwEm2OJ7iNdxkvI2DMNJ7dPfpZZMxPJ8GYCYWrxwAszTtZ5QNFd80yXrvUwk/oAKKqRQcKXHLmT7BwSEym+WWJAtX+RHSw+tC9SRrupxiBVg4j2j1iA1Prcx4aUwJky8hZ/dA6jOjIXDGEY8qHPt2nr4MwNiFYkxupiNoMVN4DLg99YD8NTavc50mCTJyyuQUsSkNOezPRhgJUKPFtWLqX8cTQZA=","layer_level":1},{"id":"651d8755-3260-4c28-851a-0e08f708fb95","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"LoRA模型","description":"lora-model","prompt":"开发LoRA模型的详细文档，聚焦于其作为高效微调技术的实现。深入讲解LoraModel的架构，它是一个由多个LoraLinearLayer组成的Block。详细说明LoraConfig配置类中的关键参数，如降秩维度（r）、缩放因子（alpha）和dropout率。阐述LoraLinearLayer如何在标准线性层的基础上，通过冻结的原始权重和可训练的低秩适配器（LoraAdapter）来实现参数高效的微调。说明LoraModel的构建过程（buildNetwork），以及如何通过fromPretrained静态方法从预训练模型加载权重。重点介绍其管理功能，如enable/disableAllLora、freeze/unfreezeAllOriginalWeights，以及计算可训练参数数量（getTrainableParameterCount）和参数减少比例（getParameterReduction）。提供LoRA模型的创建、配置验证、权重合并（mergeAllLoraWeights）和状态保存/加载的完整代码示例。","parent_id":"a9a0ee5f-a5c6-4f7b-bf70-ae25d29a382e","order":2,"progress_status":"completed","dependent_files":"tinyai-model-lora/src/main/java/io/leavesfly/tinyai/lora/LoraModel.java,tinyai-model-lora/src/main/java/io/leavesfly/tinyai/lora/LoraLinearLayer.java,tinyai-model-lora/src/main/java/io/leavesfly/tinyai/lora/LoraConfig.java","gmt_create":"2025-10-02T11:55:51.28978+08:00","gmt_modified":"2025-10-02T12:15:18.248419+08:00","raw_data":"WikiEncrypted:xMUzLS7NYFJJ+hPp34A6UM93m0IoZhizYc6id/oNzTbnv6Uibd03widbG0vBL+yUazSvGUXV2FEpCe92mw7tLFeJ/qbsUUVXEg3rVvZ8hUBt6yB3HVIoQrfZbv6MEiQrzZXSmJjs0QXCkaj8vudDhLRcLrEKjJ+wGfbGbIM1O+ZkDHOaDoJwD2153Unh9l3cMxn/TGARl5+j3up7ABmHH2Jjv6KrCCHB5JAY0J3HJpWnwFTuxbKT/7IJyiJqMPSrjnhQFytijBgkuBHE0ZrX4lMnQ7tgIbQCyTTqffMpQzgdv2DwIcDmDNySWgMo8TGKFFNjU1cgFZvF1Tfu9h9UQzRtaoWrit/sZAnE1UsSqvv2K6J0A5wZbNICg6c0d61jOOpUhAVvcehyrOwHCk8NE/7MGP0ul3X8HrmVGfXDkY5/4tpTz6Pq+BGZydHR+fy7ytRxPR5liiKE/5ESaH/MIRDZCPmwoRPGqGS+N5PUTWw/d8fniWbttHfJWOoc3BwkfZhC8Us3RJQPuyHhXj5W1YcyMzlbEJtAi8CSa/WxXZCzquEcvSnWsZUlTINNUYVMVYfy8otg79MxddRB2diGKKgLxz+cr9WTGeh0lOBAz7caQoeV1OGx95NhClwy6uK0amWps3yXZwpvXZAPjbeOY34QAS7iIIocoHyYdm6IYQpZNyjFBCdzulvSEzieQjQUIMGWir6OI4kJgAdQ2P7k/aPH9h2ysr0bkn5VOPKKjkwGYwLlEN2l/gf/FsfwM8gJMGokvPq5q9NxR+cxTjMCG71XsUqHaGv8KnRTbtAylMaA8QnSz+N1pzsep7Tbpes5kB97jXOD2kIk4wZ7SkMBUlEDuULjlooZllvM/IuCRmRXvAuEBsip7cyDhaKy5X3ytaMDwCOYaDrSmeLz2725HxsBj9pRFA2w/Mvo2Mni49mR1hbzlTkQXQv1An9YSXgujXGvFTL8au/7ajaSA0yUPkCTp6CLGexMwgJVL39PoOOVXBEFfskCZxpJXYX/mqVTKpwc8AogSTjxVyvV6AJWq1hcdQuM0ExiTIDcZwzC3ahYTuRCJSOK6jWvEDqhsrKibrhKyCqkHjYNZ9g8CzIIwQgFs64KHVjJUGdDjYoAONQzCU63j9lAfyN+gJIbyqgKBcZ2/OvzSfu/qgPgDn6yLZMBhEDVjenbZg4i9QvW7kgaXX2VGRTTQ+wqJshalH3yHNrZZ6mwdRttZk+a+mgVtjUAy5aE6BhdZn5IrhCMkLwizsR9Zb8wTkiZHixAZbUa/eenP/G8eWLYNuEbgVHxx2DFvHdQTY3+5Bw7sEAu9IHZjKB3sQS40pb8XFJ4s3vAjhByvUn3YNqlUl5moiieLjCDtEAHbbz8pKjvr2JMjGKDquj7TwIrsHEcu2q4Wpm8SbFfMjiTRBRKLmKSU2VpxU8hicB0h7elXBoq8YzFQ41pCA/H4VljI9iIHGEb+u+SPmw16NxN1wi4HqwsZBFjbMiFCVLxOCirYV7Ouugq5SYFsF0LNXwfM4zfmbOKzo4s+vvXiPiugJWxly/OYbvU3T2q7xz++SrzXbj/GLuTJdX4dq4oKbmd0ZTUO3pbmUIs3wFd4/MA8R9jBCuQSDTChzdiMob2gC18c7x1l2f6uvy/eSYVvlCuIyjaYuGjtQVlRLOD932yIpzAwiKHGRSjBN6MlHVG05+2gWzHZlyc/fb4eIAUPXzQgK3qok57uoaVT7xnYvUURxda7wsi3RBdCgNjzp7Os2nfVWGY3rRiS+BVlQ5WuT0GAROz8B0prdx6+Opee5FgMXuI4jBSqmEoN2+C2Zzhh68qGKaegSf9xjJOOb52NlWLbcPiuof4CmnWddUFT7p2rljDyH9LUjCMfg==","layer_level":1},{"id":"b57520d1-b55e-42eb-a5de-b0afbcd5b0a3","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"强化学习示例","description":"reinforcement-learning-examples","prompt":"系统分析CartPoleDQNExample.java中DQN算法的实现，包括经验回放缓冲区（ReplayBuffer）、Q网络结构、ε-贪婪策略和目标网络更新机制；解析GridWorldREINFORCEExample.java中的策略梯度方法；说明MultiArmedBanditExample.java中多臂老虎机与探索-利用权衡；并通过RLAlgorithmComparison.java对比不同强化学习算法在相同环境下的性能差异。强调环境（Environment）与智能体（Agent）的交互模式及训练稳定性优化技巧。","parent_id":"f4ba2b64-d220-497d-ab20-b4d22dcc9be4","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/CartPoleDQNExample.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/GridWorldREINFORCEExample.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/MultiArmedBanditExample.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/RLAlgorithmComparison.java","gmt_create":"2025-10-02T11:55:51.507317+08:00","gmt_modified":"2025-10-02T12:15:50.657929+08:00","raw_data":"WikiEncrypted:TFkHGYWaT53fnAFA6Zzu6Ky9uBDuQL2ZSwsbTZLlIafk858eJulzM3aLLmFR02IXet2Kvp97LM231uPYa95WMGwG9r5zantL1j9tvQqh4kv+JXTujcvkeWaKf3twUevKH/3FINiOhXCmIRZbcTd4rtgOKDewsD4iK4dZHSQQIqAp3kMXzJLKLC17KywXvX2jAKPoxfxgAj+AiUxVpi9jqDTU6SE3+Eur3vXz8p/88rrM7AHMtr2wOlMHY7PAoYvSkM9AOegmtTgKb8wFyr54UzwHn+Vu08XjA+4qtDOPkj4ouhRYPzT1/xAuKmp/eAYK0wWEBaTJz1bKvYtbdtntwCSB6STFrBdSzDvLpzZJjDV3XtHYW1kD+T5b3VYzf3BYFwTWScs9HDOEM6DY0PFcvZxUWgUCsVSTn23KVCWgYpvA3nle+XpQRzOVPXLdWAjI8GbDg37v3vJNj8ZJ36DMN+RD7SpglPsG/Br3B4E6h2tTnaxkqlIarwYGXeIbPUIv4po4n0JDy+t+uCx3Ouc+LRrf9JZj00qnTNBazZ/+DKMqrA8Ui05wkcy3cc12QGPzz65XBsMm+jJW42l7S9/Ur5/VYwo0mW8RYLWaVElGobh4f4ENhLBk1cnR8fOGufnmVBlHqZ6GYmnjbsTSDJ/BGdx8nY7Sy7oFpVgoyu18n/NcMTB6+I7aykXcudwkg/rj7QfRqVt0ybav4hKQHV4Gx0lmyKTSwmM3PLhz6FV4BW0Nv+oLNvG+nTWd8ZgjGNJOj5Vsj32/Zwmr0KV9gUadXHPt3OYX25OAiB8dUL+N0c6rKgMH4qVP9BpGgUMuMVCGvLNjJTSyudWTDyiC7GNGHlct8PACWT4HYK/mK7rP5vCjo0yhNyG8MtrHWtdIfzrskMGLRZDk8V9tKqMW7AeyJZnqcSUAqekeaLX3/FzwuwXmEJb4EVjdTQfm0z4swgEq79fZnHbZrbe50g1yWIYg0ciyDYa836wLKaEIu7Iqg+Fly0yqRreFUQKcpG4FMHIH57tyIFO1hBXoIk6LkCoP01pmW5yGZxvimDc+4sBwbXT3E/vq6UaY9nSfraDFfS5GZULfbsrBhl7elemYnbueFALfaDEqYevtlGt3cEtIEwW3VXAd6UGxf+yl1Y1UMTxqSYPaPcEHEBIUJEx5z9uSZuS+sVBIQK7IEIkMR0J/AV7M1curDRsyGffvu6Xi6bOmlFQPQUgHtlaEDBihik6ZmuFgshqdRhAK1cv6pduu8op3GhMUQZYkNFTkp9AdOBUw6mbncmDkjDudiphSjR+t5z/iuIH50fjvq+V3vnRpM7O/PWGbdyhkM1wQh6vAx9ZWPqFGqDqw8hoaG9KTvT3HP1nG3WLdZm7ufYU8C/9I9jfjJxpwQGY1eBPOaXzCxqzgsKy/hvMfS+eh1F3mK4uzBp8bQmjIhhblvcxwG9yTYcNhpJkTRV0TRm6YI4TNUwh1nDzMVLNDvUjc2VqfJpTOM84tXULQaw9IkNAvX8jehpoPtkvAECnB7ntsuS60WVrY+8LpaLFFEm2nX2WOMHyAcg==","layer_level":1},{"id":"74c65259-929d-4cc0-8250-1cdd13f14b05","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"训练监控","description":"training-monitoring","prompt":"详细说明Monitor类如何实现训练过程的实时监控与可视化，包括损失值、准确率、训练时间等关键指标的收集与存储机制。解释collectInfo、collectValLoss等方法如何在训练循环中记录每个epoch的数据，printTrainInfo和printValInfo如何格式化输出训练日志。重点描述plot方法如何利用Plot类生成动态图表展示训练曲线，支持多指标对比可视化。介绍日志文件保存功能，包括时间戳记录和异常处理。提供实际示例展示如何配置Monitor实例进行训练监控，并分析如何根据监控数据调整学习率、识别过拟合等调优策略。","parent_id":"bb0d9db0-0092-431a-967a-d1c4a7ee2048","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Monitor.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Plot.java","gmt_create":"2025-10-02T11:56:17.686533+08:00","gmt_modified":"2025-10-02T12:15:42.012303+08:00","raw_data":"WikiEncrypted:KV52Bv4ONjB4UC5EXzYV5HLg7U+CD19ptGtEzczMrtK6JJhN6Dej2PgbiiGhgDzXmYDRat783zGBnJSsuPQSvq1m8dUyVQlPFDxV3/32V0ISsPl35OqWdw2NvUre9F//3Kl+WPrb5MzbxDitkEzlntFPQh9MHFXPjx0FeHAD+EAZofjCGIq2AdYVSIRJ6288mVxzWu8UAp5TedPPnESKmpYuaO/X9OjUgQDFCvelPWxzfyZ4EPPZRRlUMTXa4qDAfDIXMU7Dzt2lEi7dUMpb1u/v43B4ct8hmuguDMOucoJhonSBnHSMAanpov1ION/WA2Yp668/zfEl9vMhSjNbhVgM+SK7AvmX5msYvCEzMZxX88dBDGltUon+QVo+o1siamcNJP+f6qGw7BFKMSj/7JOEXT3sqlHL3Ow3tt/R3Xon3c7G2/pUJeTVyg0YwDCj1vBdJNon3WabPKFC5sE4HUf9cZWLqmGX38Jq33fEX88LqgPVa850wnEyOYfzz0eF0p4z0OC2LQ2s0+faUcnW9s+TMnBMKl5dggwO0ecViEnGrS+nhN5B/Vv8urbHRUPN52K2ISMBplKYxtzpB7bQmH4u+VEEHWmwarzB3TWM4hKEgzCd6cejoGUQZuhWU9OOsjl/mW7NjoxlCkFB3kaTfuBsDGRnLD8M6yDZwSe17R/xH240aTuDmu51wABvDxjModdgK7/4UfN+UI6DjxDraEQp3Jq9UceQne5bYljzueNOTNOdAhJ59tLyvT2l2fV7Zx74NKyojzn00pK3QNHhQwyyAS5almHSJR/dm2GN+2mmA5+feVtoOL0zSGq91L2M0Jls8gW+MW48mmObXpbERwaf0w/TPp1km6fCAJmaDxGiImi58hbow9B/GU1j17ysg/aNiCHE7hK3CItPmWxRk0bor1sDfYHZ2Pb7Ty45bTs+Ye/k+dzJeaXwl+/WYSCNnRkV7ATNSEyt/m+CvEFXafKOSS+SYcBYVDU8YDzuxDhEI8bsl4tMHe+gTbvxctPt0V9SlggMHTzW+XlhVoKpFe0Pn51oamG52fC5rK81R3Md4ZadKRgWqykjKb3OzeyjbXmN72xapav3bb2daAVHxuK74XM1NkXI/y2VdxV7YfDLF5J0uS6bFxfm3GV/R925z+IJnou+WhtkuchrrY0pXoJqg5KYkLOww9WqP04mvSPgxXNFwBpyktEe7sq2t+cwXuBwlZfjQw2R7He4aKAuH7eaIBwGzvtOTFy7+CTmZ7rIfo1tmujyx8J7YN969/qhlZaynt7yhWzQVIqFRDEmzBlTQzCThz3pXLbj0ttgwUc72ZHMx1KOCmwysAjbouLHpdriqZwbrgirHwyQgWWWeg==","layer_level":1},{"id":"070d0efc-e80f-44de-978b-ce90299405a3","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"观察者模式","description":"observer-pattern","prompt":"全面解析TinyAI中观察者模式在训练监控系统中的实现原理。详细说明Monitor类作为被观察者如何维护训练指标（损失、准确率、时间）的观测数据列表，描述Trainer在训练过程中通过collectInfo、collectAccuracy等方法主动通知Monitor更新状态的机制。解释startNewEpoch和endEpoch方法如何实现训练周期的事件触发，以及printTrainInfo如何响应状态变化生成可视化输出。结合代码分析Monitor如何通过日志文件路径配置实现多种观察者策略（控制台输出、文件记录）。提供UML类图展示Trainer与Monitor之间的松耦合关系，以及序列图说明训练循环中的事件通知流程。讨论该模式如何实现训练过程与监控逻辑的分离，支持监控功能的灵活配置和扩展。","parent_id":"d38c0446-62b7-411e-a6f4-e3fc7a48b7a7","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Monitor.java","gmt_create":"2025-10-02T11:56:22.304546+08:00","gmt_modified":"2025-10-02T12:30:29.438964+08:00","raw_data":"WikiEncrypted:NHF5QhyRnk0exXzMU2dBwKa0isNFDH7Spvk8wmSV1+g3sM22ObbpoN7RmfrZmj5I+NRjNMpm/Ex/dCRgOC9Xg9tSPd70BaW7E9t4tOEjeFFsqvo8xiqe/xZq0WWq4J2Bt7B1qukYkVvsBH/zvn90RSTZYsn2lUTgr4oN0LS6QchAP4M7cI5AyLkNl6XQLuqQs2omVCCLXJswAXV7Ec2/RdeAVh7d6K7zaPvoEcVbk3u3F1tCl+9bDjIOZhnicVr0cnzTh2J+Anpv6CjrlcVpWmUSvvls/p/C6rew02LdIVJtY8hnXaG256WufJ9T0GQX/jWJHQv1TrNGPenuH28g9z2ERYJfb+xEu+MHvB5ry/aqy2HVayAA6z8z2WD2udphDhGsshtAKJkftsB3bqk5eAy85a0Z1LQ5xeEcthtP+6MxXryEr/D1QE84S9CCqMktHNoXhR9rFMRani5tv83QgM7sGjC+T6l0OgLNQkuY6rGR/wQztsvBcwDiQuxWSs5HbcdKYMcq47sQ1xuO0NWxqzm+K1NilF6Z2ukLBfO3nabt17e9HJ7xI4V88Pa6s+ykNzI5wXsZHrQt7S1cagmFEe80fna/1KFLdV7+la3CfWuH/B9g6DertPEZlyRDDUtEfDFz2ttxl+JfJYjjilyKE+JNB2Qa6feOZ+8E74Ns9dxvfJmB34A1BZqtP5QWRWMBT+YRGW81hqq+B4qNIBmSC57U++9O/otGU8TuwT9PIDK1T11sWt6pFPo3AzWZE0SNchAhNremZJMMIHwCxs5D5d2qDU6RkUjp9fmO4kqzPjqPiFPi4TzIbEkd63hFWGJVqp1txjlNomGwNycHK5P1q9BMlF68E0B8hWWNYxOvMIPQ6qA3DavtDaIzoNgUdmRPfRlqfzHA+ahzLehr4Ww1wyWPF3i/bz22sEphWWch273KMqxT904TH9mK9MnRcQK2m9wW4pFWghnK9ZplHnrp385xtIWRR0PVv78JgP5EzQBW3yIRJ1NSDwKczc+SyJOvhtqWD2/pWyS9h10VPqQf1t6C5kfnxaNE2CscCmue9L6thtgziKIWq8aFuLSTwsmchFgrrHhdlby1bTUnDIT66WdD9kknyJVbmk5IRamQ9zvtM+shIjNP7wlxTJRHiZ7Ih957a1EW0qSWVJYb/kFgNOitqmdwkISXvF5JPMEriLT3YeR2utm1cXY73k4RERpWeNwDI8M9kqHOjPZn+rwIKk9McJhPxwz+Ob9G6YeTB1+jpeuJ9nK9qN31iRbKU+VUtoVdB8LPENXc7/ngBB9W3YqVgPcWuhmUWfKhrov3CJDifT2l6VQmXRqQf/q1U5KdrAZxRCv4vUEYmNF8p4aeZXVUhXDwyOVdmwHSZoUuwE9Ra1haNJW32ZbkmA7BzLhXXA8R0iF/c1xY6cfRqWok6W1O8cchFDoPPeGg/xmHONIZmRn+ztlp/WXId2i01lJV/qusj9hxLyEXDdsnyH81uxuFXZXhibv72ny0S3Aju7vyz7xSX53HcFOvDJ+MP3yswJly9hdrRBM/VmYX5EsZVA==","layer_level":2},{"id":"f68c15db-4b9d-462a-b03b-ac1ef7830f1a","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"Block - 神经网络构建单元","description":"block-component","prompt":"创建权威的文档，阐述Block类作为TinyAI神经网络组合式设计模式的实现。解释其如何作为Layer和子Block的容器，通过addLayer()方法实现网络结构的灵活构建。详细描述其前向传播（forward）的实现机制：如何按顺序调用子组件的前向方法，并处理输入输出的NdArray转换。结合代码示例展示如何使用SequentialBlock组合多个Layer（如AffineLayer、ReLuLayer）构建MLP或CNN。说明Block的参数管理机制，以及它如何与Model类协同工作。提供设计模式指导，如何时使用Block进行模块化封装，以及如何实现自定义的Block子类以创建复杂网络结构（如ResNet的残差块）。","parent_id":"ee92a8e4-3e38-42fa-b11c-7b6ec6c143e6","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Layer.java","gmt_create":"2025-10-02T11:56:27.900414+08:00","gmt_modified":"2025-10-02T12:30:43.488442+08:00","raw_data":"WikiEncrypted:boPmx5CcA0j/DyoZ7HyhKlPhON+TbIhBaz4fFzUURSKCbmDaqE8vdEZzgpkV6eDCu35sHcrLDCRBieFFrZyPcwl0RgVEkNDZGspRxgRJq74ZZ50InecfaV820MiD1fj8XPdC8+OnHPO+E8fdeANUT62Tee009I/btUW9SbN24dyq7nNWEu/IXR8un5UiKfekIv6Kp4ViKZPpHKUI6JWomyEyP1OupHiGIQOZik/BtUqSE9ivChKRJzlqGrfQpdylKDhFMu2MCsB9M+mFbgZmDfNefaWs/n7y2dMefqmmwT99eGONZmDOtQQVRPJZw5Da2nd69R0h6zoeBDnVV0NYhcdiVEtQH3tcXw+bGXUHMmrrgOicCfjVEeoHC3+jG+/XGG0U9crxVcqUpgrJBfAhljLyjy7NE+ERqFP0mOQcjG76FuP+yDxzGXHrvZCDjo+stOKRRrNAL6uyGzKs2gfdZD7T+1ODCsKN8XRBDYqsRORPitb9Lw62GRE0oGC5F6vF6BXTmWQFA/YDb9ECnXBtCNbCKpN6qMtUmZC5UtXXDI3+SHg38mnlFcQEVW0iOaNtj3JuRFaudf9vR6bpflN7FCFiwnViKmwoOCDDlaThR0jKQbCWdUl8+7lo5WMHQhWSNh56gM7xGQd6q5sxng5NzKB39Rbd8UgO8tNv2cwu65o87A1N5YTvXMBsM0yv7dqiHTJQFzb4FinudMUj12x/tpe3yAcHGfKqhudje9VMfibN1QdeFJwjTiqvapwUPSPC3apL/4tuztjPmu7XGENqRlUXvTeBnthNM62OuwsQdpfVAPo6Z05eOcmVhrAczdFRm5erU+RjhtGbYu6dTg25g2jIo2i+4K17kgWl+KJubxXtaxUBTz/mEBZM6vUDWe3TQiDuQFXOYwKPXTJtNkXb8RMVy5+sjYt06KgxLLElRDg1gCNYaDlpvb18EYTlJiD9CgKirekEM27Tlh7XJmpvMbQkw6u82NDLuAQY5O0RrfHQcNpnG4qQ2pm3GYBAPFFVvGb4tL3iTQNUkzm/aXu/pixHldUkwJKy91hYidSrqGE7pT26aVJEaPgQ/LIyVS2pYBGuFWN4oYhAiHPxICjjOQKE5lQ8zXyASGb41uRjR9IZ872hDn9ypAnJJj/g8YyyRbwhwIztT692oIIs1AAVNUraPhQB4fJZQGr3bYin5QAvjiBlD/wsDKn89nAKpy8lTZCVSbCbura4yDzmX1sGFnVxfWstDHtbSGOA2wRtQVABiTr8RymC92dHOrv/T7CwedjEgwPWTWI/3I0Q3X8EYXOte1XZf2ms2d08XvmlqK8xJK+/icnmb2b6Iw316MkHe9+xwWnm18KKUKcZhS0zKPxAXBM56mKlde8107xpItoGDbG1S8aOxYHeDTwMMEGRxWA+zOs8uAAp+SxhjT82zfxwpI/w9JYtPzWyqj18Btwb+wb110ZDl4Z4p1jpbR18","layer_level":2},{"id":"f965422e-8e21-4d6d-b1b8-e4cfa3f621c6","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"内存与计算图管理","description":"memory-management","prompt":"全面介绍TinyAI中计算图的生命周期和内存管理策略。解释unChainBackward()方法如何递归地切断Variable的creator引用，从而释放计算图占用的内存，这对于RNN等需要截断反向传播的场景至关重要。分析Trainer类在训练循环中如何通过lossVariable.unChainBackward()显式释放损失变量的计算图，防止内存泄漏。讨论clearGrad()方法在每次迭代前清理梯度的重要性。结合Trainer.singleThreadTrain()方法的源码，说明一个完整的训练迭代中，从数据加载、前向传播、损失计算、反向传播到梯度更新和内存释放的全过程。强调这些管理操作对于长时间训练大型模型的性能和稳定性的影响。","parent_id":"141136aa-0d32-4337-adad-c5e39c67fba2","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:56:41.164015+08:00","gmt_modified":"2025-10-02T12:31:01.181318+08:00","raw_data":"WikiEncrypted:cK4SBLsR9PqiZ6AM5RV/RFrBjWAaIO1JrTNW+XvV6/8h89HA7R0OF55RFg2iATFm2YYlYbfW6BklBVaMg0naJEgcuLj8zS7Jjm5lVIlqM6q71MZxUqNqgcwEGrMZRUnjN9hiNyGtsn3U482EfUNoRwza8lKq0YQJVG2+dkLcCYXLSQdg3nZlRyFd1E4l1qRIeiRFv3mBTAk09BEU0UD7JDXjTGW9GwWHmkDJjlrKUAOCGr6O09xzMXbnL53Hc3QNz/zxJ1jcvqlkhsoJqAF4ERnJ2PH/guSwSWoO3TTWstuUJiATFs9YA8Nw8VKrln+KHSKiOQVI1eR2KYBi59iWmzD2w/xd2xcxjyQINkBDkRHpzxpgB54YI62Bx0KqM7G1Vmh5e8xQ5wbqCOU/YiDUwOajd2Qycl0gfkpnQygJ3l1hqezMciepjQUH7Uhynr0GjIN3sdHf/q1wwo0bPFYrCa4tYwk5id4lKZarcUMHimA/L4GLjgce7XmRterbDpF8eT2nHVWRaEPG3osCBNPj1jVZhwB/zRbW8dNAquVjSqO6tppoy6ghSJdtDlYB8fxdcIx5F5NBbVNoXrl/fxYFfnRSHb0gvVKLtcncc2VF2BLzdgJ7IRZhY4F90YIIFR47gojGtXAebBjFA+TxAjVS5DO6V9T4TsVppneFiwdczmPmi9VUnoovFrK0sF4xs1OnwwoJ+Kmrc0vY9xHUlfjtywmU92asZUBsF3ZG9lQ1ToEW4qGfu6zaxK/zMSv1E7yjcbUbTiXjtovm0yzqhwJoLr6OjB77Eu4cRgJum1Xntsjf3AFV80QFFOO31E2B3Xvw5PcxPYIEjCung/tzRhR5MTk861oWk45T7RRXKvToep4qZjmjS0llMAxNe1wGk42ZVhRG0DPteEu5HrpFh4a8no63JJyAYx2hgmelBFPJ7CLvklOc+VanqPGDz8jAQ2KRtxzoeJTY43G89eNLK9Hs2C1cdPitNjJHHXm7tNCueRqP+Ir4jtwI//n7rJN84Up8c0+3oalYOZBnOiWhT3MjtNiiRsy+B4DjT+clN0CaN+/UyDYZFZPtYEBjpwsEn6X7xrA9qNe4NVHf6Lz1+2OCtqtudEwXFagXeqP+yqv0kMLUy9e+DqWzzVEhlmyU2KXG2PN2NStUdCpYuuOKpAPuuizQ0kWOQ3aTRLq0bmgAsEuVuiPPi7T4yuREwWgkalLnpMYExmkCCZdW1W8t1OIo/pqH5CBPAlfvZu0wsSwwM6u1BAidGZRx8ewpyh/wozWBD2wxIKnHeU7qqnIutLouenlAMIPlfEulRimeCj7ri5qU9yx9d0bNIilgsjYE4EMXr/nzPOI8CM0CxRgdtwcc6IhpFd+62tY/veL9z61x62e3eDqKPQeei0VvNG+QRW3HwYAl5GbZ1WEa//emKOwXtvJ0P7WqT88ZR2QBncMqKAo/TTDWgzDsIlkmMQUbYPIYi2EhvR7o5sODdR3bx0ckcg==","layer_level":2},{"id":"5d73ba62-31a9-475f-9829-df184d017887","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"插件配置","description":"plugin-configuration","prompt":"详细解释pom.xml中pluginManagement部分的配置，说明如何为所有子模块提供一致的编译器配置和插件版本。重点分析maven-compiler-plugin如何统一设置Java 17作为源和目标版本，确保跨模块的编译一致性。说明exec-maven-plugin的配置如何支持模块的直接执行。指导开发者如何在子模块中继承和使用这些插件配置，以及如何添加新的插件到全局管理中。讨论这种集中式插件管理如何提高构建效率和环境一致性。","parent_id":"6c45bdfe-2a79-44a6-918b-39351406838b","order":2,"progress_status":"completed","dependent_files":"pom.xml","gmt_create":"2025-10-02T11:56:42.402873+08:00","gmt_modified":"2025-10-02T12:31:37.062178+08:00","raw_data":"WikiEncrypted:ukPV2tcWPRGn89Upsee0BNXC/8dh/3Xh6ltpTmW2UKP3PggyuLU3AtNseF9ik1NIhYIWkj0/2K6pQ86QkXwlWM9pY1YaOGc43yrsjULnsIo4QhBX9ltjDEvPQOJjePYJDss+gJNVHaYypGXtEg6GiNkpn3COV/MLB37JRfcqg22cP+NzHI0caFQE90J/KSL8+T8ywkhmbq8TBD70Uct8hbVGdDRqOreo4aNSgDGhYIrOFiHkr3riPbZ1tlLXObEMRYJ5MnJwlcQ5XTc7rIN48FT1Bo1VQItAjSliTypXajmOxSeObwTkGpL+NKkZCqUOgSHfktGPVotRM7peGk1QHL83K0Erk7wCkcuFW0j+fb4AFlrKYegd4GUndbynbvuUTmShkb/Fh4HxkLFMZrA0+eUePKsrYil2EuiHYIImlp4ps3q4Cc1k/KqIF6l604swYqPwrBbjZsfdHkcc4I3HOe/1f3iy+pjwQdTsziRioSkhJk0SA4Y5ejWXQ6nhAelhK2dYGYkqtapqatMpLmT3EeF7ETfK0R8tI6MjFEdzHIyaMTmnlFLZQeX6XAg15ZuMdUIXq4Unid9cK770Eg3idxWofxmUks3CCP+F89/yBhMK0Yfhu9WD5HaAroUzB/+P8+Ae0uzSWqA35aQHsIwiytynSFfjwbNwzfc/iQ0iKJFJEDNXeMPBTnFyQP7ze4Avw0+NlP6OTiXp+084DZb9io3u4EsQqJDnZZka11o9hWDZ5MKaFiZPR2idP96vfg9qvzYyS8BX9MbukeZ7jSV4P865IJJdE0SxTDLXM00OGAzHi1oK5B4N/RBnXO3iCuWPLd1ZeucQj6DDMfqD6sNCzGGCVnMH5oDwPxcg6A7I0J9NdDwO4I9M2KVYnXUMnQUIgMr2J7NMUytq62lhOcvuNqPTIQf34Yy9RxwBalJGFxW+h0prv/Sqq5GsX7X4secQAmmjKgd7ddzOhwPBrAYFGsrsvBrWSZpjxT6Xsk/NrAwHqrMYh6sxbW8zAxx0S8ebB7fdecEgn9RTez9VLws6v3Qng+1HZs1NT5dt65EOsFCmJzuM1ZDaqKnJVDNzMxO7","layer_level":2},{"id":"9aad2933-db1e-402b-a7d4-00b40d03c80f","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"训练循环控制","description":"trainer-training-loop","prompt":"全面文档化train主方法的训练循环控制机制，解释其如何根据并行训练配置自动路由到singleThreadTrain或parallelTrain。详细描述singleThreadTrain的执行流程：数据打乱、模型状态重置、监控器启动、批次迭代处理、前向传播、损失计算、反向传播、参数更新和监控信息收集的完整闭环。深入分析parallelTrain的并行处理策略，包括批次分组、多线程任务提交、梯度聚合和参数同步更新的全过程。对比两种训练模式的性能特征和适用场景，提供性能基准测试建议。包含完整的训练循环代码示例，展示shuffleData参数的实际影响和最佳实践。","parent_id":"1b29ef55-37af-45fc-ac5f-7ba18075eab3","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:00.734409+08:00","gmt_modified":"2025-10-02T12:32:14.476381+08:00","raw_data":"WikiEncrypted:Wfo6CnSQSF8PHOia3Er6BmnKaBMinAbAt4Oo401BqkjZbO2ZQaD/Wav9UFl0HgeojVZOixjY4PGmqiORrIhQ3QuxtyLCGTbSIbgJ/Uas79QW68C4msRNnGbkz61eFYRs6wov5qHQljU2m/ehgK2kyNKpOcf8GA3snNl3TNjxKAtRqP2sbnqiZ8TSbs8FoXqPa6eUqfgMfs63ANsQyqsHghvO2QzAoorgEMkT72KzXetVdztbdQSeBCO+kMvcBRZ8K2Tl/DHQgrZb4ty0QnDL+6bXfBhdyMANQd0vHZkGlL4HbjGT5jfDOhpdl3pO8VaQ4NUlCYtfh0uJl3pZyrp+N76ymup8KP12z+cYov2HIOwvuTfL3XUyi6ZOJYZJ6u4qqadkLL8aiV4knoyXQtWMIRvFOzagto9pidaegi/kxipt1FMACUfwv3v659SSDHFLyuI0bDnauwQnX/FLdqCg//kgdvgMLj0mME1nWSxqM+5sXmhtRa8WNz2GxvoKi4gSORP3ukM8ETeIIDTORQZ6E8zthYHR095VvRV+0+X5NrebCQgrQw7zAr/p2omACvnrDxAyc+sDPmM03Q0tRGQrp56YnYFyxbfzxmBTSic5CfvvmYH1lYgr9fMPZ0sr3yCr1plqDvoKrVqZxv7pUCOCX0L0PL+uE41SeZv7jGJAYLeEGI2tfziHFTeB7LErfyUaqpClQRBcLvNbO426TRo0Bo63y8ZtJZgiKIw9PLWUwcGJ4NB9/ufxySR2v3vw1cMpAmI8xSVifYVkTxbnItlWg5rTn9S6O6Z9LhKszyuRInVl4VRKi+ZFSvsgFphxyIqwxmPG3YiLXadqUuWDSojb6ttLIbuzcO2A1qZjEnA2j9bsv1+Wz5Kj6PDnjj0QoEZcSnufmha4+/f46LdJd2yxMJ/5Nwh40q47IO9/oXG1FqV8lD12oMEt/PpaIhgRxjbQEaIiqoD+RZbgbmGL/UwzW/1gqcEu2lDOgJoH/GprG7T3xbaoho++YZdDx9bRfdsyHXEGXR2H7hsKkUnhjRzL55DQsaU8plxxcajSO1nNaEGXSnwXU/xS4vhCLogULmy43kynqh78l3jbf6QcQ6X1sMRBRcIXLqqRdqfKPcLphA9qxCi43fAHssKCPBZ3B0htftaM4s0M/5k+wJ14/Vk8qZg/qNfTbtjkgzfJG5Odt42daM5Ol9wyfTEZNvCO3TB0fUNxTTB05/6zh4i2h/+eLDoCfqEcE/LryOHY4yiLScsDeKRKKLjGNKd/BCA/3vJSqp/sYueF5uHN860crBveKXDi6Mp4/M9QvRw5kL4I7F3tQ0HXlitCRtIff13ADWEl","layer_level":2},{"id":"2140e0e3-a193-4581-a675-3f62a43be14a","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"自动微分系统","description":"variable-autodiff","prompt":"全面解析Variable类实现的自动微分机制。重点阐述backward方法如何通过递归遍历计算图完成反向传播，包括梯度初始化、creator函数调用和梯度累加的完整流程。对比分析递归实现与迭代实现（backwardIterative）的优缺点及适用场景。解释unChainBackward方法在RNN等序列模型中切断计算图以防止梯度爆炸的作用机制。说明requireGrad标志如何优化计算图构建和梯度计算效率。提供构建复杂计算图并执行反向传播的完整示例。","parent_id":"ba2c288a-2b7f-4e43-9ae7-b41234b9ba02","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:57:01.945394+08:00","gmt_modified":"2025-10-02T12:32:11.279135+08:00","raw_data":"WikiEncrypted:5vQ5s0nS48bl7VZ0wNBcV/1jrzuqFlCw2IaBhAUyaMqK6+NwQVa1ErHhETDC+Syd7P1tNGIE2ATcQkEOXgZDKPtQ9EFP5OEB+G6pUY199Nvs+ou2t5g3iyfM/3dHtSJfcPUnA1qthpzBIApMYR082xhzXnp9HqGExvf3pU1kS3dTagJd7/Q0+Un6JNAQ5ZZGy6CBEYtA4ME5eFx7Lk9TaoyLcG99RjpoRLzAmxWDJsO97pftVY25I+05tCyGN7C5B0IWAM8WgDDKGu2HIvN8PIw9DkfAqHxRM5aqLnBYvaFU2w0tElLQ00Qt5+WUwiWYwXnIpOq/6bcHIg+lQxyBh016OKNqkHOaeGLzPvogOpEUtKI/IA3N2bM+S4jVW3A9mLkHINz54pmlxDic7xU6nn2EoveYcuGKjLl86NZcYvNNPlEI1GfbRp9wjQGMh4uuYnUwsMxpBebTw+IcynaDzXpn5tlBrgkh0gxWRLmZvgJHEYn2BPwiLYsnuD73TI+bMgZYwmEqIaKTcJT9vNynfAOMykB6G2xvVDyT79QXGWxuiXkwnEYdfnQeUw3tz0tUEVQan+wo+irG517kiKPw8aLScOKWzZKJXdfyk4zmYaNv58hKWyyyAAGl4sutp+EqrHCTr7dgFr7feehjvGRZGN1YVa7zSZK1yniIGwIfvvcLlkhc7nIeiixxAlwO4tovf25qiF3oaku96LD99lZ/xNkqlUK2y+7J/xITDn+bEQxpBwgCdoSOUY73px80Cx2HivK4qxjfPHjikKmZ8UixVpwYSaaotJNI/x/BAAyWVXvg5JxiWeCgkQ9gF4sMqdDuix+z4eMWrOWy4TID4JQRnRaN/9u12TUBqWlHVZWInLt9Zw6QJwRv8L2l+PjspPCTy7ttoDFDp2Xgl1Jn+c3bV6sqIAUl85BeLan10ubFuFMpsm/RxTaQbE1axNvmbzs8PZWFgNbE6oO4Teot/Z/Le33/9m0XXHSH9qh4KQxP3gkb976/o2ZBhC1+jin+qXMM5xHnSUsxPMMn6ZkRohZpRizKiNRh1wCpRSTR6l/QbhRwoJCKO782PRXTQTgwza2/8CfwjFK0QJ+zIeOSw7RrnEIDvQr6vhb+JIRjlpqIggth7fIih+cit3J7OAw/a8zAvh2x4EGSEUuHdlSPG916vw==","layer_level":2},{"id":"e98918ce-2181-4bf2-9bca-c1fc79489513","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"序列建模示例","description":"sequence-modeling","prompt":"全面分析CompleteRnnExample.java中三种递归神经网络（SimpleRNN、LSTM、GRU）的实现与比较。详细描述每种RNN结构的工作原理，特别是LSTM的遗忘门、输入门、输出门机制和GRU的更新门、重置门设计如何缓解梯度消失问题。通过正弦波序列拟合任务展示不同RNN在捕捉长期依赖关系上的性能差异。解释BPTT（随时间反向传播）算法的实现细节，包括状态重置、计算图截断和梯度更新策略。提供训练过程中的调参建议和常见问题排查方法，如梯度爆炸的处理。","parent_id":"11b5940a-86cf-4a78-9b03-8d342ebb91c8","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rnn/CompleteRnnExample.java","gmt_create":"2025-10-02T11:57:03.702578+08:00","gmt_modified":"2025-10-02T12:33:13.657884+08:00","raw_data":"WikiEncrypted:+4JF+GGgQtKhjc9sef/yP6y80FTyfN+Hf5kfXEddK4oXdIF5VtT+hhLcMYJxaI5CUuWR4Pzm/nFjfDC4PnwkweSp2ERc1tkS98xJ1Mcnj+lHw+uWL7Q/O5+hvg9xKZaG2HZLwJcKIFbsp5lxYEqR98XTnlmUR0L4NrXNbmkpvuWhDIQx8Yv1laeggZYQwT9d7wf+X2Lv5WtYANVNQRi2CnvsiIwoTwSDa5Lhc8JtkZlV278Q+H7pUJjerSeXf9N8NwA1n9x+n1d8oQZJJfaaXiESBTCnPiIyesPnTJ+pFjt5lpKO1e7C4qIv5svzvXAgwo/G72H0K6T/tOb2QRJ4JjTEKey0G4mhFM/ZZsI6/AfgE0w9UhXvxwxvW9072waJQR2XYpaZ0YmjUAeWXtoMUm/p7B5iW7rl8f7U5nyYIpgRMLOGIenG/79WpTJQjnl4oSkiU/2uOoJisVZf9qaNFRKm2ToHHR4jZIucNHP1qscFsqo1folKI+tw1XIljJOiYJ8CvzjwVlfv3PxjjboiFZ7mmAhYxyBbKjaVebBbfuzuIjjDPBx6iNfvTeG80eXSTRms8sCSh+8OQELXwiLISVxHA8xCpsQ4zEJjO2RLSBLwgeI5eLnnYWp8hYBxdga6IP4rE+h8Ara6XOmDVMRjYhZQ7ZYYWRiR4qG4yvtERIzBcVo+ct2KEVzWizu4KlYOn04EoSujQNDol63p3hE4u+QWsXlZBsE7ya0MClvJZ225yE16Bq9zhTRJQhyNvBDItSAOa677n06lpOFSNQT27X9qAE1LriEBDCRpr9z8oKuKo1mRQfG1mlNjUznnbrNhJ0rP8+rk46zQC3x6Xai8oVtcGmV0R0lwNkmAEAT0mqm3DpuWHzBJym6pLXnEqcpests1V+dd7XhVmQxBnrCqkyXYLRgchmtEtxpLfpDFz3UhtIHLOjEYRJ0xAmSwuCUSLH3ayBbR55e9ocq1EgqjWR96ExMK9sorGWAvSM3wdBWlI5PZoEyooLo6gUjogGlhUVqFnNJdrGsaG4hl2bLLvGjmUO9/KTkRhkWZWnFdHq5JqWMiZwa00ZX0GxnKF+jYhehhiOYWkF/ZtBnX5qJ0odzVev1VCdE70A09TT097Cr5LR5DN2GqcEMj+Wh513VySJSxv9zOFMuAo156GGkriyJHwHheM359BuLnor8XrGc=","layer_level":2},{"id":"a9ce56f9-1cf2-407b-9fec-453642319fc8","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"多臂老虎机算法示例","description":"multi-armed-bandit-example","prompt":"系统介绍MultiArmedBanditExample.java中多种探索策略的实现，包括ε-贪婪、UCB（置信上界）与汤普森采样三种经典方法。对比不同策略在平衡探索与利用方面的性能差异，分析各BanditAgent子类的决策逻辑与数学原理。结合MultiArmedBanditEnvironment说明奖励分布设定与动态变化场景下的适应性表现，提供算法选择建议与实际应用场景指导。","parent_id":"b57520d1-b55e-42eb-a5de-b0afbcd5b0a3","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/MultiArmedBanditExample.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/BanditAgent.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/EpsilonGreedyBanditAgent.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/UCBBanditAgent.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/ThompsonSamplingBanditAgent.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/environment/MultiArmedBanditEnvironment.java","gmt_create":"2025-10-02T11:57:28.888916+08:00","gmt_modified":"2025-10-02T12:33:43.469253+08:00","raw_data":"WikiEncrypted:Zt230nV3k3ww0eU+N8tTkrZeIKdBj8Is/F4Ql1BtYa70wLZz7kG5y4GxivibgQ1X7dmQFsVDUB6ymsZzKjZKBwYHh1wxHI88b05G14MfIi3LqF/Tpn995pqPhX7Ku8kraqAr7U53H4HDhxc2AJ+oAUl4kvbm52PyVMPMG5w42TzxgnDICDpQmttZWTmG51QQu7kWDb3SZRPvkEh7w7hResoQ/PK+3cg0qys/AFBKE9icA2wR9sqo9n8V17M7Ai95wwoTyJ1j23znPInZtVsNyX/5Tkvk9jSpXiKm7olmzWvhU9yaoNrnBCEpSRKrylv/qOccclIkdqBO8WRJrEGLG3qvq4JInqOIWcxrSDQbxcUQjdJks+4yh224niz1ldhC6hDISLYPIK+Yqdqvu5JU/4xzyOgLDWbTmrF20yiHf/GmHKrCF+JXuEFMOYU9qv22q+MMD8GCEOIzX27NxX8CbGHCZm7ULELR0gmRHcjR7ITEK1qw4CV/EIfg3nqXoeFYaN/2o7vSa4pFxL91r0skMdYqFG0SI9NyfAmGcvVsqJ6C8ZEgECCyhIfIAhUvX4ewLgX/VElkZ+ssbwg98123fIFos7Qsic4LXYvx9178gwSHQDSCd3nUjKvKv1tCQ4XH50wju/OVQU7aJHmfm9QBUQyiiSKTVqj0JOiwuaO6M9E+LIm4Z3lUiGiKEf28mRhZ7jgFQaxnVDQAQ2bvnMb/QOkvrWqdxx5DxbrBt6uXp3apKlknUTJ1gLfMtmzgfRlgFPRsnNsxJZQLTBgM5zug4qsM2Zdp+d0kQWvfSv4p2uKNiLY6Xz6Y/hwfO+aLFGP3vMnmeFTpfTXoUOMTaj3WC1J6UJXPuP1XsN3tJ/1gYTz3UHT1N8ZZfNk2A+5nasxbGgSOOck6EWsDPIqWvkhN7S/9+pAmgwWBaximwTOP7RQ0VJq2JIQ/hGeRzWAgZg5vhmR9cwm3t2p7y7RTT6VFChBYSW4Nu/ci3OUQYOUC/dh3+/+vjFnbGCnP2qHdtvFLykOYk4OC6X6ch+tFt3Mc6CKE7v5U85IVNs81hTJV8KO+Ma+u5CVgIeN4ADAr5DH6np3JneOy3OafnpWebk/Daku3q0VS+z6+nvWJsIXO/z+h9n2uufFXpEQ0Q0X8W81CkoIShkesROOXOvFcoow73pcTT1ObeiYyQQzRlgJGwxLSwNthtPvsaudZ50l35r/cEtEGS8y3B/zb/xqrMBwAgNcrvuBdY0EDzG1obYxbAWfBP7wQ+hgqrrCFUXA/urexgLpDqUEBOv64KVEzTkwAmfZ9uJG3fBo952WIg9tcjB7IK0voCsaN2s+J9E3ZYdPyH9RIwlf68+lpO4o1gyEfhAfkN68Rg/ey+eDMelUb4+dQ1ZgQX/CNcRPFyTrUiZAYgdsRTqaj4LBetOHI+NNxYtiA+PC1FJuBk4A+Km39H/b4oY70Pf2K3q3LI5NyFLX9ybScVieG/ftxRd49SxclOajfd6rDAIp4m+NyNZjfBT0mLAaxHjNy+BfSfLshxxvRqzoNJxc9p+SDxxQFmPmTmsNEc06GXHKl81DIlxC0kkuvTSjQPGGBTEncRa4PRwtw8H8t/kyEEpPZW/5gxuHm42I/Zs5BiBI2IBdLS40HjaM=","layer_level":2},{"id":"ccec6763-ca32-4ad0-856d-ad8a898d065d","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"并行线程数管理","description":"parallel-thread-count","prompt":"系统化描述getParallelThreadCount()方法的功能语义与使用场景，阐明其返回值代表当前配置的有效并行度，可用于外部监控或自适应调度。说明该值在configureParallelTraining调用后的更新机制及其与实际线程池容量的一致性保证。提供该方法与其他并行相关API的协同使用范例，如结合isParallelTrainingEnabled进行运行时环境判断。","parent_id":"9456a5ae-1900-4d0e-b794-4322dedeb250","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:38.160942+08:00","gmt_modified":"2025-10-02T12:47:42.933001+08:00","raw_data":"WikiEncrypted:lhNRMh5kNTxTBCRgMKyOH0VSUrb6swO7nD2j24PaqTTSmXvhctylFDNSpqOYAd3YlL6W1KMTz+NW8u8+svHhdHlnHHID5GnL9secAvLb0zwP+eiJOJ5oHjh/wgo4IX1TcAexMcCsen/tLYTXnlqpS+8k4xv4Iyv8CW6p91DWunDOf8Rgrae6wWNcGfsJkCH1f7muERLaNso9Ls6lI9NuajiDjazCiColiCRHMCGOxS6eW98ScijM0N9kYaEhpDBfTPfr8WB2QzSIhf0yvFwwZyTjwrXDJ7nL86MVg15ND27QnKu6dN0W8JiavdQD/04q4v7YJitYl8mHFb23YqUA0zLUbnrELve1lBTdjEUFY+GKwY5FpHWWMEPz2WV6yHNOtEhCsRjokOV361CLTbVMeuPKGAcYRdI4VZelZ+ewMnHigXHHRhL9QfRP0tnMPOKwWo/M6wQRXuTqa2tJUiq2MDTJwGJ8Uhdh/kwf6Uq3UzQAkq92QgbRX5CT6jVVLinbuG/smNMSQtACNTfSjpooLI9RRYhbn3RnkpIDc1uFItfLkxxAsLgTDJaAQd1PFo7nDdDO2sW3yG42DOjtyRKjpB2QotCjsE5rNHqXCNmXdlDKO2Szop2wixOfIK5pO52Vg+yQQJT7QaJVtUwLPFGTakw2ZpUhWAdD7XfjsH/bmvCXVKX2GZXs3HbYlxcAuCET6Gc0RlgbXUqfl4czhFXkimivp8hps7dSH2fAin6kE3kSx6UEcFGddt2zU62JpaVW2BPF9TXzTzCZo/EwEnqjZr4PX9uhgoq80HHlI7BV8QhlN+wwKtvrSgGMPzyT7GXkSC9ZmUrWWmTzxkFprh2Eg4vZ8UzG/6ZTM5FnskSW/TAvJqrYDKgbbtaSzn8CiHTswLby87we6XU/6O24awU0BVVWvAJXBef40WwrxlqcXY8=","layer_level":3},{"id":"20169cee-f981-4f39-b468-08cfd9170c04","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"计算图管理与剪枝","description":"autodiff-computational-graph","prompt":"全面解析基于Variable和Function对象构建的动态计算图机制。说明creator引用如何形成从输出到输入的反向链接，构成完整的计算依赖关系。重点讲解unChainBackward()方法的作用——通过切断creator引用实现计算图剪枝，防止在RNN等序列模型中因长期依赖导致的梯度爆炸和内存泄漏。描述该机制在训练循环中的典型应用场景，如按时间步截断反向传播（Truncated BPTT）。提供代码示例展示在序列模型训练中如何适时调用unChainBackward()来管理计算图生命周期。","parent_id":"2140e0e3-a193-4581-a675-3f62a43be14a","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:57:44.366684+08:00","gmt_modified":"2025-10-02T12:48:08.273582+08:00","raw_data":"WikiEncrypted:H2Wkcam9TCJMx6ZRVoHRDuCkhbPjksHvw86DZbl4s3BpKmS+92t4Cj+WFtrd4BrRwxrUmO3kTAgoFRU7DTWdlt0TGyCW8ZJ0NfSLX2GXhVvcRDSDKsIGCiBS9A2Zz7IT55vrKvM+wUs24pbCsFTKCYep/5I29BMk5iTTtphlRwd0vRe/CRkvWyOBsCeZGq6N32M5addhJQuQlU3qmgMPhS1zXOOePIZxNx3Mn/o90WiIcsB6089Vby9Pf9c+2eTbWQoCl/VSMAjgJPw2VDqaATsBvttGC70xE8O7qODFVD4Cqo1/mtigefjnrFCpqWQQ49LLjxuPKgbispEQP01mZwE7JApLVW6oJM9zLCxNDpYfjLCWCU3jEiTQlzj/IaOKJmBDFrv2RvHuSmkPWdXSb0Fanq9YAP9D5orgu9e6Gu67YmgqwPOkLkl9zMULK6nIM7tU/Df2JinqS/PFQxQmhIa970FzBccadBuSP2eg1Rtg8qeLhMvnSxCvuQZrOgFYchAkR5vMVgfiTS9jdcfMTA0aP3dOfBxK/yZAo7xwKxE29H+Nl+TDp8T5JfmtlXiWpiO1p2j4BHzqhpgVIWB4NWacQr/yL5HsSUWPfx/tn87pPmcREeR78MqSBdXlChLCMZOjL+Bk2tF+D7ZjYvNbAUnjBDgqBdF2Jntup66a4WnXwqb+arJZ7DX1kj13nYe0Fbb/wHT0q4tSiq8IT2avsOEhaECY2AAZqv7NTjLpdN60oaYA7Bl2DNniaYOXZW4hJ9A8zZ4h5w0WuRxhfaIde7HGq1yLZunNCVO23/jYFc8zAMvTTMaRckKNNPJDFfpNsyL3sTv6xQuGx9Sg3fH7SP60GkwjdvIyo7Z6oaTzw5ZVifaJVITi2Avvlg4bL2V6BZ5wXD/mN1CZdebLLo4+nsjr1WJPtVJfWpUlQZPzCC6SzVjYTut8PijHOLRSlsjOMVIXO6gaBTIl6Gr0/biCkpwYrqeSPYVVVx9yoe6uznIoA26wrZv2RAGhuuWQ/bAE5SYKMJKvMg3NTEvmxCguuO7tWg1GuJV0mMW/Hw4ga3nbxwUmYrrcI1iwuB2t8mK9sGznNz+AAFFJgGyRncRdJqOnD21IbWV7xJWFTnkVRRubKxZj1CMTIJc+VKIMdBwDFGZZqhnXmCA765qM5EBmsq5IhDHSWY+OcPCkjTgfWW0=","layer_level":3},{"id":"066f2124-74b2-48ae-939c-5914ea9946cd","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"GRU示例","description":"gru-example","prompt":"详细解析GRU网络在序列建模中的实现原理与性能特点。重点分析GruBlock中更新门和重置门的协同工作机制，解释其作为LSTM简化版本如何在减少参数量的同时保持良好的长期依赖捕捉能力。通过CompleteRnnExample中testGRU()方法的训练流程，对比GRU与LSTM在正弦波拟合任务中的性能差异。阐述BPTT算法在GRU中的实现细节，包括隐藏状态的动态更新和梯度传播路径。提供GRU模型的优化建议和常见问题解决方案，如门控机制的调参与计算效率优化。","parent_id":"e98918ce-2181-4bf2-9bca-c1fc79489513","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rnn/CompleteRnnExample.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/block/GruBlock.java","gmt_create":"2025-10-02T11:58:00.934086+08:00","gmt_modified":"2025-10-02T12:48:16.028974+08:00","raw_data":"WikiEncrypted:1lHiPbfyRRPFYLmIeHPDABtQ6tDCrY2z/2fjP6bgvelAXKkRKD2QJcFcTdVLJDdzduzmAYjn/P+2mEzIjFz8x6xMVEKe7Mt9uhTEhjUeP9wi0fgLsIxnVRA4Qyh8AyRWkElqhjGwWA9rf2fd+ffnIVXBZs0JrMJqioC9UCafBZjjzwnufGdRELNEL5duuv14p5A2vRGu/dVEpDoDUrihwx2IPxvK2UhZgeeePkeDP71aPR3vogOVNsOe661JirAiL9xYs/Hsa+G5SOPOTCfRTu6Qdo/TaZRR9M5qabhgb/JaVh4ekp7zeErbX/q+v4Z6RKyd1XWi0IOSIo5cWBP6ag6CDjBePB1AG9eQWUiAJ35nBKt1Ey0P6+6QA/HvdAJjZHi70gBQ/DNmRRm+SB63nOd06AcgZjhcJj/X/2rwh1xOtyW0d2puXkFKcKmJ3xhGKMVWmok2AhTYWRkRK+8p7X7Zn8jwEcEyXbu6ttcdXvTusp4mh1w7J1HLxzFXC1P0NLDH+4yW7yRCsxNomYiIOXYeMgdRhvmpIvClcynRC6b243zD3ItzyuAkBRuxPEaTH4W0fwV0Rk9cyqqDlBnP57EEyEoLz5maMxAYJlMGXHe9oIgUdszom8H8VGt7OStiurpPmGUqh/ZF23x593pTvV52Hu+t0HYgScX1eIg7xKG/YbhvzDBOETLY/CWTXrs0Q4b2iPRKf1bJpz4iEVltugH3qbSuUwJmDYo3ci/j2yI8nrfDUxqc0nTrHnxeLFtyQg5qPZd0gF5JGH0HK3fE2eHQqKqW6ZcZzyb8/eKbumFSfcsmUFbs8VamHrpoPph7Ccr4epUazRtzIVAiYnwXCfRBbhjBfzFNxSDmQLg0cFzm4a4Jv10jEjswgM3/PZLyuAA6ZmX/lZlePw6VXahz25EsJsF4kS6x4XuZ8jwevzhEXfJls0fi5EW1tJoP7CTuEHd7eE6OEz9QpujYYiDqA0iLPbxJauaXXpXrjs3kFemiPkp3TccZBYEM9KzYBynjdkBZ+749KbPxJcohiy+8u3QrRF6FVUvp+32c43xKOCATL5z+/k4MMasQ9ZSKyH7tLdB0ZOSpu48R4NLteCcmPuEwPVsBcp45G6C6669dsbllFTCL3AiYnhe2TMGopMIFl6VpoCBYUDUiHg9bgX1vMqFtUmH4rhDD63Ol6cyFiXZce+LUAJUqu9Vo37netrA3wr7BtDyCIYDB8XPZinIZV035fZchdO2ufLLHy1xXw/k6solkaByuJic5cfI+w77G","layer_level":3},{"id":"a63c5c4a-30c2-4308-9706-c8a20558e90d","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"激活函数操作","description":"activation-operations","prompt":"深入文档化Variable类提供的核心激活函数实现，包括ReLU、Sigmoid、Tanh、GELU和SoftMax。解释每种激活函数的数学特性、非线性变换作用及其在神经网络中的典型应用场景（如ReLU用于隐藏层、SoftMax用于分类输出）。详细描述其前向计算逻辑和反向传播梯度公式，特别关注梯度消失/爆炸问题的缓解机制。提供在多层感知机（MLP）中组合使用这些激活函数的完整示例，并对比不同激活函数对模型训练动态的影响。","parent_id":"76d2f906-894a-4c13-9503-c173ef46d3c2","order":2,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/ReLu.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Sigmoid.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Tanh.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/GELU.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/SoftMax.java","gmt_create":"2025-10-02T11:58:08.707921+08:00","gmt_modified":"2025-10-02T12:49:16.29304+08:00","raw_data":"WikiEncrypted:yI5hnQh/UnneG+4MEPtIrTgfjBieh6A4gcug9kihswOwIeNXcERoUOxa+bvUXkj4dZi7XKHSDGCRzbfsmlTV+kRc5qqqvYHCoFleLQB0nCWjmdvfLCv2zUGgJ24nVs8+OH2VncvbpOElJPRdAGrQUdQAxqmXzAcqwGIi1sQSQhYZ4KVfOM90Bqk52mQXPqXznTZ9UXCdrpNNXZPZx8biO8G2LHZD/FbIx9fm3bv3Mku920jRerXryRIo52sdVz9X1TVo/EPrDTaqFlY4qu36k1D1+Fnw0aoPax+4ZFRilO40ezPxLy9GghhjcCSqkTcfIyTa7UK5ks73wwIrFw3uXer5ZiQ7AuRmDoZexW9sj1KOcIc91usDMSLfiTTRj8IQGhaHr3sVp4BFXOV6oVTUkck/B79Pz0UaQXakgzHoCXq9q52sJB2xHXmwapXqSoU8yP2DHp0Qp+XgLaGo5p8/AxxXgkZKJcl1AEpXgN3bcfWgHbBHLYEDPbO3vl25R08/28AGOfg2NMR28B57DjizDMCbBiRxWFXPgA6pLmW+v2FsBXKBQD639mGWxZXSG8HAQnOVPl6lj04UhJYMsvt3QH2fuurVUmb1oPzzhHl5pOt1PxAERNDMh50aGAtXdjciBprLo6P4x6ex+YAr9dKn2Db1EXmhXUlLxc71SSwHz9IVMi71zsU/TgtrO7KxbkDziKHKrzEj4nSmYklIhcYd4Z+R85mBfNzphNn1eg/nERNteZOSeGwcI9jgoubsv9Dankxtjhknf13It531X0rx1xdiiim/a9+jpGvvptJaVOzX5NoG5VYKfHbESnr+NMBgxSX+CsAyMI9yaZB9ftW+NcMi1yXhaownHzEFkeoh31xdj1fjSL6i5wlRP3Fhi++wdsGTxgfZwYDEyrbgCydDoqm17sfrXwhycMazp74DpPtXyH1EzSvBgotJSnjV7r2H/hLf63eZMWA/gJ9Vw8f7BiTkO7HJsCMlzOkfnchkctnyoIR7S7klyCmn4EU2hAFOz46fcwDzeHsy2lYenSwG8wZoEmk8ip+9cyG6Yok37e7d05qTyA+4QS7KD3Ibl5j5vMNCWmIlcv2t78S2XXzXFLuLONV+nGzcnOBDW8GCpiFfmGkXUtc0vs6I9yA9L+FCmwc/RHtRcDNrv4Rxvi2bWwhEITc9/2Xz/+UuyimHhsXmE98KHN6dZ3sTvIes3YnzunMs5P3yF7vpmpez9MlJjAseP4Pqk6/nDatW0OHld7UyS88rfj5xbYIb1uMJ3GqETfwRAm1e40VirvK4sqx//SGuscsnt8m8EUXTrwIFTzoFxLs00QX/obF/F9sFdO+zJrsad2kG+p6wv+jD3JHD7jnxqC8e919la1k9Ztcoz8Ove5HpcCcXl7SbRALgBAoN2dILx5jbhTG4/qYUFbndC1aTPqzFo5xUtrUiPbjsd3qX7GfdtfGSVE1dhBri9b70u98jo4HUMm7jt3pd1YnDehSiaDqeyFxhwLEks1Y2KNbpNIYDNbup0XFYY9W9SFP5fezWaHEO8jrHqvUFAhPrbOCXc7bJ7MLaJuwRFXWNHrJ07hckr9+Y4plNVrW+xFt3bRR/EHgRAlMD/qLrHqkZzqJF2m/eP680msU6Lcv/dhDtXCozXZEP8yavIz2R6fFkFqBrWAEqjSKpHsB/wL5Yfw==","layer_level":3},{"id":"c95c7bbc-34d7-4d13-b9d1-0f71ae531724","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"输出头与词汇表预测","description":"gpt2-output-head","prompt":"深入剖析GPT2OutputHead类的结构与功能，解释其作为最终分类头如何将Transformer输出的上下文向量映射回词汇表空间。说明outputWeight参数的初始化方法及其维度（dModel x vocabSize），并分析layerForward中三维张量到二维矩阵的重塑、矩阵乘法和偏置添加的计算过程。探讨权重是否共享的设计考量，并结合predictNextToken方法说明如何从输出logits生成最终的token ID。","parent_id":"376ca184-7866-43ad-97eb-ee95ca47d2d9","order":2,"progress_status":"completed","dependent_files":"tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2OutputHead.java","gmt_create":"2025-10-02T11:58:13.038975+08:00","gmt_modified":"2025-10-02T12:49:09.987255+08:00","raw_data":"WikiEncrypted:qO++m9b7dVOzK6f9b9ORrlCrL5+sq0xq3hH4HzyctWaseRbSNHCxNg478cLm+F5jPiQh6einMzJca2R+LKJpyrGzOR8/I05NPai1Um6jQBbHXULLri07uBf9JIbqSBBIQhtHEmaMvESyomvH6tfmrOAP9EzSNM11gAeuvoc26KzmJtCBixfx07slNyid58CK2wSSMvKG8wh7dGzS+FWQkxEfgx6HQIJz0lspCcqE5my8/26itLfMuC8QyoL6v7ayM6Pn3zMQ2ZBG32EMQKIAHBo8YLIvK1c84S2Vm2oy4EPYAPmjdGX+w/jBj0kbtPT0sPlFK53v+eN9leiyLM5yA1K3U5pxY2Lv25EWcCR2uCaDVcatLt3IPhnD+v3OM4D5w1xZk/UzljA5v97PPU7QaIv4K629N/j7kXP4iBiV6oglLgfDYGKl15TAbdpizfCIEi0f0r6dRglKOmlOlCU7cvicT3K8oQsFVEHBI4FdPrRytfSbCy79UFAST28Dlq3Q+nMULawwFkBC37H4BHMgEYHX+rs7UaIEqjQJLA3HaA+BlavRooHS2+elxanuaSb3DJminTae6qoGML742LxCGUdc5c8obv8kEKuOJDAUQVjfO9uyOXPsHuv+LIMjHIYHR+dHG2Fgdq+ymRH253F5HQCrI4yJrUYz47YlpM+Wshli02HhPGvyd+0POFFd8m7v7iAfT+0AF9uXplx4ChenIEeY3nijWJhSeiVTBGI1snr/hML/7JeKNn1htrgyvQmtRVytGd8S1YXVURARCv+rbGdRjqYPKk8AIZURJX32n8hjd+8cika3v/0DhnX+3lyoE35wR3eQImynk/Fm6T11Kxpv1Vru6Itzj7n5oHhxiprjZwOjSx9j8ycBgjVVgjQ5N7m7ZcMM1t6a6Eg1hz5rpcD0paE0TnX2QCTwghNwqOlvmBmEahCCH3M/SERqY6JOux7olSKbhnissXxtCX/jes4Qe+U/VMTpalNNi1IlPzQ=","layer_level":3},{"id":"25ce1389-fed2-4ea0-8024-9d54af4913d7","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"智能体系统","description":"agent-systems","prompt":"创建关于智能体系统的全面内容，介绍TinyAI在AI智能体领域的实现。详细说明基础智能体（AdvancedAgent）的工作机制和消息处理流程；深入解析RAGSystem如何结合检索与生成提升智能体能力；阐述MultiAgentSystem中多智能体协作架构，包括Coordinator、Researcher、Critic等角色分工；解释SelfEvolvingAgent的自我进化机制和经验积累过程；介绍AgentPattern中ReAct、Reflect等认知模式的实现。提供各类型智能体的使用示例和配置方法。","order":3,"progress_status":"completed","dependent_files":"tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/AdvancedAgent.java,tinyai-agent-rag/src/main/java/io/leavesfly/tinyai/agent/rag/RAGSystem.java,tinyai-agent-multi/src/main/java/io/leavesfly/tinyai/agent/multi/MultiAgentSystem.java,tinyai-agent-evol/src/main/java/io/leavesfly/tinyai/agent/evol/SelfEvolvingAgent.java,tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/AgentPatternMain.java","gmt_create":"2025-10-02T11:54:33.690305+08:00","gmt_modified":"2025-10-02T12:02:00.9129+08:00","raw_data":"WikiEncrypted:gTiQk8pR90rzooKLiaXVuZA9lH20gOO1drnnF3ZBdqPQ1K3IT4/LS0F441wlTKqhmqpRBKT9BOARn+u9fRVxESkOfq3lY1vXSzdNmmQ3ZYhX1F+MebVicw8xOx7NHKD29JyiKAgTc1zl0fKuy5WW5m2LtJjxOrr/kLRThtnsw2GphyUO39ch/zRz1rmlFRJqhyIU2kGJ2sphAloF68w0+clZg/+LiwMKVrQXwNfpTC+CCSHO0tRwgO7R547GqsZW0Lwjod7MIM4OjLXclO/8VRjkyYfqoB/qi/zOYVBFiCTyeYBjuNfn97RN5F8srsBWiOoz3n0mFWZPgKvCwK3Bq+BDDd1tmLG+I7334MRjBFehnfvgGDe8C0O61r9Qps1U1A7C5QZ1+KayqKbKnqNoZvGP560K+ZqUrtNUxHPl0VTVm1wAV5eJ8xF5Mb/no4n7wMxntROHZ+gtV3H3+Tnlfk34oUuKNoZfgYp5agWrn5BdBUJ8Idqkqen+H8xsisS7Q7E5YzKZkMhcXOsNF9RgP1sssBC7MV6x5CfQW/sQ735sI31GKVH9fZG31f4qAyg49LL5yp3+/CoLyD2Vv8x0rwt1B8iUIa3vE97m9wQBMM8kQ8k+aQLoY36pUwmnhs5xmz1SeWGro441Db04S+MAlP4OMfQv9lamZBCOpU4WXB0jcL+gr4lfCOfQyARLjIR4vf4GyP23pO8ho88smkzGIrznwHlsqUV3X/0HGqnb/unwYdYjYoS0Ziym2fwD6G/XzAyFyed0WCyt0FdlVLZif9A66klLBd7SPPdu+fu7b+G5xiZETY2+Ck2bbaHK5wplKktR7Xhiv/cV/nsWK6s7VzNGvm3cDgS7OXUeHOuJDZ1JBeg1P6itxmunK0jq8Z9FpGBgiNuXNhTvYxI+42IS8B8JDGwcJRLSIBxR7INOK/0R6ggZ3m5LUkXJNR9JwofiNVoUdc1pVhH0f00c+7hZ8MwITLq1R/ttDx4wSJCBxZjKTQCnusinObzVtndJSUgzz0A3yvXOdG7PT+FOaW5TT4pQE/aGO8+QOUsRMPah6H2DIlhl2PXQTSiSivTOlg75bf80jHHt84c6FtEvYMctSJtrhP0wcEFpsEPCmontYzzEVunhs559EoFCDq1MKCNYhkqdNFL+1u52RUKhTqOFn/U8y6vjJ7p4g3ffWEcEa7T+BmIMyQWgBXxyppJZngwgmWzWJbHICYETshpwLOX1gBpxh6b1yBcPcdXy6TZitYdRJhVfdjeACaWLY4w/9Nocaf0TE8SAYRHrFmf7bNMF3m/SguUTbBJj3B7ervNdLXpV4simIPbgpcvogso0G9qAWrXNIcFKg1TZ3t+QBqw3b7LqAFpSLqtTVcoZp1L8co7DSeAIZ7zDak3U6cgQGqLCjJO1ZEWNG/pS1wRV0RUCnfoNTROvUnBPC0OmpTr8hYv+5H2HrkE9clMQeD6UvEhd1/cNF9JE4d3Fq3lxvL+tSVW1yXeQSvODfJKc0goUjrztKvcDD5cRyIkeNrLA1Slysw1MPDQ42Hlipfz8NxzoBQk0DCwf+pEQ/o8xUvfznWpxJ+lZrb5NPmwQA7VY5Q0HelroBFmzjaissK49qLiBYrULVdfUAiYjb3zxHZuPQO7mI3U82RrW5fp/YR6zGjSCD649/SsXmM42h+/xeWFj1FZNjF9TT/EFGDkgxW4hqdM="},{"id":"03630e74-7219-4cae-bda6-9a470ba8ad96","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"机器学习核心系统","description":"ml-core-system","prompt":"系统性地介绍Model类如何封装模型参数、结构和前向逻辑，说明Trainer类如何协调数据加载、前向传播、损失计算、反向传播和参数更新的完整训练循环。详细描述Adam等优化器的实现机制及其超参数配置。解释ModelSerializer的序列化协议和跨平台兼容性设计。展示Monitor类如何集成jfreechart实现训练过程可视化。结合代码示例演示从数据集构建到模型评估的完整流程，并提供性能调优和故障排查建议。","parent_id":"1275e1ee-6647-43a7-9473-015f0957e379","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Model.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/ModelSerializer.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Monitor.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/optimize/Adam.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/loss/SoftmaxCrossEntropy.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/dataset/DataSet.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/evaluator/AccuracyEval.java","gmt_create":"2025-10-02T11:55:14.991074+08:00","gmt_modified":"2025-10-02T12:17:29.973292+08:00","raw_data":"WikiEncrypted:8wKVWmJ6+IDqWdFVklACpYExCegTleH+OkTl5Tl+9QDQA/BeTKC4KWnxqQP2ts2tlJyjJyss8AFWWei5mBY13YMQzpDV+tydfleAXnO7GZeklJOnFmeC6Jx1eQgYoxVg1LX55u2w7/o+fIO4LlySGpuirvgmNWhDtcFN4fk2s+pFVWy0tIM1uysUcCznBCd9ZweH6/leAashEfQ4k4aECLXNQ3Uuu2kzhUlMLgPwkVyUmwiD7euPildgBS9V5AbZu+154q2oB/rr78dZRCrc09O+kKzsKsvH6K5PGAjWmXiUPFk4Qa14LNKdO/ZOLcNVzkTsMHydzV6yDcKKs4UAXQGGwDYz9RWYtmA5sZCxdo5XQ8wJcV8aekVlfo/9CAGqLW0+c5gpkyfdp9t5J9w2Wtps+yvUPObqHOBc4nZJmaJfGZuMzPiqs3bYyTL1L0WFnlSPT5/m4XjzqdZrKz2Q8w+V9s2L+E4yZAsl9h5kI9jAv78fsoYCF77GvoLe+IIXLQ8ckfC/WvLGs+6fwL9oVHs+UYe4pe3Jv1ILFhBG2hbu6ONZGIxrRTvd6IPKG/uo4BOmITrYeKLl5skiicjMA6I7hKljotDIYgmZpRj37tzSCxoDUkGonZv6KxSOP4M/Hy6WJImC0p8l6MtruO9ugMykAOIXy1rla1ngLCnCAhJMZMsh/jctoWiuY3kM7rZxgfb2sfN5LdWReoQptjcqBivRP+l0CzSFQg8JKezVUI3FyZLIjCxMZJzGu3KSHGD7MDwyxhrekjLFdfAPkZGRrW0BEYf6nEI4TMEkJ/9S36AvUgmjGDx0PkbfUqKzsBSvX1VbUhjETcowNlqmpGm2mO09GKdlEqiCf3ocRWlZnx26wfebilivS9ZM+O3n8+6YNvtHX8202ogU5Zc5ffUaAypD46bq/gEEaAprjlY+NWdi7/5OCbPGQDJdwqYrWOwseFkH45AjM0Np+wYcZyFklHU9EUxUHhLAgMRY+sTELJEUxIvDLYdCjq7gIcvlVT01DAhzJlLNF22/Hsq7anbOiTlKGQjWQKvnwlyuh04CU9SnhXEpRkFBt2ZvEo4ISb1ain7h/LSTLXQGsGoUJazoWbYPuO+M9a4mzo0W0PIaMQK3yfrmoiGZw8BEOaS52E63okW4JzufWWJFoKkuqCRHtZ2laI3El/nm6ilefD/sXClwz1ZSJ6tVOuQuONJFO+5y4j4QwSUP0UiGhr2KnRXgIKRhL6hLMzS84T3LBvYmK+ORRfQ6t1A3uqPCdYP6ZYspGdcqwZjLtOPM4zF0vYNq/13AdHogtYnimFWF3ppiEuf3aZs/nZi9P8YzWoswOw1V8VAuvAnGczl1V7PijPeRf6LTqVtt6/o8zsyHGzRD7obIrl2UAzEnW/0oAHBwHRs1UIVfO+ynKzimO/fLLhRaUCNHnmpJut5KluB9clHtp95LVXbe1KSriQvqD+fcMAND0oWaSk9X8got5spT+fUzzrf19yCZ9frVzcPTFque+eC709bWAplkzI3FncoCoqdeB1h7jPgMUBqwhj++ImIa8XwIe7DgXh/dL7zCcqTrFYRkHt0Skne+JXl4Q4vgw72wlnlbvcA8Lj+WKlLfvwvos9KdWUuGPGvaLwtdKlWd4stwNOnGzwsu7uMPGvTuobJdZ2eBVnmjRbZQl9fiCY9lb3PtnZT8eS/8ytLp0jOjkdi6ja7IL4HqFS2IBqMi4dujvDKk4jlgz/c2YNhsPPY2rbUiFNusfhXtapUwY5rDxL3KCmH+GJVrMOB6w1jw6pYyKnTDnivdhHIo4GNesGuxyY9zyw9o8852ikyoi2aKDt0yRoE1d7Cas+K6EP2rqx29UGNF0ggjwQ9yB2ynF4UBmTVcuDkgd6bVmfJFOGFfYaJyBM6XhJUldzyEnQrRy3GU","layer_level":1},{"id":"6c45bdfe-2a79-44a6-918b-39351406838b","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"构建系统与模块化","description":"build-system","prompt":"编写Maven构建系统与模块化架构的详细文档。深入解析根pom.xml中的多模块配置，说明\u003cmodules\u003e标签如何组织15个子模块的构建顺序。阐述dependencyManagement如何统一管理内部模块依赖和外部库版本（如jfreechart、junit）。解释pluginManagement如何为所有子模块提供一致的编译器配置和插件版本。详细说明模块间的依赖关系链：tinyai-dl-ndarr → tinyai-dl-func → tinyai-dl-nnet → tinyai-dl-ml，并提供依赖关系图。指导开发者如何添加新模块、修改依赖版本、执行模块化构建（mvn compile）和运行特定模块的测试。讨论这种模块化设计如何支持代码复用、独立开发和渐进式集成。","parent_id":"2bc08091-03df-4eed-9b9b-427fe848b3c2","order":3,"progress_status":"completed","dependent_files":"pom.xml,tinyai-dl-ndarr/pom.xml,tinyai-dl-func/pom.xml,tinyai-dl-nnet/pom.xml,tinyai-dl-ml/pom.xml","gmt_create":"2025-10-02T11:55:16.130099+08:00","gmt_modified":"2025-10-02T12:17:30.857731+08:00","raw_data":"WikiEncrypted:ZHd6gDb1oAMJeik+Vv5fPrnbMryyROHzkcecs0OC4obtb3ZI1RIoXATes1JwMcVvcD7kGdvj7s/Yv7s9qATkt3WyATGS243+OFjPL7nl5zaUAuY9PcdkfTtFDaSx+KpaE6P0Za+ju9U+Id45eIFLQ5pmciI+e4obypZ/KWZwLzCKCoomk3ABGbM8JhsxYLjjvAzjZs5WTq4GW0gAYfrcH7SpusrGqDH/ymtY0SOqOgFVW/oRO4Mz9q8L+DT5LFr2BZeH7EJ7RCEHZqI4hwv5B4+Br3nJOmsaA5WH8h4LJGB8/MZJlDS/sIzPHnf+shvgyHJwwKjF6u1r6grk6a2xqsxtIFqLRmMXmcocPTOt2S/MesbStz6hUPW6w2pf5EKnMyAydMtC9zHoBIrd5R2O9TCuwdTiAjOfGRbZ1Jo4GG+3aSzPDXzngaJCLj0gaDHGBnJ52zPAhD7TKhMl/iQSyRKKbl5EXgP1exXSzji/GfTEKgSExbLmCxppraTeD7OeLoi1vKz3zqMN/HOuNnjcSyYK85P3z8FRoRWAmZgNHts9pRweBE/slbM0G6O1A7h24cK1rFnGxSG1hFMMpzqg6ja3hZpWyo5RrvleZTGKqzPJM/6HTam+oHjNqz1MY9ZeFzGzB6poCTescXpW29b2jUVpbjhMVMcvLaiW+R9v8/QD0jaxTCBM1hsR/CCSpvWe5cc1bUnmnURmvvJ0MJoyjFijziSgUGoZtroGHJ236hKssduur3SnQccMOvqbKNxNgxCMPxE8O206lKf11jee1NTcnxTCwsHSBeHTZbAcvqLgpAFCz+psRtQ2oDIgM9gW15u0LZ3xx+xMdPxwdUvN4MZGy1F9szPFbEdB4tM+2d9+IXsVuAUk35P0SmXc3zmSAIBL5qn9Q8OAWSeEtHfBxeuluinGpuepROBAChnxCEvB/fedIEbNhaQsv9K7OAQ+7VnG0L2jsMQcpDoPuK2S9jw2OLyXolOdU67ZgAWjKMcwHKK7ZXDWnVXNGST8oZTsQok7RqlvF6c5RKkZzIq8XaxUiUqw+68+ly7H5wpJg+ooeSdRpPiEvMFblaqfq62wuk9D0QeLSyYYLqBj+n8AazaBRwJ+8mTMxzSvJlubCjarTA0U1e5e3MUvv/rm8p7ry6ydCYaewhkpGUEkSa5p0pHQMLQKlRdcW8nndVgLb/oIaRQS8N3rxJHadCF0sRD0kfFlvDNGfoE+EfeU/LSuF4o9z61xZf4j1MAXGuO/VLaPGCLK+ex4nFsa2MhboOu75Brey3o81usHRlVbMFSVIZgCYQwfJtB8sUQugsq2Qo0wSEwFOLk78LnyNZZ8cX9enGC+iIvy16udJkh8GwwBfdjNZDTwTTJ/IfCwB1BQvEGW1aQCc99Cm2c+7zXI0K8Au8iMQ5FtNsSldnCCiywBRSP56To2qs9AhvJa4EJG4CI=","layer_level":1},{"id":"8e4a95d0-4e77-4473-a4cf-7087061e8ce3","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"自进化智能体","description":"agent-evol","prompt":"开发自进化智能体（SelfEvolvingAgent）的详细文档。深入解析其自我改进机制：ReflectionModule如何分析执行结果并生成改进建议，Experience类如何存储历史交互数据，KnowledgeGraph如何组织和关联知识以支持推理，以及Strategy如何指导行为优化。说明SelfEvolvingAgent如何通过迭代学习提升任务完成质量。通过EvolDemo展示智能体在多次任务执行中的性能提升过程。讨论经验数据管理、知识图谱更新策略和反射频率配置的最佳实践，并提供防止过度拟合或知识污染的建议。","parent_id":"25ce1389-fed2-4ea0-8024-9d54af4913d7","order":3,"progress_status":"completed","dependent_files":"tinyai-agent-evol/src/main/java/io/leavesfly/tinyai/agent/evol/SelfEvolvingAgent.java,tinyai-agent-evol/src/main/java/io/leavesfly/tinyai/agent/evol/ReflectionModule.java,tinyai-agent-evol/src/main/java/io/leavesfly/tinyai/agent/evol/Experience.java,tinyai-agent-evol/src/main/java/io/leavesfly/tinyai/agent/evol/KnowledgeGraph.java,tinyai-agent-evol/src/main/java/io/leavesfly/tinyai/agent/evol/Strategy.java,tinyai-agent-evol/src/main/java/io/leavesfly/tinyai/agent/evol/EvolDemo.java","gmt_create":"2025-10-02T11:55:22.111272+08:00","gmt_modified":"2025-10-02T12:18:23.826358+08:00","raw_data":"WikiEncrypted:gTiQk8pR90rzooKLiaXVuQQJWwiRI5AILoJGxyKrXV5Rc33tEf53IAY91jKSzLR8vz9e+S3ucqY9uMZf5+oA+OChojsSEfMMs3CIU4hkyN84LvJV9lUjLOdoxlkHzsVJXZ1+smeUilGSrA0FroyCysCS1Vj9AVNuk3x271dqXW0VF8/eBucMDvXWo9KUafLpTLQkjnwr1QCqOZFIU7ekuC+sQ6oy3iZNIspC+iBRZaQYwSPkZpY6QW6grpwUqDLj4ninASle3s1YtgadGumnLXwElHVd66M6RXz6rxW1DyuAEuiV2u+j2uAS9SJ+XO4YPzfhhmvs1ObHVz9vZA+Kpf1uWRbUHR9vR9TYaTJB3pCeWrbFL1n/TNOy4Ktq2Ac5ewIWGFyTO+e34ZIQUGervjsu4t3PrrBrzAO6W7G8xM5qil4A8sFCAy2wslpIpYugJGELIbco5SP7Fd+nA85/Wm/OXpuXda+FtQa/YStqZUsRiYYQ2HEuk2x6I7C44vJZTDJ9PNuDF8sz9ygQWK5QLRHlC5zAesRV3iYnEeZy6LOL9VjjGJKaf8+I3Cg7ARqs1ER0LzMyt8FbGq5KAjHY6Ex6LAQsh2FBtwPu1EAu1acPpfRkC8irDSn/5hCm9efRqoGbv57pf0d1pJvVacDalEhrG3x4X/csrNFjtkmm3Z9fQJWAJ/EA7NzVershOX10LGsUyFw5lrW2EAdSRyIGK3T+oICTZB0dulXqUdEa+uKkkYmXY43/vCo7WDT8orYOGIhKcerEOSiss5ldcFgnAoZRsETumWU3vHBA1KoM8ZOhSqjFoVI/WcvCtNEYagm/5Y3sH+y6knugQDn2wle5Ro++s8Xsqla/02SdoApSZragy4+5OJKuc7FXE9nRrB2I9WHjnemuZMZoa/xHu+6xwDsYXpLOT2wlUWUCnUc1nJGAOo6vQ4O6nzAiNFWJ5ynjS7wxZRLDOXqAgNWvHGb4z9e6nTLRQfE06ejX7yO2ymArafENk+OSA2fMjtXWeWPTJm5DjxkmqSmF8i4YEglUP4dqRTpYN0FCEu74ingfoWhLpNepvg3IreOjAvWwKPD7jvIteVsWkUMjgx0Gpi0a+OXpdqFvN3WaUnBNM/9HGV6/zl8E6v5p1n4L56KSHa3O6LH53MYSxyp43SQmi7V5OTnMVbVOzkHhFRR9kTj2FHxFVk22uiiBQ/ZvHBllycLkzJvsLEMkvOJEwHLH+rtZb4AztozjKgkwpPZE15trIDrgFDo9QQEo8X6vURgJitF339CzSDw3UJ5DRpu2g9fvIOtjNhabEKAan8I6jeJ9dhgOON49j2TeoAOzNi93W8I+KQ8o17YuuI1DYx88Cmi4y4UdXPacvMg1YqAT9cPqCNHKHKLLe7yRe9Jgltj11AfOMKKZPb523YnMndeGuTlZ+ll30YzNd2mf0Miye+8DGZ2IYOOY8ZElpWLdti9QiIF0wqWBsMkrnDEM8Xpuio2Oo3z8W0v5JUCeMFH13yy8x8b1hdMga5gZSnUI1xVjn5zPNieoYHMgkZb62B6yDnKCVbyZm7Iix4M436hhktUN0thnX3OeQ/U3JVQX9uwwi20BUeuNfju0vH5R9Jqc8oz05Y7PDArTmqLUpm3gxJKyJwFHwC3k1ZMyaKMyxJSox9wiqYSZQKh3pd4LNQ492qGRA2vP0SrtIFZ9GH48MYMQkRRrFelQDLFEc2HJiOklj+qWA2v0teAnEBWsYyAGKvmV9zMK0rEu7QpJSxwJ6vS5RCW8yTw83fGKqrDaNsbbHhnkasiVX6N7Iot2V/rxSdGHK7b7M6VvtoPMd+7BxkqM+k+1rgrIK569LnLLZ84R/L1syuZx4PCA96nVWxlYls3goL8YLo7YlRpEO9I1O6ILF6V6xSg7bCE+jzuvSm0veZOa","layer_level":1},{"id":"04c9c617-73ab-471e-b6f6-27975df220cc","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"网络块API","description":"block-api","prompt":"编写网络块API文档，聚焦Block类作为神经网络架构基础组件的功能。解释Block如何作为神经网络层的容器和组合器，支持构建复杂的网络拓扑结构。详细说明构造函数的参数，包括名称、输入形状和输出形状的定义。文档化layerForward前向传播方法的执行流程，以及如何通过addLayer方法动态添加神经网络层。解释getAllParams参数收集机制，如何递归获取所有子层的可训练参数。描述resetState状态重置方法在RNN等有状态网络中的重要性。说明clearGrads梯度清除方法在训练循环中的作用。提供构建MLP、CNN等典型网络结构的代码示例，展示如何通过Block组合不同的Layer实现。涵盖Block与Layer之间的继承和组合关系，以及在模型构建中的最佳实践。","parent_id":"1d81f045-0d3c-4bb3-a24f-3cba807356fa","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java","gmt_create":"2025-10-02T11:55:49.498343+08:00","gmt_modified":"2025-10-02T12:18:55.707942+08:00","raw_data":"WikiEncrypted:boPmx5CcA0j/DyoZ7HyhKpeN75GxgMdYtAGb17MeIbT1/a/x/IYJNWbXmu73agrHrPv1o/71lLDNoF2t7nTfHB5RphKdKdXMjxl91FvvRy92SORVAi+SYX1eW2CKBdId1EZVJKfCvtZiSfELphHyFm0nz0h9Uf3c2pPUHnIRYq609OcEelQaQ9aUOk0gcgegFKanTsOnsVTcOSi46+FEQ7bHflXspgcvE5v/uQMkAJxwmBKgyOv1HRL8OW3TyL6RZr9FH4uaK/KjMYte+KIxncHG7WQNVIDJxaSmf5lERfQx4iuFtHEN5If2cisMUCDEQ2v0CBkFk4S/ujmAeakANHPgyHO3r/OucQsSZoPQukLkdfCEvBGAWdrPC6rtzK6Ed0uU0P9IvBwMvo38b+Xg1DH6LN2IJ9N0I64bzVc7T0+kmP/0SzLLWvV4EkJ9Q/YiaFKlYh72qdrchY+Mjm+Sjc8hxAhgvy9ZlttyuZCPb2+K7omjRtGXuKj2/t4rUXX1CGVbsvA2r8oWJ6cdKZHZ1ymMBhwUJSUjwtmndCm8za+uT2sO/XqFa4Wn3H76yRuBodOiO5kenTlvw7u1MrJg110E8ZkpGLmeFuD7lZdZT/rqF/0kRkONpotCDfAV48p7CbElMSRExkYPZlGGzdLHIIloYGWJFTvALvF0JEE8ootL/4j6lvUdlo79YjlDBQ5uF2ZEnwBDE0JOXLlQp+zukSyyWXTDn35jcuRdi95Sbner1sqXSr6IHNhLlzXlFfajHDU4Px8DJZyqqfWZfAfiN9+BNFXrr+6KnXFaToYarQ6Stjyxn0lq45w8ea4FA/PKHC/7YhoG34nYFSj+Uh+f3qtFv2UPa3ABsZbsGBw1N3zH+W2rE31gP+NCp2XFvMJd61VEHWNBlay3/oARoIpN/bHkp/YSgL5+pcf+GRqnhvAI0yeChwravk5ARskv0m30C8ppe0vQ62gqu2ev37KjIyyCIMM14kwu6/Mfz3N3Q3xtu03OcLaRoJE95ogKOaV9ayWFnYswQwO6mLzX3QZJR76agBuI+jubAXGePHzPhI+BAzrHvyBRb1lqYWz0GzGBczQeXn5IswgNbzqT8e+7tIiVBtNLuVtyIQ7HfcwwKutOeJ86mY3P727WpG9d66tqGV/xpwyfKZ8T2+Iyj8gOm+I8Ifb/H9BkzT8PTEFwn2+CzWbBMFBlZ5Wkc8Y76zor8+LaGzKiVaZdSR/8L/wn+9kAtEGU4FYPUaBy/unFjyuTml8vD/Rx77mlRPYAx9QSfPurF5a0dr2shuQKXwsF2G9aY53E1/x5JDG0g9dOrUtmvqd3eoIUkzXAcMXLGzbzYsQHxe8J+eCovLMJQH4fu4muYi3dVxliFXFaZ5k+hLwSpWRK8SXFkHftZ5ELCaRsc++ivUE2VhICvmJvoRjDLdtcdMS4mWJkjy+8RGE31QIJWv+pfwIFfi6S9NcFOTMOpLBr8evtD44k1IZ1/wxMAmjlr5X2o6oMp2dJYXKwfN6Q0miLID/nHPaK3p4fy9tPkUcCEAEjjPHPWx3OhRXoQA==","layer_level":1},{"id":"743dedfd-f2ec-494b-a9fb-89913b43ebee","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"MoE模型","description":"moe-model","prompt":"开发MoE（混合专家）模型的详细文档，聚焦于其扩展GPT架构以实现高效大规模模型的机制。深入解析MoEGPTModel的架构，它使用MoETransformerBlock替代了标准的GPT2Block。详细说明其核心参数，特别是numExperts（每层专家数量）和topK（每次激活的专家数）。阐述MoELayer的工作原理，即通过门控网络（GateNetwork）计算每个token对各个专家的路由权重，并仅将topK个专家的输出进行加权求和，从而实现条件计算。解释这种设计如何在保持巨大总参数量的同时，显著降低每次前向传播的计算量（活跃参数）。介绍模型提供的专家统计功能，如printAllExpertStatistics、computeTotalLoadBalancingLoss和getLoadBalancingReport，用于监控专家的负载均衡情况。提供MoE模型的创建、参数效率分析和专家使用情况监控的代码示例。","parent_id":"a9a0ee5f-a5c6-4f7b-bf70-ae25d29a382e","order":3,"progress_status":"completed","dependent_files":"tinyai-model-moe/src/main/java/io/leavesfly/tinyai/nlp/MoEGPTModel.java,tinyai-model-moe/src/main/java/io/leavesfly/tinyai/nlp/moe/MoETransformerBlock.java,tinyai-model-moe/src/main/java/io/leavesfly/tinyai/nlp/moe/MoELayer.java","gmt_create":"2025-10-02T11:55:51.290784+08:00","gmt_modified":"2025-10-02T12:18:53.844923+08:00","raw_data":"WikiEncrypted:MPTFfqGyVNR+vWQVyeYkZRUkR5+klqp8ANsjANEuSU+5V12+EpRuqw15V0b3g+lO+DLdAWySRsQ52/wTqcS2s2UgjxNGlInL2LlsS4ejKaKQYzbjOYlWdFRMcyj/rQorBlOjo4JmcFTjcXl+ORbY1uQpERfn95WoSXQOdZcFOXGFhnSr0KG6Wx0bVDfnRYtBw24BVRQ0N5pmXh092yKALiPNQmeY+2c71c3IKlGTMnhxgBN8ws7iiHAFlvN07cBFpeSfI4ZZrA6eSxQmGJrdVwJtB+UBh8/0tgF15Nx97G3GXuPw7vDozudKqwLKfmTY1lCBa7xwx1q+v14DeMYOC5R2MnGxyXvVXH4WfLctZl5df9OduaOuiztXNbeqKYKALOUTFDiN7V0vSOPHOSZSUEw2BkUuVDAoRE5gJAsY7J98khcCXXRirXd14ZJQzAgv9wUj1dWT0hnrkjkrqBL42HTeMcsBftatxVP99U2W149HAqkC9zQ91wzZ1Trkijq97u98tN1KAAfZsFa3DL+1zkO+61Rxyiz31YBRwBlqoTutaQTo5N109PPj3QB61Hp1uVaQDW3UswGIUXYmRsDOho7eJpmQ1RUDGtAbOXU1HJN7+pmnVdR+vqAxUMEKq0RIXtbnBYEfps2KY9IZJPAJXzqBh5FQ03Mqw6y8N537P2fyFUxM6ahJhH1+r6QYfBACXazrK7mzCewXG3bc+PH7vcYb4A5xjRO1rknAoN1iwtqMuCFz/iUX/l+KwvtRd6c7GyQQRqTADEXtRe9NreFOkSxNrxPmT2ratoLG+rOqQcbvZYrlYIKs5I9H4ep39YXus8Zymzmp44qYKWdCCd3Fn52dxzQeazY0b9u9QSEqKLjpiOXvl1E7FD9O7Le2sHq+iUw3QDNhRlNYiuaRVZWHKMRz+zjDWyWNM0MIehzjR71CmQG+Kg4+eykUpgP6tEsHOua6PXSTQbfsNCFQDfPrxn7PCsnTAXrGs0W77FigkmXPwuiTp/Hu2swKBIwSD/wozNWrBMaYX2w0Ch7k7Ip16Uw38O5LTCKTTTm4fxbAThPYgyAEi2qXsT0TXFA3ZHVVOLQdHvjpr+FLY6vab8EjJJ+qpddIcWLO7agwlyErObuXc/xYWTz9ewsd5r/qMyZS7UJyv7D1aDYfw1YLAJZsdMgsCAPG9XQhIOEorQhwEQhjEBXdWoig4AhvYHvfMl7gqKj2XhOE9+ex33rxj0I0J6ru4cC6sb1NQJaj9Yqhh68wmkHKpJ4yr2pRoAv/hHNCzDl8PqzFpit2hLBt7IEJ8sW/Eh+gUDMcJ3b7nVsbckoOL6QQxC3ZKk8aNyFO5POrTcePCY/ha26v1Zdv/a42GqVNOK6Tp/wdeMm8ecpArKoROifvTn492NfAGUTXyaQ5TYG+iD4RNWglj9QFlWxET1EohznVQjU2cWDym8WB6QHgCTcrWYwWMe+mQOe8V/3M9NwTJ63f2mwzGkjq23PzQ4XGMQRi+lNrSxwyIJsqBvFlhi0wLRZ3Ha+oBipHjhusq+ZY2y9OR68dMmG+tjxqNkrv1gfoX/pq+jLmqg2AmX+hAcYWMWyP2dx4LqnTuTSJMJSZu6L1giHibJfWMC6rhc/JYLkVWUrdYM4s/jcnjuxx7LhntFfUYRiBbJLdarDBkNyJGk2GrPITnmelVSh57cto0ekGqtG7JFUdwNBD5hUAH0XK9GaTD9kWmgmM4X10Clb9LYNJFR4oKm8dmgZU/4fd/reilr5qT2qyTXVfjZkdCkGIpzIpyGc8varaN0JWpleFOuzDLNFLdKuqz2UAYG7DWTXdSNRYEjODYtiUccNyulrC+IAeG3gKcjo7OZfaBNBL+P4Dlhr2jwipfvBVMEewlBc4axUqJN5Vi7QlFOifKTaK92G58TXFjMhHh6uDUPTWv+12rgN4Qw3ByTti7g==","layer_level":1},{"id":"e89e5b2c-5591-4f79-936a-572008d73b27","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"分类任务示例","description":"classification-examples","prompt":"详细描述MnistMlpExam.java中使用多层感知机（MLP）进行手写数字分类的实现流程，包括数据归一化、网络结构设计（输入层、隐藏层、Softmax输出层）、损失函数（SoftmaxCrossEntropy）和优化器（SGD/Adam）的选择；分析SpiralMlpExam.java中螺旋数据分类挑战及其MLP解决方案，重点说明非线性可分问题的处理方式、激活函数（ReLu/Sigmoid）的影响及模型调参建议。","parent_id":"f4ba2b64-d220-497d-ab20-b4d22dcc9be4","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/classify/MnistMlpExam.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/classify/SpiralMlpExam.java","gmt_create":"2025-10-02T11:55:51.508978+08:00","gmt_modified":"2025-10-02T12:19:44.646579+08:00","raw_data":"WikiEncrypted:QK2FE9niK008DzzrBeNOsYM3leRdN+ar28UQyKheX2e/q1j52Gk94YOal/spqARqR2ZJGvxTzlNup8joCpFUJ11Joyb7J9ANudxUk/Lu7N09m4mnOcCPr8bu7tgQPqpp4TYomTLUYJlYxQHcjEGA8Nb+/9rFcNxVa0Deg9BVHKESXx0OT67qmF3NFoneBYy7KX4MICNj92NKLLZEWkDLQdk7mppmBvd1iqDm7QjIotD8G8Oj95vfJQ0SmTW745lyY/g4pBaMsXMaAz0vJvEFMoLXuG0Q5mIbv3zj3MTzvTICG/wKzblHy+T0T4SJpo6zg4FU3J+Jd8IBk5S1okR8lv4BVAGOUZHLAC6oiZR8NVyjctgK4gORifOVLLOSYVoflq7QhcjV6lVK6AqqgKRvQ6bvjuC/5PFb3qM6uVihecDilt/RlrjyqafU+inthSWYtlnLEGgDP5xFhuWfoUWovI1mDvfw847HCnBRWrFlaStx1Fk0JPfJ3hp8pLpf3m7lO/dvQ8rAUviJIsjjCF19FiEjpgnwGvIbSjWx1cJTqbnMf2sTHBdJhzw2dZFlAlWeQibbaz9r6cS4rM3QDwBcTTWp7N0BF7cijjCNWc25/pxwMBzkRXa/7wjQPnu4TfKJNHq+Z4alOsjFHZ68m0YHexek5iRm9Phu4k6kGvWYgPr5JrR7gM8GX6WO2p7PiMbzrVAE4cxp905NGSbrPnvF7sCwWjUJhDBGnbs07oF0UA0dKcGevWNBx78NjjkwAoODoOYnH7lN3FdONg+XgWHBGESK52xdy9jcDa4qh+RGN73BGQ02/iZt7DqgTNz04u1UTuTnqTEe0496mfLsvEA5Yyqmme4yC540EtYsH2joz81TyPMC6hzc8rSg8xOcDL/JsiEHdCdS7Url7ILieuaMCQTq5JWbhDD+b7npcM61P40beUtvNg6jKnCmN+W0AAT8NQ3ZnGJ55q3TpIDAnV548hTnf3+yvP9yuZ/Iyx/mlus5zgq0QxLxyE1TAssCPKY7JY+O74fhGkqOSzNtpp4lTTiMamYNYT2/TM5M8L445xERRl+VhYpygxL/1jF2QlDjP0VvAVV0yuBVRp+98FNRz5bjf0I+NwdGD6waj96KaHt8y68u2rrMMIk6z+8D18TRWZrD+/7q/bv0YpMPpO0ADTsH2odMwDbhyB8nD2XH3D4=","layer_level":1},{"id":"fdb7f27f-af00-4bff-aa1d-11d445251b68","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"工厂模式","description":"factory-pattern","prompt":"深入探讨TinyAI中工厂模式在神经网络层创建过程中的应用。虽然框架未采用传统工厂类，但需分析Layer的各个具体实现（如ConvLayer、AffineLayer、ReLuLayer）如何通过构造函数参数化实现工厂方法模式的变体。说明这些Layer类如何封装复杂对象的创建逻辑，包括参数初始化、形状推断和内部状态配置。结合代码示例展示不同Layer如何根据输入参数（如卷积核大小、通道数、激活函数类型）生成特定配置的网络层实例。阐述这种隐式工厂模式如何简化模型构建过程，提高代码可读性，并支持通过配置文件或API参数动态构建网络结构。提供UML类图展示Layer接口与各类具体Layer的继承关系，体现工厂模式的多态性特征。","parent_id":"d38c0446-62b7-411e-a6f4-e3fc7a48b7a7","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/layer/cnn/ConvLayer.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/layer/dnn/AffineLayer.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/layer/activate/ReLuLayer.java","gmt_create":"2025-10-02T11:56:22.305921+08:00","gmt_modified":"2025-10-02T12:33:45.738956+08:00","raw_data":"WikiEncrypted:II23QBWTpkjRSSqO+0e32Bdn+3JeykEw6GAV0YhpQ5kE7jc5AuGpE2YQSnWOmFLyA1Ms5GKMYfaQ+shV6DURDaPknqsWcNbO/OoC1slnd1USWd8zutNcBVVespI7dujOI2wCUGvRREsrp7VRT72DAFY85NdHVYnKt961B4dLfxRoXDiolrvKD44d8vX4yhKMJKIQiMjxIeXRrxIRO0v+lI94ojKBVCu7hokjTFUU3KHDKA+OHUueJpp483W/HiZl6ucxKhV+uxNDrgTSrP2cQuJAK8+E63wImUw29zJ0MN01SVFWOrPa/bGloSqMVknUogIbE1m/F9gRL8cnUMpXUBWTBCI6E9svIs/aYIi05PW9BhkNm7QutKqKoLHvWBPBrDcXxAuDVMf1A/GBUrhJ5gK1DLhpos9hUQvpJ8QwBvLQD0DdZViX4oriWQSosd3XSDd4/Erqmk//TCWFLOBs4sM1r3NDbK1su9nR+SXUDIY4xdnB5igszHvM5cLKdrpsjzO6YhDPao0RPLyPie/xI0lOkQrUN9luBJsLoY11qWtDHmgTrNqHvF0Qos1aZV+uv/BrzHkEjb1yk4C/3+RyQBcNEAcpTeRibNBci4TMabLrvpaclFs4d3gCwAtlNng51HIoSoDGFauD8nBd2rl6qfzjVMpdS4zNBQJkZdHCQKR+FXMYIW3fiEag13IGDxqZfY3AxUva6LrhnOltXMq95MJxNal55jVul7DORe6y0wMJKjHvlLQIW7KchJT154T9GF1Dlz5k+cWyl31kv5zEHpqESkKYAQDtufWknaHt77wOA9sJLwIrCpzR9BQzhqS5NGbXyIzHksEWS8lT9gmHucpYKBl2bcdmFqICnDGvJ6nLVscYnmDEREDH2hbptvRPha/INY4SKlnBSLPzcS2zCoP2cOcVzhj4E2ZCtDvsFjjHeaFmmLZ+VYnex3snNTQRys+1msqwo6YdrQiotR8Q5ToxvimMce6ckwCFlomHS7/+7yTEphxd1lRDQ8aSqe8vbxfj5dGowvD6pTEWk1F2FFriqGeB6Zt2ckYI9l5F8TS9QmyMHyOCJsXIIfiqIkxLLi1FnKxdPAHktr/m/z0+zRAkS67BkQP0AL2si3XpCS/Oxllnq6ZvyIZAFWZ2sTsThnzdIFqlaU5LFEzsDjiT2WHHSu+9h+CFp6NMmHNZ+HFP1l9co1wJwGxkB7Or0/RffZpR1X7vuc3Y40cwnBCALJUvESW0aSnOQWiY+YySGv6o5ZGhVP2T1aIDi+XGzSlw3qg22qeWuV44DcpYHeK4IkWobzUWMeooTlsN72ZVPr6U5Au0Eu+aKSlv8u2Bokqczy9Vnz6uMPWJjLAj+D35El0d4qfNNUsMgZUV/TCiYtZSaAp+c69/7QkTDHLG6mQVsal6b/vfxdpIKv2+JOSQS5pST/r5w/eENTpqHDsa+Uh0j078qIOH1r0sSFyXAFBNQzY7w1+OioYTL3d2CW2H4Ih7IRhvfREKLWEQ4vkBQYA5D9E6+k+rZCgkFzaw2+ctEsKaluvv+5UjTIB65urHhIUBXRSVdQ4JGQraGYw+E7u1lx+0taR+EP8eybAy2upuulz2UyLfZ+zgFC9KXF4Spb9Y3rGosd6JWMI6RrB8v95v9rCdUrex0ydmabrBr8kG9loB5i13U1j/Y5X4+QRs7n7LlM2tvUNWPoHl8vUcgXMT/5iWFVcoFkI5yISjO/YVn7zJ68saCQ01iBMZuTvzmRZ6NRaa6iufSA0SMEfsFEy5Yg3jD9C0EEJwO/xGnQKa89wTN2acLAdm6A8aAO9y8GR4Xp2H9dQ01DxVhp0Z4/k=","layer_level":2},{"id":"bc5fb4a5-66d5-428f-9389-de5dc03288ec","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"Model - 模型管理与封装","description":"model-component","prompt":"编写详尽的文档，介绍Model类在TinyAI中作为机器学习模型顶层封装的角色。说明其如何将神经网络结构（Block）与模型元数据（如名称、输入/输出形状）进行绑定。详细描述其核心功能：前向推理（forward）、参数获取（getParameters）、梯度获取（getGrads）以及与ParameterManager的集成。结合代码示例展示如何定义一个继承Model的自定义模型类，实现其forward方法。解释Model在训练流程中的作用，以及它如何与Trainer和Optimizer协同工作。涵盖模型序列化（与ModelSerializer配合）和参数初始化的最佳实践。","parent_id":"ee92a8e4-3e38-42fa-b11c-7b6ec6c143e6","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Model.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/ParameterManager.java","gmt_create":"2025-10-02T11:56:27.9016+08:00","gmt_modified":"2025-10-02T12:34:41.553941+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTT7EDLlAKr5016RsCRzZsZeZlToVnamSQETTT5wjBM3smyePXANl15IyXxX5OezfTHd7E1Fq3/l+TaSK7bbgvi2BdXV+J1jOvk6ajniAsjx93UMZsavBPMdCEkzYLSk100fN0jijPVcTnip5x9uf0dx6pm9LOclk+U/l+47Ixfa1ktgceex1tkheERTLjD3VRbA+Is85F9pRUNC+DlpmcuxXIK4W/gU+4E9L5kdXqCRIdAgsbAPbYsXzV8ulP6PJiu0ZQz6iwtR6ZTtyILWqO+b5lEfYtm/XJ1IG9U7Vha0ps+PBaV5/51zMreS+5RhCjwVA6Dqro0p5MK5Npy9uH0z5RLLJOwE7z34iR+4pIX8H6/e3zl7AHdVL2nWdIlGM2oD/K0FBbkymNogjhKYwEIgKoT0dnBXAUgXp2WbLJu5RGUJDgg38sUsgdg/qo7wik3FiZjh1Bq23gnuvakjifT2qQ1KKzwKMoAozQNzdYg/T389js3MUtuocZhjOxkHxx5J6qkFKYZee+b+IdpQ3C6wfXWkLsY9A/9rSHCGCJwRk4Mi5ZR6Cx9FmbuXw2FOYioTU0jJKdYMh8xfVuvqUUUlPeCaRoqFNNv7r7fAmNqxIs1dGR9giIoXdzp0oZcjivPziXBo5lel9Dtr14nen0KYdRdGnezolZJzS6liZl46WNqYDGhH6fWK38W+yhqgB+YFC6PI8T+8lh+aJJbDplzDIakwV4QXmzmIv6woa8S2ND0EojuK61YHxMqs7Wt6C0S4UaVyNHWSK8rw1siX5Lu2E2XrcwopTtxJAvdY9oxTFshP/vk2OiGDM7VSZg4+5A/B4UpLIbuoKC90MCeRkPJlaROyIUHHnKc5+RZ2pepkJMd+tkjurykmSLP056Z22Ygy/B6weNXtugvVFY129rwREKFFq3mykixnfnfYubTfZchQ9yaxg4gaF+kKaDUdpR6apNTeAjGFwbyPT8S6zSmwD1kAhKQQzsHAzECaRbgYPFvuGDBVQKnOrDK9al1PggacQRNy5AofehVheNK1qm2qWXWMko1TvYT15QIPDlc+Ai+zXQEhldt60CroqX3KPlK4ruSYBiaKejf1IYYGYUkZ4c0Rp/mBwSpWW4rJaM/sniafdqK+5lc1c5+txi6y8CM48b6qMfvu+YYwmcPE+ep6oyn3Ejg93JPsDTRWw2d3eNXxUCg6EwkhisOt3s98I/p3UdDBlD8EbVPeX72J0M7f2xSIjN4Ihib88LLELXQYJ3Nq+Q/cD+jT8GDF852Xc9Vj8hBJsGPSDPkswK4mnzvEfp+VTtgjbNkdFTZ0QyeVdqF0JutvN30kbsh5QIDzx4bJIR76iUtuFPcZLIdi19YO9Sj4//98bbutXnNldF/LPM","layer_level":2},{"id":"8bddc410-da99-4be1-a979-d92d4c1d0deb","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"模型评估","description":"trainer-evaluation","prompt":"开发evaluate方法的完整文档，解释其如何通过委托模式调用外部Evaluator组件执行模型性能评估。详细说明评估流程的内部机制，包括测试数据集的加载、前向传播执行、预测结果与真实标签的比较、以及评估指标（如准确率、均方误差等）的计算过程。阐述Evaluator与Trainer的协作关系，以及如何通过配置不同的Evaluator实现定制化评估逻辑。提供评估结果的获取和分析方法，包括如何解析评估报告和可视化评估结果。给出在训练前后执行评估的典型代码模式，并讨论评估频率对训练效率的影响。","parent_id":"1b29ef55-37af-45fc-ac5f-7ba18075eab3","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:00.735924+08:00","gmt_modified":"2025-10-02T12:35:26.567003+08:00","raw_data":"WikiEncrypted:Wfo6CnSQSF8PHOia3Er6BtaX1QtqxGYGXF1H1adStbPJgGnqv39Og5xIpY1QTF8IVmXJ3I90Pw8AUeuZuc8dElLhfALVH+3iQ2p5S+VV37ssPzOW2bWkS23D3yxZ8byZ4AZO57CjRuR+5GqxUfG/nmQDW/ziz+svpRiPb6n65XoNcgx9H48dTCq/CTaRfc0uvX5ueGTofNuADsXhhjIZS+7qJZv/AKy5ZOYtI78ELm4Qvub9h9prxUT4TcorR2mumyGZ7L9sLkQY/0YFn90K2mKr9n+qT6W7IAHbKdQqeTLM7c+mtSKNPOlqwcbMfvHEInECt+vS0M4SfVik4CxJBhU8dkrPwZVLW22d932Y3earLloTS1dorVB3aYWdqC9xmXXzxOZeVTmKBKvc1ClE8tEGh0NskJWJbCYVM8eG3tOrh44CsGq0OlZM5HLN1Qdv9weuAOjF7oehMg4IWFxJ5/4zowSVmZ+IwuwR9jd/iGzbc0bFhAV+SqsySUeicDZACAX7I6Me83jMqC+PArq/wtLE0Aa3us9Hq0KPDgiIDNsp06udg4fK6JV3R6QX9athN9oc4eC2RhIXQsDrH1isfk4MCCz11LtwgiazQNn6SPIoxWKE/6juHXtKVEu4273mYzz2PFIk70pubDS+W+/4WZVrc1idyLtNfIpI2TYm9ztweiucjEgJPAzSLgq9VGIcY2d1trB+x8DNRE2rgZn+rFJW3jzVpSufZYWLSjwddRNUY5JU3LaiRYEGoASWkI24dstDetHG4njtdaWbebOQ7DLKi+t4o0fvnGCPRhPJj19dzLop4EaIXLbZrcK9lKHH3JmBQ6oht0FeTjA1npKSnp5FCNcxOhrMsR/LR8/JNnByCDlCfqaV5pvbSepxgmHfJH1ldulADQHLFVoesaaeqNEC32/lAWVV4X1QT3wpbQO0akQ3DiStQ/499SjrMI5MUljYL5BgIs/EUgwrJyLDlYsAcN1Z9Qo/YYJCmBQvW8NtW0SwIJSHWr98LGX0jt6/7bs+wysUsFTq661FDCqjV8cMC5UPhgbA9nADMDkR1R4OM1t/1XGmx8EWGbOxb1KMcXzYnFNzkfr8zPAS75erJpbTvgHr+XbdwseciEAiQ6SGR82FYgGeKTvnNt8YsExWSuIHWxIK8dOAL7/Qhse/3UEixvI7PcdwGz+4VZmuky6ZSDO43BCrIvleddM0CdgGgwB4BBpv+obi+z6viPYU2mv2j/55RsfhAH7DA5D+1BgXIGLhrHRrXenmd8a8hLh8","layer_level":2},{"id":"76d2f906-894a-4c13-9503-c173ef46d3c2","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"数学运算操作","description":"variable-operations","prompt":"系统性地文档化Variable类支持的所有数学运算操作。分类说明四则运算（add、sub、mul、div）、一元操作（neg、pow、exp等）和矩阵运算（matMul、linear等）的实现方式。解释这些运算符重载如何通过Function对象构建计算图节点。详细描述SoftMax、Sigmoid、ReLU等激活函数的实现细节及其在神经网络中的应用。说明clip、max、min等数据处理操作的参数含义和使用场景。提供组合多种运算构建复杂表达式的实际代码示例。","parent_id":"ba2c288a-2b7f-4e43-9ae7-b41234b9ba02","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:57:01.946201+08:00","gmt_modified":"2025-10-02T12:35:46.598422+08:00","raw_data":"WikiEncrypted:5vQ5s0nS48bl7VZ0wNBcV+2gD9rU0aZ2Z9gd2YVyEgC02twzxDKWm7X9igcywJoS4+mDZ7BZvCPR2S/LljSwGfwPDLD1Lj8NSPjR/FLuV2JFmC88LFeQKMY5Z+i4BLU0hh2NAwh3AXh512E6TAP255fB8p1X1FmXRGmLqUszambQCHZJvuhHb9jUUWBp/3M9E907ubZoQbthFo6ubSgMTWjN8eDeRUqfmpTpId54DQpSF67zlPYyU+g9UKvm42BisojTIgYBYwKj4xQykx1E06lG5Z35uspeknZGuIKLZrVDj60YdzKIigsO9R/3wKdCxGB4oryjK7IJSmnaOhDcaz5RT+iCrkdAWh/rFtGWizYKATa9LbLL75/PSSAoHwxgyM1S7FjfuJc26zdpXXFJbL6QClZONYF4VTh7XnYpd2jillslh/5dQcJr6ASQG003axCEla8wMOs0TmmXY4yPjZHD3/ol+ySovNXEOG+rJBjihsAQccDkKV0digHnNZQiCLV7Qa9fLRiGvXc/D4P3vBcrsb2rixO77UKcnnxsoJ+l3YReuVD6E3ow4+Dso/BrFsp+UEePpO/DIrQCwgDEYscMhKR7ZfwlP33naAuCXVkVXC3wPLqW4pp+FeWUyfIl1LDXERDJo1HVCEibNtqrcw67DaVWD3wqyoIbaUEQLRBc/jQdL2kwsa1Tk1+2X5MTA/b/62mWb2rJG7eCF6AB/ovDkaom9F9Mtw4RTgN4Pmr+b8DAZF/4YvgGcZE5KBzbfU5wd0/4Rb8RFz6k9ROvAYJWVWb+7rAvrbsA3n+DwfgF6JIFqtFuoitFta6IrsgLj8aQtbk+D+jkrvVBfgJl6aC6EeKRinyuL9hnfJZxbvpCvtebkwpWnvfxEetERVjCixt8inZ+VChWP8Dc4xZcHIVnwKarRlaFsHca5PlmM8qyU49P4VFu1wntIxn0ybjsR8/yZ6MCgdPSsn9BtbBv3xvv/7H4AU3oMWaNuVx8GefKbvKAYWBFoxznKGn2NhAS4kvP/fivaLZrMQkOquzUlat77wVKJpnw/6DrOogUAKCsuYIS8Jx7azlNo+yjAekEBFL5Wzgh6bdXeEmWV8O9lnN9gx1lLhd9G+RqVH09UrBtXhg3VD2Nd6S/6bBf+YjBt0hX/b94u858lIoUg1/1SQ==","layer_level":2},{"id":"8f2db323-46a4-4626-92c2-73f03b89e6b9","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"强化学习算法对比分析","description":"rl-algorithm-comparison","prompt":"基于RLAlgorithmComparison.java中的实验设计，系统对比DQN、REINFORCE与Bandit算法在相同或相似任务下的性能表现，涵盖收敛速度、最终奖励、训练稳定性与样本效率等关键指标。分析不同算法对超参数的敏感性、适用环境类型（离散/连续动作空间）及计算资源需求。提供选择合适算法的决策树与实践指南，帮助开发者根据具体问题特征进行技术选型。","parent_id":"b57520d1-b55e-42eb-a5de-b0afbcd5b0a3","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/RLAlgorithmComparison.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/DQNAgent.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/REINFORCEAgent.java,tinyai-dl-rl/src/main/java/io/leavesfly/tinyai/rl/agent/BanditAgent.java","gmt_create":"2025-10-02T11:57:28.890387+08:00","gmt_modified":"2025-10-02T12:36:35.325981+08:00","raw_data":"WikiEncrypted:fCH2FAX1lra90VqrbL6Woj7eXuV2CyihtqwpcafWBLadnhFI9JKuT516eqpFFNvt1yJt5JXUooAIqBL+STfFjiDRey9SszzyObUwyhLUuibibHFkBIXZS0nWiG6jMFZuDBOWc0vSkHJ1CID9oPbjqtsyqIjnEetvoTqiTrGSDprO/OSXLVTbHh3XT7ETbx2swo8z9rhpuFMZDNY7SMY/tNV4F9ef3BifVOupxjxZ5luL7IovO3CT3m+2DPeLrZg82Im0VupX5JUHXsTKZA+O2iRx/e5sdd8P+pfpecpK67bqM7ArltZdyBHfulbaK+9pcvGwnASWEvAq9Vdw63muV3lEMWFiT7zIBJusLXi4kxmkNyIbuTq5HdtQ5kL+kQHCe9el85HbWF95JAIE/FMIVmyhu2HZHNw9wsPu6GhNn5WO/n2w5Lvu8cIzpaO4nqCu0Sy5KhNqPYVtRZo3d/Gu8827fGdCRLK9a6SuBgVEFt/1i2LEJRIdlt76wA4YytH++HhXzeFHW2EpEGCllWICXKBem6wuupwhzXG0SBTI+f+GCZ2Ax7tchXAXK3YpJVu28atJWTTGI9i/nQfJexh1pyTvC902IzdZoe7ply708Iwj03U7sadLkVKqXnwioQ0gI3e53cazG+b0WCsvRUbTLPgFP7CZZc/28qGGWBqiNJnqkw3PuueKxMDHOPHMfsgISCwR01qcWyrucfWQ9nDiZGJrUDnxX/uMD8/mGJFYOpOg6IsXBHooO/roGH8RMi3cBjOhNP1uYjoNJCjo17gd0HBkMGImUnLf/SI2itJA5M9PhKbf+5bwKhKu4LY6KJ3hawLYddPLQJsj2WDbXX6KCv3s4KXps+1zy0Sx9tIij9XZCugR0+7X3fALakPvSTjAX+hUBcG//tPqSgYwVDOufdnkrQk2EWLoh5geH80GfbZiQy6wcR1xoN818L6mfgCL5NTTK4IhbvosZST91J2W+2xj5Dytz+3ES+/XYgvA08+7G/G9f1Ef0gvM0Ft1Jp30VkvY/ZuD55C2h2Dgztz7wHB28UvnPUQfLgnlkfmFIOG4cbFrhonaOX6FARr0zW1g3//rSjuh8QX7Cb8uWu1hiquF7205fMJDXNt4pXTQW/EDwfbCp9hr07NY4Ay4oUDG9DCbtjWwPTSvgUbOvMyzczaakM2SpoY22RiHwlJCEUb+yEK5Y6ixvgk3lz0IoZMvAnBvW1CyeNLxfD94zJ/7N6D252X72Te892kusjl8O3bxI/hEaL8gsSCnB8L6Yeywwp6Mv2NTCA1Z3WaJq8AdA430FYodDyMvZpZcbWqmMDDxn5g2Y7a4/cHtnt+ndPV/lRhd2GOjylV1zgLRu7qW1A==","layer_level":2},{"id":"20ae3c50-b144-4b47-8fc0-3ff6f0d140f5","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"并行资源释放","description":"parallel-resource-cleanup","prompt":"重点阐述shutdown()方法在并行训练生命周期中的关键作用，详细分解其优雅关闭流程：首先检查线程池状态，调用shutdown()进入终止流程，等待最多30秒让运行中任务完成，超时后执行shutdownNow()强制中断。说明该方法如何防止线程泄漏，处理InterruptedException的正确方式，以及在JVM关闭钩子或训练结束时的调用时机。提供资源清理的最佳实践建议和常见疏漏导致的内存泄漏案例。","parent_id":"9456a5ae-1900-4d0e-b794-4322dedeb250","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:38.161504+08:00","gmt_modified":"2025-10-02T12:49:31.655312+08:00","raw_data":"WikiEncrypted:lhNRMh5kNTxTBCRgMKyOH4pIDCkdzm8hi1k+mRAFk2HtK2gv0FN71d3o8ve58d9vTI+QKQNIyZ6iPFSmV1yRnLsVY0vKBuqoHL9+ZjSYOkAK3ULAgSNvZwuHuaoDJHgLe1IzwFe0LeYHeDoaduw8iK8bS/MSAk1qql1x0703yiZFRp6EMHnI3PEGP/jzi6SKMrs8sMGhWRK6ZTNeqBoV7+jteQUfcxx68R6CwpQ2JOdHKnCR0kri3naw6NJ65KHbneTBZk4/QdZx44xdcTHEGSRGjHLp1ocwFt0ibJV7fTHTBzlr/4rKTJmJMs6U9xY3a8XbZRNKtKdCFPaJmvhZQh+3wJ06ql6Qy/obABaBzqBvy5cj+NVCbCDsT9gUrOLoKci6oSGVhMlj9hCQsRHk1d4BvqS1dU4IkjvS5MSJqIWVi0+S24EbAza9RVfehbDt5D9VNF4Lbt5rrda4xZs8lKISG5gmHzjIVj6pbrsvV5ceMkYyh13pV3lgxgHy008H4cGVwD5nNC0HJnNx6Yzn7r1cQ6HTQMWRcfuPwMIurG+yNDncaJKyibxUcReI0qU0jVrvDGFxGm8tMAxmizFE9mUzzg6aEtEMUnUmY6UKZgJMJ+hrCMgClqwGaRMnVW+tWss2DYTa+EFll7f1sZz9GBnK/nTHy4wJ2PaQFjMP6ufbv+sf34P/jnNYPMQ//B0pqKI3A+wCxB/WnGrY5UbwaHPNkXto1CaxxEYxTXCjY8C5JZDgt5fZqcWLJiXhXdM7KunNsRJ0wKyItzmkPGhHsxVWLOeZRApZCgCm4kVC3fbLepbW8q6+qK80XEtx4nRTCqFkOnGaRf3+v01HUUPP5kzz/GCy23Emve68fFWhlEdtwaqQoUamuZ7gSYMQULcTeA9PF2JtqvsDqi5MaWb7EOBhUv0Xr/A2OeasxM+YxZroFP3zFx6/RLgZHvplEhgBu5Uv03Gv14rZ1YwoAhGl0+sDNO2v0d11aR53rO25DVhwozqk42DT8OhUilBWLlToUsVcJwLutvjODDAn47oKkED+L3RpBNfCqSLzkl4lt5U=","layer_level":3},{"id":"3ed881dc-d0cd-4507-9813-fd547388f9d3","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"梯度计算优化策略","description":"autodiff-gradient-optimization","prompt":"系统介绍自动微分系统中的性能优化设计。重点分析requireGrad标志位的作用机制——当设置为false时，系统将跳过梯度计算和计算图构建，显著提升前向推理效率。解释该特性在模型评估、推理部署和部分参数冻结训练中的应用价值。结合代码说明grad字段的延迟初始化策略（仅在首次反向传播时创建）和梯度累加逻辑（支持多任务或多损失项的梯度聚合）。提供最佳实践建议，指导开发者在不同场景下合理配置requireGrad以平衡计算效率与功能需求。","parent_id":"2140e0e3-a193-4581-a675-3f62a43be14a","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java","gmt_create":"2025-10-02T11:57:44.367839+08:00","gmt_modified":"2025-10-02T12:50:25.634498+08:00","raw_data":"WikiEncrypted:H2Wkcam9TCJMx6ZRVoHRDv05GGVMZ2HJSSvn4jIVjnQM256/G5WKg3NNs9yRlwgtAxVOqa9G0QDcSmA3hmxD4uLi6/8Nu0G2Vworhsdz0QmXZpSiFG+Q3PMACRSbSI2dkj02QSBg+GJQ7Tq1Dhp4hzZTfoJkm/EWetTG2i/sbGup/BwFFl81cIHGauDxDvcqFGC3Nf+VDIUqavqrG9pnicGmw6HWGmrFOgRy3CXoHahDzGTTE5HPfqorEvWFCdXbR4Epse53FEnnGfEPFYpHWN8r8vHNvwmBBPkMekpiOhyncXTyM5gf5BNz5lIClLQSELN5J+1nbLHO3fVNBbxijOt9exUEgC94oksNQ7Y6OHuaM0X7DuJKzA62KJ5EFlSc1GMtQVsFJXIID+Msqv8t4xwVx/JeD4Ms3a3ZaD2C4mit4/OVwhgLyV+0FDDoYfdagSjTpxnlf2irIF83uegxuaYXlFP2ixW67SQwWdX17ihWesXEVZkKFHJvDIq0SBk+7wumQ1r0bbegviZgLllnR86TE3b/aULbihVk6QZEtZ2bLGJHBjvvcyuQo+neblrkQscyfxMa+YLRJ5+0Cngb1heLPf7ADRY+Lwj5noLH3pWMIb24IBVR2FWM+WwsWp4cgPyywp3Rdpo2RUwgaBsmJBdT+CWXI9lBf8+d5oMYtohs9bBpmi5an+9hHrwYhPm0iLCH4x3Jn/dvb4VX4EpKL/wE8IDwqSeiPj+LkiF4sb9mAI2fSFCodjSfKh2zj88fuZqcEDIDTXMbtIm/Qm/mP4UYWRB2i4Ic0p2UUoqyKTkoGxkVXZ/REs+w8b4yyri7dGJ3eKbh0DImJYZWhb9HxLnvmeN7r0lpY81xLRZhtM2opPqCzesqORkLk1n3HcNb3dDUu7DlN7oVmHYRFQjswY9ObYNotLGFZ40cQD8ov2SYk61Bjk77Zuo9r86jjfL95JgdNvMncXqHePJ/V7uQ8mKOKA8WYiaIKmjWbbhHM4U2cL52GTux/abmCbcnlwQ5J4zK5o8yEPXBPSLrmpH+IaRCXdnYrAySN+qvd9aVrlm5TQJkv9jUur7vvC8ugdy84aFAgt6MGBJq6M0ZnQ+nWURXwUlu0ymXj7Lm0lXe8iQFbHMNjeub+tTg8eqdKqOEyBo2+Zcg7EdosImHB4PTRy5dNwMZwJsgbBxtFTH3rd8=","layer_level":3},{"id":"b57cac6b-5815-400a-8f7c-81aa3c9d4156","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"矩阵与张量操作","description":"matrix-operations","prompt":"全面文档化Variable类支持的矩阵与张量级操作，涵盖矩阵乘法（matMul）、线性变换（linear）、重塑（reshape）、转置（transpose）、广播（broadcastTo）及求和操作（sum/sumTo）。解释这些操作在深度学习模型中的核心作用，如matMul用于全连接层计算，reshape用于数据维度调整。详细说明各操作的形状兼容性规则、内存布局影响及性能优化策略。提供构建深度神经网络前向传播流程的综合示例，展示如何串联这些操作实现从输入到输出的完整计算图。","parent_id":"76d2f906-894a-4c13-9503-c173ef46d3c2","order":3,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/MatMul.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/Linear.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/Reshape.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/Transpose.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/BroadcastTo.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/Sum.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/matrix/SumTo.java","gmt_create":"2025-10-02T11:58:08.708514+08:00","gmt_modified":"2025-10-02T12:50:54.441922+08:00","raw_data":"WikiEncrypted:uQl4pXZyzs4DK1ghB1KG/W+7CI6qpQdCHfad/E4xSjGcG1l6ukWAnSd2Z6V0ziB5NCS2RZcOQt8Feqs2Gh1j1CBKmy07lAApBigHQIDHMyWZfkIO5Li9ARbgrQgmosTJcQ8OlWkKgLdriijb2mLbHbtNGa5g+knc1iWMqtzYW0oxzL4xpFKfucGaO8FcYzhbDQZo3GApZ3iLsZUuU7TTbIss+zMJXFFpAvZNO2WBeqB3OMtudZHhwqlrUy60AhBJ+zTiS6wvgUWhOW5VHhYqitRtuaP9iDHDZxogqd9UEIV0N84vtnRMuxRidM8FQ2HMozzsL4KstO6Cq49Gsi/05cFHw8jIrMSyxsaoUp0SNkvua6WY2IkiW+X9CmJvYiYlqS0+RIr44qTu6HNPhpmVf6YrrtbcvlrzquJrLgPjMVMRHmJZuD9qA48RPEUbPGBq8gZE9kbwcYyzZcJ/PWS4Z1nxH2cA9pBnZoX2y7XYMgC3cGvHgOJWRpnVNVC2WyQrhrvAP/9G0ZIeYJnGEqpG+cNQjNtmhSc6q39YKqGl0G02HLKo1zUoQut0Su5L28GXfAyMTVHnEXgcqmQzI7Hi2rAes4XBRd5+zsDxggiNX5AowcWFvXTii1PitXKOBwsilGzsjdGP/U8uAC7dK+zYezJeeEKTY00W0xPCBiTmrd+uI3+a039QDoTwpWNmUUpVK9ZahS6TC/lcigAE7cNeZWLpWALx65IJzv2hLG2FZymNfbIUXM39Muk/zTe9+qJDDFMMRDjQeRjZbe+GgDdNSSyETaVUkiWYSh1CwYuK5/CKofiv4ozdd6GrQFlz2AQifyqUafmHS2wnAxwD5aIt3LG8mNwigIidBmADYpfNoPryOBxTAxYajJ4Fp8BW/b6KxHfUPn+I4opXEVibcHO3owu0aBs8zfRYgP5cnkzJ11QeXTqBwjEUyiIyVgv1F80ZnWs13NPRf/HBHMdAXXm2w/wNsWb53wIn2LgvkJoIbKF52KPAzkRmdF9Ifi6ZP5HB2AdPnlDvrwy7phjTFqyoCA/kogibycMwhQDJASLlAjmfg415OvQGCcoX4f9JBhlfg/w19pflCHTPZwKQqH3EO1OQEaZkM0BioV6UvidWGqSQHZCxE/kJ6+RzQQ+JZ64DtuMisGkq2LTx1LOf2g0AcJDrVmPDJlEIQLMG5T5C6Kyy05kICYygS0p1wz/LLNJZcWWtfbScAaRWDEPzhDP5xs7gkR/aX84p9yUShbU4SFiEsMTTEV3bFDMiYY2jY9R88Jny81d/KAQ7BN0iOh4nec2ABXkYLUzd95X96uaGdhBojzF2P1azEn7QduMlzP2zShHn1sjctMgVR+3G3lDIWmwbAIMuu5Bc4P+ZT9mDS8/A1WH7qNezXNjZRr2Y2tWhZPjrAEMBPxtS9xPXgHveHd7Enuv3Tk0non0HoteEWYtsZ+SDKMbfAnCI2Lyj0r4BgbbtazpUOd8jZ6Bi0pkAglTOQkyUcJtPhz7nbmXT50TZEdPYrKA5FERoJq6PWp6B8W33ArJuMzvWQ0+vqW6HKfs+T+kwzM6GEu2Nuo1bb5Ve7DS8Va00SSGc3ezRFMcm6AKclmiE6N18HRLDQYpsZcaSnuQpBbRbbewVbzzbTOJLcaeyjdlZoiLu9/AnRGyz4nWFfviO1b7qVq2XkDh3tUhfixG2jtltAwIbMaeobT/9TB1JEE4ZuWZz8isfXO+M3/jzkbt7OrP/ZtuuckvJW2qk57Md8sGPofev7mBRLuaFp144c3H7xvoEsv7ii5P5ENEe98PwmCo5B3Q7CUojv0gLFEiJS5MW4KMbyTLYbC9+j3zSC9axV7ldDEu6WW2KZk1e1rOSCiqAvgjMDdI+qmzuZQbDiwveb5D6okVtE9j061xU6FlClJ6Shc01gkk0","layer_level":3},{"id":"6a827513-ac5a-4a77-8eb0-ddc03327900c","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"文本分词与词汇表管理","description":"text-tokenization","prompt":"全面介绍SimpleTokenizer类的分词机制，包括基于空格和标点的简单分割策略、词汇表构建（buildVocab）、token编码（encode）与解码（decode）流程。解释其如何处理未知token（UNK）、起始（BOS）、结束（EOS）和填充（PAD）等特殊token。结合GPT2Example.java中的createTokenizer()方法，演示如何从文本语料构建词汇表，并说明pad()方法在批次处理中的作用。讨论该分词器的局限性及在实际应用中的改进方向。","parent_id":"376ca184-7866-43ad-97eb-ee95ca47d2d9","order":3,"progress_status":"completed","dependent_files":"tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/SimpleTokenizer.java,tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Example.java","gmt_create":"2025-10-02T11:58:13.039607+08:00","gmt_modified":"2025-10-02T12:50:57.359014+08:00","raw_data":"WikiEncrypted:FFPvH6fuTdNO6tSZRuIpzQee5Jzk/QAgJ4yAIy/xDLGb8YCjxH59Zvi3auno/D1tfhsPL4U43mGMnenrObAC7notCWZYMLqLJIlxehSWnbBiJns9x4fQ8bsDsj/ox2LCgsiYAf0H9qowPtJrKUT+w/p+1brfwiZSK/avEv3QGJFsongFp0pWLUhOUCXcpDnyMvcdHuw35r9L3ty4TE69QfTgC2RRWX3n1oz+fqKCjGE+admwzNcJxZkwzFlMpTjrKM7FiEBOrMhgX7iGTyure8hW899msoUwWZ1qQfK5yOQ4XlMpL+wpGN/0AvhVdyRIlruOcYlYkoyZ4tF0T0DDY9uhX34ovvWFnXnM7NTkKuKt8ixijcWa/+K/sS2JwdrUUEgjVVilu0Bttt7LKwpNMMWUee89VOtIr3F/5Ostk6MVEnte1vVmNCDMg1Jrsevq8iv152bwDZqk8CmknHeYR2JGIM5bZsSxL/t1JDe+aWDDEb0RNmVjlHYtNIYVP+tvML6rXPcl+jngEllJvACMz9hZxZvS15HSLJCxWBP4umbs5ZU3dYGQGfRqNxnyU4ieP0KPSVEE7snItxvobPmw672HXlAPL6sP1Vs4XTmipqSw9HmU35bh46ZXvEMbTbY4l3wRxaUUS7QQzxaZIZvzxYzNrDmZgmu/C/o1KFYsHpFNX66tMFa8u7s/UYGeF6Lz4Ljfc/wQqD4f+XJHgQcihMnQtuQr1Jnoi6BzLqNTWxA7l5cDvZTsjQ1fZZUegI6gk9fCppnIaHqNE+7tPiUo9IM2ClN72Z5cEVfSwX8aLxPh1BNYj48DuoZrKTns7nFUW6igFXGoZiLGHyyqJa9gneSgCbrpJd8lU1wdhniL8jM6BrzvVVz6m6BWKxJfzdnNOqa5CBUJCPynxnT3QdX2zsoAIEMaV0v3cGa5WJCnqncdvwVPW0P+sod1pIIWojuEr9GrjpODYMwIxldskdVrqU3JmV36nbkoakvJ5kKYbBNYLwM2zsIMZHrD8qiPB+IqGwOWRSeSqYZrnAkAvvyFcO5B+pRMPSNrs6uKdxzzIHrZDA86tgT/bXnGCXWNsFsNFecvFmxXsuKMI5KE5uygM031tgyHwQB9RC2yHXnv3T6E9l6yRNPXDN2/LZtFFguedeEYsU9OHrOXIDD2kKaomWwajqSHFbf9WGqHwnGhS2IvKaYgeeBQb6tEJ3+q/+gv+X5VGckSomwbWfGqC6EJkg==","layer_level":3},{"id":"a9a0ee5f-a5c6-4f7b-bf70-ae25d29a382e","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"模型实现","description":"model-implementations","prompt":"开发模型实现部分的详细内容，聚焦于TinyAI支持的各种先进AI模型。深入讲解GPT2Model的Transformer架构实现细节，包括注意力机制和位置编码；分析DeepSeekV3Model的推理块和反思模块设计，以及v3版本特有的专家路由机制；说明LoraModel如何通过低秩适配实现高效微调；阐述MoEGPTModel中混合专家系统（MoE）的工作原理和门控网络实现。提供每个模型的实例化、训练和推理代码示例，比较不同模型的适用场景和性能特点。","order":4,"progress_status":"completed","dependent_files":"tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Model.java,tinyai-model-deepseek/src/main/java/io/leavesfly/tinyai/deepseek/v3/DeepSeekV3Model.java,tinyai-model-lora/src/main/java/io/leavesfly/tinyai/lora/LoraModel.java,tinyai-model-moe/src/main/java/io/leavesfly/tinyai/nlp/MoEGPTModel.java","gmt_create":"2025-10-02T11:54:33.6918+08:00","gmt_modified":"2025-10-02T12:03:03.896007+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTT7uJ85DL7o9fQ/xlmh9eNB+xPcnYebT/S/kBEbKxuNRHyqhUFlgEK/fKVVMnZaufir+BF4LLvzmW4HrrCoygqRGSYBLg5xrR4iO/x+txvkr6zM3MWMvCNgjN5thxgo4QFETxKLz+eR1xKagc2pPNAGMozV1u0OSqD54cTif0JMOV3suynsBLHv4ZyLG+pllMmPmB663sQBjKYU9kN9q+3aNR7C3Tz+4R/d6Lp747bggK5tQm8NuyjaV98WFcguNDaAd2MVxW62/iV7MrS9YrN6AwAplZSXrTHU5ascmeTwsDj7BKXotrW498iKZyBiYADPjQOQN2bcPzfSDiUxUcSipcJ1kXBc1nxWcIGy5czOlZfPxiiJ2WKquFD18ewGlz9kGGIZjNX99sY3kmUeP6NjotJTYgigwW2Yd+ry5ixQb2CfwaGa5MoL3UkQaF2sQJphRMGrIerwCxpPEjmdD0F9Y8R3jX7v1Z2nE97eTGkKJbSn6sa/Lo2bWM5JZK7PxCCTmnJVLgRdckWn/17h++/jlSPZJVQxeXDScvTCt5s965pj2IwcAVNt1GKIsCGyJ8X+3tbAwTxkyhxvcXzAvF1Zs5mXL2FeEuvhQyLbo1+AvArlG7fK1uB5nlyoJ20/LnwBEe1T8GoOSNAJomlnfOEs+ak4rDv0kIEYErEUnpw9F/tiAi9Vo9/ofPFxaap+RTn0kDSAnMOLYxzX1RL38RZ+Mrw9m0HPkLDDzjobyjx2B89lkUMUepvlkpI89YApmAqhq9KqCsAv5LZEF4pc5qOvVWD2XZG1LxEwgldtXbRWws2saquCm2IlekP48rKV8Js4ZbPXWSfDRjOeISdK8PmQK2K4g7Pp9QSfk1iNFjR0PP3kDBohxYYNmMUCr15kM65e7X0WPn/BWF3btwNq2e0tZvimEvp/anTLqSVxoKqYG7zfXNbq2+wi6lCzhbSJDut8BBZjktXZrOPJhu/sIZ+cXY24HTmq0jd4EX7xvNl3mMQJWpitDTfAwmKk0ByXOViuDkSe78l/2IRoRPjPgc39cNSyGYUh5BmuH/EUF3eiTUTnNaTMUkGuDZqQhiN51OSe6qxb2pbcypFsmanQwxOtNBHa+gVTRaUOBNGcDrcwVnw98qEd/wYSAfpQG3eoSmgVdMryZnfXaluz09ERcLfxTVw3ZRVWS50gM2S3mGnquQC3Ec9QlGhZvSoogpjVTObOpYF8uNYPSjlLgbxnajQofHDfYRwP9HSBbZASIqdusVmKym82pqV2TDL2ylhuo2X5IeKOeuDLN8bTFr7Q3Brxb0jzvxliYnEn+lrNQee6YTYgE9vOtrD3OwbE8fx6rL04KEqabBj0Ut5nTTyrYK0qxZRnInML/v8sD+TUGpLo647iR9POxgD+uGW0x2CTDJrU/uGZjtS2925BrHizpXmk3qt6C7kw2IVD0U64f83zo0lDGUwFM1vV8B7S8ZFOZBpDcz5ow8jTi4iYv4wtJTt6hANfzuv+mA0yu2+zHL+fSl"},{"id":"a093cc06-a5c6-4877-9ac2-aaf0048c48e7","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"智能体认知模式","description":"agent-pattern","prompt":"创建智能体认知模式的详细文档。重点介绍ReActAgent的'推理-行动'循环实现，ReflectAgent的自我反思机制，PlanningAgent的任务规划能力，以及CollaborativeAgent的协作模式。说明AgentPatternMain如何作为模式调度核心，Step和Action如何定义认知流程的基本单元。通过AgentPatternDemo展示不同模式在解决复杂问题时的表现差异。提供模式选择指南，帮助开发者根据任务类型（如需要规划、反思或协作）选择合适的认知架构。包含SampleTools中工具集成的示例和最佳实践。","parent_id":"25ce1389-fed2-4ea0-8024-9d54af4913d7","order":4,"progress_status":"completed","dependent_files":"tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/AgentPatternMain.java,tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/ReActAgent.java,tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/ReflectAgent.java,tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/PlanningAgent.java,tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/CollaborativeAgent.java,tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/Step.java,tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/Action.java,tinyai-agent-pattern/src/main/java/io/leavesfly/tinyai/agent/pattern/AgentPatternDemo.java","gmt_create":"2025-10-02T11:55:22.114792+08:00","gmt_modified":"2025-10-02T12:21:12.760822+08:00","raw_data":"WikiEncrypted:gTiQk8pR90rzooKLiaXVuQGgFmW+AF2jRVqDzo1ltu9CaJtDdqaE8WkxRQowJX07q11QgHXaXZgFzCPGjFGq+GP6b+TmmEFY88Lv7nGDRuF6mzUu/bephR+2Tds0ixi8ylmP2Z37B2PC7bHNdt1sLqT1wita1d3eF2eHAYfjqC7TzKmfSj9g9o0/Ad8vEj1asro9gjSWk0WAXa4+VaPnDXMk4HYb0I4HryVHuv4fp6raRih5WPbfISwx7S85k8x+DFiJghAjUkItfMZZXUaWeQpATDsbbPH551KaG/O2IRrFYgM8+QiXbjZ8ag8cC1+X4RKyaXpmqhQy1v7tr0TSXn5SLPsnqIy8lw/nBwwbhwcrgcw2/fo1VIv65g7StXirzCQzFa+2SzcfBcpPfKY5mVgUEv/yl5b7AUH/qrNk4hEdrRLa/eUCbtNVLbcrWO2HNJK5LtOSBdUSL8UCqnk9yt1e/gpX34cBmQpcCmjt0KwDgA/YS9oEii4FyUSagFOEhag3Gew18OfTCU69ZTpQhjOwQCy3PgOhEufkZlgDDnyHO2Mk8aVPb54xk1i5RM1CLoNeb7+/PpAuBMGPda3lrodyGF8oy8apojxN0B7qtJVjmpihJ40N9Yai+tX7LnYB+9aden166gVLfuKEaLipRpCNXhFCH8J+lMg41aCWQbI/6zBfPOpWAwKVgLveVRBJnc0+oBTR7eU70oOEClfMTS9if8xFIThl1d8cDozSaGoVaJ16EBCjdP5JNSLMCGr5SQ+dWWFH/QCp3Rn3wLIZng9xPSBoWTM00nD9NTn8ApLVc0J7OuRn/sGmksazAxLkHVxyCJ8nHKKnXRbhVCRVgCkAR72Gvf7Q1gIE0EiuQSSPAy3fh7dcJyqm9qkeSA4+lCUw8URKRH6y6WoAeIoOvPWpD/NP4nvvZtBNV1t5/sCtFeBxst//8C5z0ewgFLdULcmn6/aJjzWntDXTSNUekFYoxB8+lZQZFSbYekDEiQ3KVv/2bjzUYP95DQlpoToM35yXpvvATVYOENUU4SP+8D3Uvu1Jr+X0gFEwB2Ux1Sv2bRDGYOUtWhHN9rYPtzsstRFHRxwtc6xqHTrnh8c7ozNgPymNvlkHaQHOu2b4voN5rIx2s9FxHD1J+fU1aRI3mpfXx0P32xmyTnTQVfHGj2kkYltUg9uZrMMZMI1B7Lw8bUYV5rYzrOudS94+VWby6puKXkWPE1FjmvQy+AgiCQYggxBXCdIA+z1Ki4DJ7vMpaOrgj2f4PJU5DutG0wzZCQHrVs/uzsFaqR63BKUpxeQmIJq4rO5MFl019jujHn0iwGmftyJxZL7J4T1HO2igem8iBhNk8xQavc+YjHwd5WYbYp7J9JBvCT+67bIeDJGoB7FlITnvMeAcmhAM9arWDVAxeTxEJstp0O+F8LJuG2kRmW4YIR9moNOJvBmfr02Rd4GOT7lTEHqFX168ARvybMJ3bQjG3H+om7cmODGpIRnv+qVrVdSBPoGjDknkRwwCuiKJM3TBq2SzJsvqVRe/2j0mhv22XIHWPy8wK3/JrxVv62yCIiwtqTrghsCt21uTmAxCOnrUAExuwQs/wCDJlR6nQqilxJLmhTkT1wOPgJ4SQQtadXwgvL+Zl/55QjsO4ZwRYHK2i3NBOzSSK6w5PCiYxKm9FMQT9Zbkqkm3GIY9FYwnwP9RedyBl8WbDdK8r2OLm8W0ynl1c8CH2e8tZcy0+wSsGDzFyXjxOGATcwZVaxtRBR5o64onNWhqdJlzGl1jPkQ1Lv/yZHvAfSw4RIBeMAIro+JcMWKwIxb81AaNs4Y1/iKIcKv70cgtU1J8lXzm6F1kdArcUyzFyILqk29XsnHEu2PXsTrt+fsoERlBNAiuP+YT5bBPoYVzRzICbxqN6c39f2XUGmvVQlJB5n5qwAArF5RZxCnpEs73a+pKn+TQvqgOgkwZ+G1VZxOFLpa4czwXzcmzNw6apGUX873nojKEZG7XmAgOw1KyIjYLunMV9qx+B/uEVYEVlKVqyV+k9QsF2vWqR3kM3z9CNersaFNiNjftJWNF4IFgSOAfu/jwB/mJnEPT3sU/7Io/g4dwvvf3qyU3WYGXWfcLuZgrFniWP22qP8PgpTSSwOZGQ1q96xrTdKXGqakzpfUZvZpcBgPGWf1Xm5UbVezB","layer_level":1},{"id":"7429b154-3f80-4955-9b8d-4381d6a5fe88","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"回归任务示例","description":"regression-examples","prompt":"全面解析LineExam.java中的线性回归实现，展示如何拟合一维线性关系并可视化损失下降曲线；阐述MlpSinExam.java中MLP对正弦函数的非线性拟合能力，包括网络深度与宽度对拟合效果的影响；说明RnnCosExam.java中RNN在时间序列预测（余弦波）中的应用，涉及序列输入构造、状态保持与长期依赖建模。强调均方误差（MeanSquaredLoss）作为回归损失函数的适用性。","parent_id":"f4ba2b64-d220-497d-ab20-b4d22dcc9be4","order":4,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/regress/LineExam.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/regress/MlpSinExam.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/regress/RnnCosExam.java","gmt_create":"2025-10-02T11:55:51.509957+08:00","gmt_modified":"2025-10-02T12:20:08.473006+08:00","raw_data":"WikiEncrypted:KD2WMSHwAEp/PTzwbI8PY5+oHZ4pcBf9ClCC3hWSsEYQE3xxO774HY6bXbTUZyda3DmlNygqj+18SZF8Z8KjTd6MkK7ITNiL2gLHRvG39bvfVAFHEO0Kt8yznf++OMu9opzOXdBF9FiniKQXdf05QxRdSaMXMHZkIBsyNRqDQOu8lXTsQRi4RYimOPwfg4zOQJDuJzFhq7xidKV45clTboiDsooNdhu4H2mJHxKu27H/IWYal1AoXNSZRkJk3AHVUJh/XSokYpBgqRlssyLZG6nr1dObtQSctzOqMdfJePyGMP140oPPjDbj6oz21ebM9DaaPdPihU+w9C1hZbwE9zSoPT8xMd+Jc0qpNMI7BUACxAryet9hSr3A4UjTDtPSQm8gmIS2rfyHR7v5j7PXVXGaHjBD/MMPI1nHB3rjCmPmEm2b+2LoQxmz/HrKmvnc8etWDT5bpXmAxkBagiCCpcQ/neKwPuqKFcozQsEcbHlNeW+7UFcLCB5BZUL+pEiiaCAB4DF5wLbIjnIfVa1Yw9U0c8xaYjVidovaQSxdXjbup1dn9EwrqpX0pXD88GbHVkbUidf1rTVtW0dUE6eM5T31JNQtqE3L+j8iDPh/pzyuYRiu4tZAGaBflHVlcSBOs0XcZXsKZyEhEr64jDuBR2JGOtkj2GrqCkxZQ/gvqPBH8oxZ4VJ9FrliiXeyOq/ddfHYVLGKX6SqF4F/t/3pSBUAg4XCc17M+zyR+waV9rHNV3vGHcrJMgDTnFWCn6pGVazlJfD5X3WK2ErKU1kiJUf+AOfwyFA6M6kJmjLyOFZLzW8R/rQWY1Zkv/wfxYF3QjPZkhxrJdCH6Y4Wh9t82vLET19LTPdSuh/ypBwfHgfKqiwAcKlJKMOPikumyykpCEMslMP9OFgHzmYqMWn7V0+0ZvnKTKPfsO7euVFhoZxXZrGUTCRSI8TlPQhXH0w1yXLH0jiigM5Nr2P3WqIL+Td3qN7GE/UDejEUu4lgdZfOc5EAjsuHf8f/9YRfQLH8lU02rxu4XqNOb44ZKjLMforMNsSHgv4oJxAFWHpQcPy6If7Gx/HONkdu1NniW6zdVdK+QKj4D+zChkj7BfLk4dq5YS7/98lOIC0aG3izHP813/yLf0mfm3N4I4+IpLBiKjpoc1agiVX4jas05ZqW+k+JBOFJxziFw81nuZkwhywI0JIsyn5SP0VQIVZZxWJY1INaQo/yqVaIgm9Pzt3AO52soXfn9SW/fcJe2yEMUBLrrn6+JAk6pZ6T2/MYo8bW1A2romEZmfJjZP0ZhKHxluTKA070xfXnAgEm3GPPOtM=","layer_level":1},{"id":"1baf7fd6-145f-49dd-a8b2-7f5f7d6edd24","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"Trainer - 训练流程控制器","description":"trainer-component","prompt":"创建全面的指南，解析Trainer类如何组织和驱动整个模型训练循环。详细阐述其构造函数参数：训练轮数（epochs）、监控器（Monitor）和评估器（Evaluator）的作用。深入分析train()方法的执行流程：遍历数据集、执行前向传播、计算损失、反向传播、优化器更新参数、监控指标记录和周期性评估。结合代码示例展示如何配置Trainer并启动训练。重点说明其与Monitor的集成，如何实现训练损失、准确率等指标的实时可视化。提供高级配置指导，如启用/禁用评估、设置评估频率。解释其在分布式或并行训练中的潜在扩展点。","parent_id":"ee92a8e4-3e38-42fa-b11c-7b6ec6c143e6","order":4,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Monitor.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/evaluate/Evaluator.java","gmt_create":"2025-10-02T11:56:27.902666+08:00","gmt_modified":"2025-10-02T12:36:48.880158+08:00","raw_data":"WikiEncrypted:Wfo6CnSQSF8PHOia3Er6Bo0ymE64FCjf0XIiMMUPBJKd+Pi83H2NWsiy/jt0OueMidRx0acFGvN80GvDuhRxrYJCKSwUhnVIMN4WAVCVZm9HbZyKJ9vbw/cB30UF6I4TgU7R24XZzPjhnfwhYc+yWETkDz2tcOdzCN7wV3z3Ef5K7kpR/SVTvYxTtylMGEHtPc1dUwSPH8ceGkWs9hWbDi8TlZbj+sg9FXUpsp0Ifk5BWIJ+bg2JBo+oRRERevM/lABQTTqMu4Mp90r6CC8ZDZI6bzfgksskKW7A8rJXd/YdEFqWLC8eNE5JV22uLIvYU+Z48QevnM18WLQUauVkRkvI9OWJMK9zYzpGtDVH1JTozb1wj0i54SgezUETpiokBj8rQD4cDONPt/u9yHeZYHpAvUBKfUiDu6pkRVb8gcb/hMnfSAt47NXNHCrTmJ3NLotD8RqeTNI80X2iBItRr3iATYnEMZM3yoKjPR1k7w4MDOii+9xQ+Vy6yrXmyvSbHNKPoX9Ocu3dX8sZSVR0QrrWapqFhm4HC2b5Jfsja2dGyNy3ndpGVH3pWjhxqUCDI0zrxejfeB5mHv+WSvIXlsB3ag23WpNZjDfXa5jdmFZ44R+D1C2LPhzy0sWAw1i3PTlGE22cSPSGxnVgk8UkQsDi4+KsZ199lo9tbzgizU1dT3MRnw0cyNe2qrYKiJQ5SQDcAkgEJSnVtkh8+HghDNwvovVnpF19kxv5syLc/7q5CgRqvzzymnxQlTJH5fkyDcC8yLduFHLqLaLJC5dBnsVHnR9ERcbYvMOasRyhvKC2JdpnrGBtzuDEe8+3iWyErpPpPeZxLDL/XKlBz7OxMoBFeDUfPD36eGRe3VHSiVL+eZTJK8YUi0n9caZeF7isR7G0KJivjTp93WT2hFRrZVS5WyyXpIFz74gZMduQ6zA6VWRGLtDHToeIXl5RCGRkysAZOhJBfHVFJxF76LgDUKx93n8k31AjFf51VTVdOw2z/UPOf/On00TkUTRnE7pDRHiTtV5GHrs4wS7s/2sjET10PfOKnI6g72d77yEZ1gQQ67jx5FC7Qi0unD9+aamko1Z6IeMZn54AS9xIJW2cz9jIXh3bZgvC4o1mzzyjKipul2S1C3RLkL7L9A6o6Mp2BjkBZs6tS2AVYmnWcbtW7SaTtpPt+wBZXmBbbBvcEfQuc1plfOh9DJ5iw7dM7ypLDgGv/hI64hsc4VHFvwCdmFOQ5OhC1JJY8E29PDImo6KwLxJbB3tuR7z4KUtY0VXSBFAvqJRgxBU+LjkT/M+PU3bZVJfdRgagSLo/nA8XFqVUWeccwZy6pOsinUZBwfCFA9llPUL2EAzP3MUz6dtk3sji4IayKUBmXOatTdr/lWnZEVWN4rhkBx9jmyKOhCtb9pirIuHuv0W97MI1PORgvVcYSFCN93sZVQloXlSEnpI2sWVnGwH48t7+krlhC0aIwJ8OUHGiJRJ6R4kEn5MnwfCss7G8PrvZGN4P6MQ5RPv1W1TjpCfWt5gi/B0O2sqR511++evrAaTk0ufSmU0sfa+adA1NIjmqImJidhcKzjTpG8qQvlCnyO2NNM3P9iUPKw+NBqTDBLPptl42SE0S5WUH2kO5jE7XEINDDC5v4NQ=","layer_level":2},{"id":"9456a5ae-1900-4d0e-b794-4322dedeb250","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"并行训练管理","description":"trainer-parallel-training","prompt":"系统化文档化并行训练相关API，包括configureParallelTraining配置方法、isParallelTrainingEnabled状态查询、getParallelThreadCount线程数获取。详细说明configureParallelTraining如何动态调整并行训练参数，包括线程池的优雅关闭与重建、模型并行兼容性检查和配置更新的原子性保证。解释isParallelTrainingEnabled方法如何综合判断并行训练的可用状态，涵盖线程池生命周期管理。描述getParallelThreadCount如何提供当前有效的并行度信息。重点强调shutdown资源释放方法的重要性，包括其防止线程泄漏的机制、优雅关闭流程和强制终止策略。提供并行训练配置的完整生命周期管理示例。","parent_id":"1b29ef55-37af-45fc-ac5f-7ba18075eab3","order":4,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java","gmt_create":"2025-10-02T11:57:00.737783+08:00","gmt_modified":"2025-10-02T12:37:44.711304+08:00","raw_data":"WikiEncrypted:Wfo6CnSQSF8PHOia3Er6Bk3VtC6UNtBXyxuX4iogE6BEU8KQztNwZ4BH60Nc+Y4XSZdzHZx6dI3sW4z4W5uy5xntefKxh7KkqmaqBambvw1QepHPvLsqyzp61teIWXTkUFwM8uv6ynpRr2rSLaYhM1kau+ZPoiWOORlrgd0elDNSnQ7JasePdlDBZEbWZ/Lt2VvwF8bsxNP8oV99yBqLYmzILiHbONCBJegshik8x/spK/0gP5bPnqZEuDhuVLQRQDwB5iM6VWGA4gK3uRuyhg149NdGpBvzLMVay/e2+pTbgS8/OPdStMdNknLWZ/BBC+Cp22rc+Y4n4dHm3KWzOpOtMBqINKlwjViUoPNPgz7h/gdFTqjCy0RMo8ugLcYYZK1nxKDOzfX3TCwz29Mah418NtnC9ddvpQ2gFP5V3u7ObS5TIHWaqSWMntnlgtV5dyAv4VGBW3+s2aiCl9wIspYisYVDNVIsINurWryk1kejP7OI3WnAwQBmtcjDrYPCagRZxEIz7tu3Eb/7ptWHOGHf4y6RK49m3hQkkfl50B7RobJNXDkNzGcQ/EYvYojHOWhCFuQ0xjSYW1mBncu4YKGtGpJ669dIjeIHLsBFKFX2u/uxdVCUpigAGVLYkzoynXlWa3Tk0hdyEK/Uq+8oG/ghunxTXAgZFrhwXc6KqRLF9goFg5DTFwXjywMK/wayv3Pr4a50v7VCmyxckz46UnCobQV1ZMDHEh3qkxkSpnNU9/YiA34RiHZCxq0c2dZg4p/OeE0CqJjJk0yxg2tijk+u5Y33Agwk4I5C+34XC7aUXiV2dw5Lz4D9di0eCpzEVBmSkkTRzuMfKE+KAmxozDGN+iPYQHBRBeo2Q4W8H9alTlf993wwsX9YFIms/tJECQYY2vlKhogr/2VNgrb98VcHuThJQrYS0y5nCLuSqhZtBhQNUvQl3bVR1pusGayQRlLLpnUbx5b3NRtjxhae+LTZh5jRA1eg4NZkivFPlFJNfoXalr9LBdtu1g1PQOEVD6K7aPPLktrONHkM5zQVnE3wMDa1WLEH0Fmma2B1PP3ord5o3uT9rga9n/1gwf+s4yOI6pzW6+G0yUTawKJNo82fBjoLApcpFPpWxxYfhJF9teiWIY9U8z3CPMPON29WqRMImXKmpBdERy6++8s2QxZuMLzUHt/JcdEu3FkNSY+QuXv+gueAqP7Aigh0qI0Q+yzCS1q3rOc49YHw8xpchX4CviiXsI0KPCA59cbEZlr3xKnUjuUjr54v+OtAU1mGE33D8oFSIrxZZ4yHaC1069teqJRBqQzRZizwpBtxbG5jp3xYAKL41+SIJV3EqSbqsu8MSTJaXMNHtG1xfYBT5nXGeZ4rotd5Amb7l41c9w71tvXqedl5FoxN2i6yBaTkyK091Banx9QjX8GaFn+QJznTXi1Tf274ENRrkrPpwhM=","layer_level":2},{"id":"b2a4c011-8196-4d12-9b7f-001acbf7c0ad","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"数据处理与归约操作","description":"data-processing-operations","prompt":"详细文档化Variable类提供的数据处理操作，包括裁剪（clip）、最大值（max）和最小值（min）等。解释clip操作在梯度裁剪和数值稳定性中的关键作用，说明其上下限参数的设置原则。描述max和min操作沿指定轴进行归约的计算逻辑及其保持维度（keepdims）选项的影响。提供这些操作在强化学习奖励裁剪、特征归一化预处理和模型输出后处理中的实际应用案例，并结合代码演示其对训练稳定性与收敛速度的影响。","parent_id":"76d2f906-894a-4c13-9503-c173ef46d3c2","order":4,"progress_status":"completed","dependent_files":"tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Clip.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Max.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/math/Min.java","gmt_create":"2025-10-02T11:58:08.709007+08:00","gmt_modified":"2025-10-02T12:52:33.463154+08:00","raw_data":"WikiEncrypted:YZI97ep9QXDPfRNDXs4+JB/mDVjGuNi52yJg+RkXm7bJ2so6utFOtTc3f4clcCfK9hSMtsfyQ+z56268cZ03mXjA84sT0nqK6yIwBpEwsI5DjuAc2xc5tsJqbkuOMd33uEZHO/wD0rBjOoI3JACftZPXKT+XHCn7q3sptdAm4STiV4SvD3JtqKpoEpL02MVOEQ05T1W7tCTTCRGgP/cUuLkPgxEGq+g9BUcpYQMQTDf47TGjfgjy+3iWMrCKMvY0JyXLRthACsV5UuUh83Cd6AbODmdEx2m7qiWnRKysA9wBvU84TrwY5g9/Zay1uLpKz0YAYjNq1q019VAgYLC72jUunrSAJt2PufdBjvu8G17MOWBTE09AVT6xBnA7TRdPNNgQtE6u0N3jezgaNYA/CgWfQhmK7mw8DEhCwzcLl/Bn4jasYGgEZXuw/dCkqeAwQi2EtON52n9sLaNDb8otGq/0kZZUAQ7DfE6+f8/INbQ0tlhBl24CJOGP/aqlPEn9zBnCqgbCC7uEq7BOQe/2fPAwBMrshWnQgzxyxQAWjIZr+MWxwiLRvgOg8wUa08i8zVEnA7oS/y0WovFOZOE0C+B6b/T9fwdplHxGe7+NtAGS/oLzEvKRABWOo969JKzRbbm9CYcwBHEhiKyAHKz8K69MQbvb+Zndr2yxfRiLxJ1TDoPOsMvnCj20zFBRCKDM/jIVVR8iQpFmeoQX9VuWds3qZ5Ds8RcgTK+W7zSzwah8cmDj8yVIOptp5l8B0Qz1vxzFMYPcgYHdijWED21XZR+h+dsLzWi03T/cTNUWvCK/jDWi9AO21acd/iMNtvYNQCHOkGf1oaQKUqJG8FFS2CRIBxHlVRDfRdbN/tSKlthJj1PDDpSFq+wYfbgq3FBi58rIvJPMxjYSnQPO2vpZJhHxTUHxrnH6P6mRDLVktu44eXoyfjTbnaMX+1wEyJs7UhayLrbia8kq14STZGXZ3NUNRkclhTcluUWlvdGFOw8t7VakuP3fI6bOqMxQF7yYnWrX005ZdWhkKQ86m6NxniiIv/SM83jM/5nwxvMT2XLDFJW2H9uoDZerHnuFt/xvRX/IWGj9/GVjOLT3rX47N+bUwf4FCHQM+hZRalEcm6cG0ag34JA2Bu/y5BOPElGuKKTauEAi13VMoX/qIhOm2/As7mclmekLt3VxKOBPklCM1/ewh9D1pxnnJ8Z4i67ikSy4DClnpLe6R1/NZSM4AykOOKqALWrJV3dvB7nDUzOZDJ44a0X/y7aXf+ww3wRhqXLvVe7htFzNfGHtJT0uEz/fdX00VgrnIJMX+jKECvT4ihYLVEAPSEHZUpfZsqjwi+Xiduc2+DO9rVrln6dem7LwiM3MqYmurd7gFyZgoGA/OH7sh+WDC+IYluIrvKdcLlogIZcf1emvFjSJOE3TxA==","layer_level":3},{"id":"c6a82ba8-76ee-4a4e-9f4f-37d0d9849806","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"自回归文本生成","description":"autoregressive-generation","prompt":"系统阐述GPT-2的自回归生成机制，以GPT2Model.predictNextToken和GPT2Example.generateFromPrompt为核心。解释模型如何以当前序列作为输入，预测下一个最可能的token，并将其追加到序列中循环生成。分析输入序列的预处理（如截断、填充）和注意力掩码的隐式处理。说明生成策略（当前为贪婪搜索）的实现，并讨论扩展为top-k采样、温度调节等更高级策略的可能性。结合generateText方法中的多个prompt示例，展示生成效果。","parent_id":"376ca184-7866-43ad-97eb-ee95ca47d2d9","order":4,"progress_status":"completed","dependent_files":"tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Model.java,tinyai-model-gpt/src/main/java/io/leavesfly/tinyai/gpt/GPT2Example.java","gmt_create":"2025-10-02T11:58:13.040219+08:00","gmt_modified":"2025-10-02T12:52:18.029264+08:00","raw_data":"WikiEncrypted:JdUvzhpu6u3+2SpJ8FEaTgFf62JuJF3HitwlWhhmhAmFoX0KJpm3Y9myHON7To2xLSvRFaLQQNJISmFHXuvz7sVrWBmsp8FCdiJZaY5o/iqPCeDgf5wtzhWrgN0gMV1MEmxRu61eO9hOiL7wqBehVZ05VVoVUy7UlN7/7e+mfdoZKNNnFUCbC5KmNduALxOmPSnQEmGGlV8lHe7TSFrBfU0FAHHgkR6xle/AoC3jPvd2uZ8J9QmUIpgU2AXi1SEZcwKuIXueBo4ZmYJXgTcuYbKGPZyZHfRxTJjGTmCkYkgYHISvhI59ZXcNnZV67N4PCLNBiRUkGrb0Vp78Vk87qkxXWD05+0cDJcYmOqwv6gPdnpnwO7gGFV2uk14tqyZIEJrKFVPo6NqaYbTGV3WEYB15zmgf093j6YKr40sc2TPnN12vtDtCkE4WvQgdMVsQO8x6WYZHTErz9pLJpMRmbkkekjFWS6jQgk9hB9emJ5bQ0i2Ml4MGK0VXCNjLOpjZe6S16+jAlXRk/b2eXurQWmfiaCgg5vABWWuaN6XCb9zO6ZgSBy1KNUFNbnT6490fJZ4x8l2EYjuXWXmLmfkQuEobFGohKSi0/3wc5kKqropz5Zaeb9FbLpqheOVzp3tFpypq8yEBJE+8WUcGVnBvKqM2LSc5p07KBSw1LiSr6jWkJhWjzCAhnVDYU2mAlIybawwApp4OxRwPvO7AYgBy8V/cM0H6vH8mYr4DPq2NscixNnFBadwN+lPYpgGjdV84LdJI01IZPlW1xlDz6tkeqBrpJqWfzH+Mqqs7ABvKw9dAh/7XskX0zoecVDwa+aZnuX7Yp/CCRQPeOruwYvVHjvVfBFByzd49luBVyPrAZ4x6XTsSboJacR6ALM5Nv5Li9KSq7LwXL78YtlkMjNmZPrwRLTR5G0hYdHVrA3PAHRePu74f7sv4GxIxbH4JjnsnH0rtr5YfuPUHRirs8AwEMIZZA3y+yUoyYLLZGR7WftGJ+J4/1JBiYuzCkOJTkK01RGSQ1unc4mXKs4DE15o1+4rm3YJq1MCtA/Pc+KiU5xVxNrETXjWRHigCpO8JCFIzDQfC1BhvTu/J5JP9i+SKvfQuA5zQoUblRBP7wunm+hW9aihVPh1r4a0TuUxt53bv8rPya1Z8LDkxwff6FCeAdS0cY+ch3sqZwrdSC6OeB02xkUSgItjaezDq4QChGTES4W0DZ5yRxot4sVLvKZFlOg==","layer_level":3},{"id":"f4ba2b64-d220-497d-ab20-b4d22dcc9be4","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"应用示例","description":"application-examples","prompt":"创建应用示例部分的内容，展示TinyAI在真实场景中的使用方法。详细解析计算机视觉示例（SimpleConvNetExample）中的卷积神经网络构建和MNIST手写数字识别流程；说明自然语言处理示例（GPT2Example）中的文本数据预处理、模型训练和文本生成过程；阐述强化学习示例（CartPoleDQNExample）中的环境交互、经验回放和DQN算法实现。为每个示例提供逐步解释，包括数据准备、模型定义、训练配置和结果评估。强调最佳实践和常见错误避免。","order":5,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/cv/SimpleConvNetExample.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/nlp/GPT2Example.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/rl/CartPoleDQNExample.java","gmt_create":"2025-10-02T11:54:33.692812+08:00","gmt_modified":"2025-10-02T12:01:56.505266+08:00","raw_data":"WikiEncrypted:6Fw6zeKwEGma9eKCQx5Pd7wKcXJD/1TDGLxFiIM0I0A9lNnIdkjn6lExr3yw2RQl/ZFhT33aZ6NAcnld699YBuEWbrFrxXMkOaqKuRdAIap2M9HF8nCLWmX3B+9Dopn5EJgQp94OLhwKQlfXqVJZtGrYLOdiZSGWV+c8gxGy6VG7NursSl5DfwrvZRvJbC4avv5JfTGaTeFa7CGYAwTEKjTBG/DnZVXLgJTuSX+zGsmU2KoucmuMY0lBQP5QgiDF0aLipwU6SCr6cytqfWP+aJL+k0UE9KkdwNMYlCzqyessMGpCoN+i7ZFhtSQO2oFGMF1w9crIzTR7b3nmNxSNLicW/bmgmDsaR/SNWxntlzeAPZZrCNGQn9YGAyW1c08SJT37v4XN/0/yIr6wCkvHTOrl2bnNc//U3scqZN3uHscL7wqXTfND+k/DvTalsj3ijNBEQDV3XBxOvNFMgVNOQ3Y1bPEjBZXrYn3FUKMTLuxL2oefQuYifp56aGsctC/NTC/zosHMzPRiQM84vF/q7mwB51R1dwlqzg5k1DKr6ad1d+mbCHqsfJKN5LjYpgw1YPS3Z4dabv84qiBbCTi+WsGpKfcMWEKSTrofrpi/a+LOtLpaifXLlMXSMV6AVsRFmk3QLdKeAqMP3LDxi9RzU1NAFeGpEdA3jREQt19Vq+ahy4lsWuN+lRfvWXGTcFZ5QxHsC6AHYJT0B7rWjq7XTs9CYAyHZEBg60a+P00hJu/+FifHhW2Rx0CSLgJguPoe2ax67ZnMnWvrUbiWukFdXuG29UGrQ4ydxP+p3lL7PffFcpRKuQI7JLwhWL4w7+IWC5ZFvfsmUkg95xvZDDjSR4uEJhdqIMSS77uh9VkUuPqRFCCQdBvKKXqDih726fhpou/b18rHx/RSh3lTRW2Ljf9Dm4c3ZKKonwvLQswduNIeKY/IObIFvZ1OYwTDTEN549L/lyfynEvKSfrGYvZFOA8/w7AaUwH24NtSSR7nquvUze49T/pnHqeIlj8ewyFQ8olky6jgY+t07NShT1u9xqL4nfAxH734/aX1/mwi1cquDNyXqeJM+gaWTMpR9J+pY9GWI4JfKgel4k6PyALUmCf5cvuxo0LrGRnp6zfGMoIkJG00wwALc5QazxIO8bdRz9aPbNeBl5vO/ynaeLiphbhNrTriuFuZEYigG0Dx7iwTaEfVcfnOFlmNcd/UhaQU3kvXZUABtM4dcJQUOBjkjbH5dJk/TvUXkIPk0Dr7Qy2EXcRiMcHzbnmSSez08thwkpd2Po7tlYkgIee0tABQ1RRH6uiCheHdX29ym6Y9Gj3Hv2aWGpl6D7WvXsCg6PHHoMGzkm6sR8w/C4n9LpuKkoY0BBA5OGgaeZbPadQmmcsD1jdwKPwuE5Ms+p1HN3CwDH6jDpnumzQ911JSxtUw967wfGEqfHNtLkJC/uHtsYw="},{"id":"937dee19-a292-42bf-bb25-66a5983c020d","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"高级特性示例","description":"advanced-features-examples","prompt":"深入介绍ParallelTrainingTest.java中并行训练的实现机制，包括数据并行策略、梯度聚合（GradientAggregator）与同步更新；说明MonitorExample.java中训练过程监控的可视化功能，如损失、准确率曲线绘制；解析ModelSerializationExample.java中模型序列化与反序列化的完整流程，涵盖ModelSerializer的使用、参数保存格式及跨会话模型加载的最佳实践。强调这些高级特性在大规模训练中的重要性。","parent_id":"f4ba2b64-d220-497d-ab20-b4d22dcc9be4","order":5,"progress_status":"completed","dependent_files":"tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/parallel/ParallelTrainingTest.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/MonitorExample.java,tinyai-dl-case/src/main/java/io/leavesfly/tinyai/example/ModelSerializationExample.java","gmt_create":"2025-10-02T11:55:51.510976+08:00","gmt_modified":"2025-10-02T12:21:12.556676+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGdzeBSjz3SPF1pdgRQJ86vR+86VEXLpfaQLGR9dH7o1gSINr4cLAqUsO5LjMvh31xBiHNL4KIb/z/bTMus780YII8Nd47taZg2VMIlLTxbMgwyojnF1PI4Geaa6jcG38vKbYqkQvlnIgoLq/Bwwb93WuXH/u1PJFLxPBFrOAsfDT/wdk+5YMAnaP7/X4jBpR541J+J75uZnVODpci17Pe44D1FB2nRf3XbVrwDz55Pa1tbWiqSlkxKFeeFjyFY6EnqfkQuvkXOratyhhnzb8+WL/X0TOzmO6m4te7IVao5padoFWlcVxhe0rIHGzhG33Gv4HIHLc3muYn5nJgTx88avLO6Dr2UwcJGUA0wgu2HnjIs8fBzLpcgDYbrARPjsYiNSB9AZkK6B7cx7Zlnl5LTCdi9G4O4zNFBO1rQWdWVECp4RYBP8nP4Xr392sI7Z6v0AyzDgRDj2oPzgYiUqqafdXJY/QX4s4J6ooKupVj5hJePmEo0DFGoP1vjons5eKXLHTBiYvFsbx6hzr64miwU3UImNT2/DN5/J5bnNUwQFQJDwCby/9+xsQdveFC8HOJojWsoASp0Z4VNKFE/ifafPDvo22stdVRdeV+YQ5d2QnyTDgudU//JIgwvlTrxnAH9aY8kp0cSRxeUAMokvNPKEPDRt10zDMiEUTRMEQjtCnUzIE1f0HWCqzbdJZBciVsTtQWzXcNjdhH9NAXRN9oFtUW5SKcPpfx0GVY9DnqqhPgvNCwDyrt3kSivMu+IjJUxf5/hYfOQa/1s9Gr98ecLQpSd/K9aidOwccqiSLNHYPF5kyguVZq1RoiDr4dzHHT+f6ZQ7T+UkJMmbGpDNvktTEs84RTLN3JuS+p8qE5XMhzIph8+P2GIaHc32Lta8kTMVEJfTQin8cuzrP5fnYC10CaB7Pp08RTDQcjcHFPM/yccizclajUldSYO3X0Ts/3aeyyWCuOF+CejXkQA+rtmldCxAZJmOqaxxhQ9Jf93/GNPkxjgAkYFrzpJ0BAloZ9bxGiKfQSKt3BWCg5IGRFl5BtPj3ZzL9msKAM9PcGkisrUM8UfgE6uHHxsz4p6XGw8k1LQ/58o96RFXrQ1RAbxkxEl+uSWFOpB3AGoXjv1/yyfIQbaZ5WfcHcsbTEOHMDFROEfoNPfgykc+cO60hTqSA2J9yNKpibSGgfuBHth8tq+tGF+exYSbh/U/7j3Ds+bxRAZRi7JnoErzLqn6gKN5G1v50scZtYf5Q9ZbFnF4DjPWBwjfmXDnEbD3viDQpK3s9w/Zw59NA/U+HoGge/z4FJErYmoLl3eb2e9SyM2SASSow6KzcallTQpyUyuqzZq8AbLZ8NuDQc1MSZdpir8XY=","layer_level":1},{"id":"1d81f045-0d3c-4bb3-a24f-3cba807356fa","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"API参考","description":"api-reference","prompt":"创建完整的API参考文档，覆盖TinyAI的核心编程接口。为Model类提供详尽的方法文档，包括构造函数、前向传播、参数管理等接口的参数说明、返回值和异常情况；详细记录Trainer类的训练控制API，如trainStep、evaluate等方法的调用方式；说明Variable类支持的所有数学运算和自动微分相关方法；列出Block类的addLayer、forward等关键接口的使用规范。采用标准API文档格式，包含签名、描述、参数表、返回说明和示例代码。确保与源码保持同步。","order":6,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Model.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java,tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java,tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java","gmt_create":"2025-10-02T11:54:33.698533+08:00","gmt_modified":"2025-10-02T12:03:30.176858+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPkUytUlTK+XtmhJqDmkbtEHfsqhTFx33iIukKkfM2SnHT4oaLA2tlRKMb+gtfUmNhYSnQdukli0UG/fMVEz3Wl/ryNYp9DNxK+NopeKFizTxP4wvU7XaKC8M3nJAr2XEl7Jofl61gcqnLU3aPAY9XbxUE8gO5zzc1Y9RnDCk3r3Gss3GkmmkM6nZ93n63ROkBNUyqr2OS90d0BxAsu/Pb7TRKet4SXS4rrTzkufxKNHINSPDQQnAwP9yQxyiqHhAVgAXvfZ4tV1tDTrl6DQLj6/51yfTj3FEVYOpxW+r6aXC2SzUlCpDXa4ZBcoCOd8H9JMHzR99PnisEGiHDgxcTilgS1ZUABqPqRl/D9YEYAm+jpfx5IEY2lvAgF4Aa63IiiN09N/DFsKTWSGWdOA08ib4lbPZNz7HVjDdFD3sc4O+TVzEzNRxrb5vsTAQdcmJw9ad5a3D96zhVIdmAfg2P+XZL7Ud4pjxh6VoSEm8dwQpYyHwB1mRhqhM/BtXwvhxvUdef79Kd7PEESYdseJyPvi0Dkp0DiOFkoQwPU8dODtMiKS5q0UrlmMqYpesas9Ej/fYm9N/EIgRA9UGgeQC9eCuMvsVYONkhkTz1q7BJvilPynqPtZR4SzEz7IqTs++o95Ir2VWIphMPwnqhLeZmm0lr1FTPh8GxmKDpUOySkedryAshhfyPFQ4tSGMSYLK4TBP36d/87CeKBUOhk3lzeOqBX6uo+c8DBAHIQmWnea8QWY6fq1YM7XW+76D57rtzXF8hqRM5kr7oyyYfI1Zb6Dnob1oGWN5NRNpT0kvPEVyLR9kZz7gHHuv70Qwp7+GN6vAafjrXGrKhvQRhji91EFbBbJKqt6gJp5SBKs2VbjNtQvKRoDswE/8fSEyRPwNiFdyLId71QYB571uQypk9/jIdI7/4rUnZ7MomZwlqfiw0YAKDO6ShbiJLqpVQWaLX3ITi+3QndcRi6EziQhl9Aa/1WCSujq2RyFDl2GnQOp+2EBFWi64t7uO9MdY62aIJJj2L4O/KewyScbqHqHCWyoBy+c08hFlMRK2hfuQeZKOdPOopL8Wtxjk2j+68fJBfmUaZGbuJpoHHGP9pO+ni1YYa9mMivdN/+jNIw7l/KfqQqANj0Hp+gcubeWbvqXlGLezWxW526YkDc5SmZRoCIOHJQ1FExMpes948dPkI0Yi25cb+HhzzOjPsni+apIIhYpB5D4wTYza5ptfF2/+iK7uQQ8cO5296d5A55IM3BBRT90RyTA6zdd3aaZIyhnGqPHWk5+mArNjpszyBZK64umBp40QEpxEljvQGMnxCiccv52qmkiOwrQogO6VTNpyzW3ddRJkUn3c2oSINQv/S759eoL2Qa2CTYXN3/CpPVwj5ohPGOERzqgyDKBDJ9kDBVLM8cONLD2ve3K5XicwoyXiXCmXZt6USheRHX68CHdLx4nb9nMMvJqwred04Y+AQg="},{"id":"bb0d9db0-0092-431a-967a-d1c4a7ee2048","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"高级特性","description":"advanced-features","prompt":"开发高级特性部分的内容，介绍TinyAI框架的进阶功能。深入讲解ParallelTrainingUtils如何实现分布式训练和梯度聚合，提供多GPU训练配置示例；说明ModelSerializer的模型序列化机制，包括保存和加载模型权重与结构的方法；阐述Monitor类的训练过程监控功能，如何实时可视化损失曲线和准确率变化。讨论这些特性在大规模模型训练中的重要性，提供性能调优建议和故障排查技巧。","order":7,"progress_status":"completed","dependent_files":"tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/parallel/ParallelTrainingUtils.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/ModelSerializer.java,tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Monitor.java","gmt_create":"2025-10-02T11:54:33.699747+08:00","gmt_modified":"2025-10-02T12:03:17.798575+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGd4e+ZlhOlcU0FTi9snO9I31pFDv5klxFooIMNUPcliqF/M2nmJ8YIAXOaLMHKbF3NgkhZBAYdKYX/q2lBqe1TnUS3glC9+GuY8zAvxrA5wGSLJ+mRgsOLtss/0J0xZhfaRINuk0loheAoTnDJUPEh4xfgwWEl0sFaW0Gqv89A0Oo/YiKiW9h5xu6tgwbpefHK8xE6K2PcPXZv6bag1UDLa1c8JcTclH7i4STeOJkpR0/EiWkCTQ0B3XCrf62/Mg4Tzx5HY9RGpGuBcTZWLuaI7AX0fnVuB6tQDVdlVgfuGlzaICmWyBbbUwUu3u5jlAjWI0/KDywz94KLybpT3yvu3vJ5zr6cjIYRbq4rH9SIdfHUCVEakHH58YM3pA3/kOso7klz0lhuDRCGfm6XAAIgCp4fe0col9C6+QBJutBST0zdFrV6aQiKRLY9DwCFxmFUmwDQEcuiS/clww4leeOCbCgWHyrgXlv7UAPCaef4oPGg8Z+mLxrta8MwCBvU5C2eKHG56CvBkSSL0lw2cR/nwZ5aZ12pnkUJvr2hfz36taq5TCOt0tIJkFc0/wh/tR0/rjyP9C5+ip2weFxRjTy3BJVUW50kFObthAUShHCCojyg0WWIljbEamfrx2EhNlICKjSby7M986gg/Ar3zEtWZuQdjj/6p3uSMaw1ZYpdHeAvamjVK5rRN4t2qvDNG9DZNmu2h+fl0KAwDDXtO5a0voBe7DlkkJYaUToK20gXpSFY1fLDkSeVLWw2srA9VW+13/zql1KDpsCHhjth7Q0bB2u13ZCeVbZvIhhBE/MJtlESccOOsa+4oPV0/WZGH5KsiUh1L1FMgq9V24HvS17+aXhJp3Es6L/zhXiQz9t4eIg7BHBWIhQM+Tvkto3Ja+nuqqG94CgNdy4MR3Nl843Wh2AiXAeJhVcxD/8T5OsuNKsgPpuaViQB90e/QLAJdBr0E3hWxGfjLFog2UWNckw2eKKx4VucQIEgzA2SDnIrntWNLs3OCFE8900+bYDhlrAGry8+VNfJXMctghSDNg/UtADz8vkbWNY7vSglPlnttxOzRKNp+1fdZIwi3D6VJqaEpJv0jX7XrNtUQWD8Wmvoelo6I31zgGZ+46ORzdJ7nclbWpRNb4BFP98VHH+BppIPgMKB3OfhogOU5lIHhp7PLM+X3kCel7KWNje5eTLXSPCSiDedoOR0f7HIcqtqUnNs3SAcwecT23GF0kwzDDuiIPy0yYHy++ZvEFGMrGCWfL3593947c+JR5Lj6TBvjDVIqiiq7bb3S2ZQavYCGlgSe+ECVSXsff1QmwFGO0/Jp1/D3bVvaLpIu+rSi6PjHHYBQ=="},{"id":"0ebefae7-5330-452f-a43c-4a34e72302ed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"开发者指南","description":"developer-guide","prompt":"创建开发者指南，为贡献者和二次开发者提供全面指导。说明基于Maven的项目构建和依赖管理流程，包括如何添加新模块和管理版本。提供环境配置步骤，确保开发环境一致性。阐述模块化开发的最佳实践，如何遵循现有架构扩展新功能。详细介绍单元测试策略，包括JUnit测试编写规范和覆盖率要求。包含贡献流程说明，从fork仓库到提交PR的完整步骤。引用实现报告中的技术决策，帮助开发者理解关键设计背后的考量。","order":8,"progress_status":"completed","dependent_files":"pom.xml,README.md,tinyai-dl-func/doc/测试修复报告.md,tinyai-dl-ml/doc/ModelSerializer_ParameterManager_实现报告.md","gmt_create":"2025-10-02T11:54:33.701063+08:00","gmt_modified":"2025-10-02T12:04:59.236776+08:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C5IaSqlGa9MAZLOFAWytoRMydW9CaKFacxmHFMFvq4MO4qJbomNzYz9hncXLdeBzq7rIrLOezeYVED4iSmUWzqbyQVAtyYx/cmbdi7ruEsV80hn3adx9QYatOjee9GJS7hNU5xA4eFgB2HP5t1VrQCGLliTv6UByPGLUiF/n44BhWkTcibqEsQ1+/92ZGpFM6zkYkPiscHCK7id9CDVppkrumHbK73CoqXbIThyfn1QmIFqzDgbW6zDr5qqMYVZBA/jyiCoTNsjh0/3P85yADUElSnT5Pmwmk3/2mVQMlvrnDGAb5weBSBLNXXEJK1b+QHfeF6nc0gYS55gEeru3H4a2fEmqmkoSMAf1F3l9k51JcevQxh6Y3OsbGJJcLjM7swokoyv3uuTahVSsazjDIFTFiL35hpqzKjHKcfc4G01o/s4NSI2f21Swiz1QpK4Yy6IPTPdYG9FF6Vsr/pDT7fFNY6GfMa6ikvz7hCkl6xfRZdMZ3e35ZpevlkimWuvJaVEPuOKPCb8Att/weAA1qINJpzBZG/EDPruDNIgeNkdLjrAzAOSEoRpuEJniEJwOfomfZD6Os+uawlAtkbKDSt9jLi9/80/g47t53Smwojt574p0EMg3SZ5Y19qX2+JdZ67uBmqeb0l8CplF8NyDWiSGtP6CDhuToFciJDpQFtf4V7PLTOpdFQSMvgkPgbfkLv5rHSHp1WZGnmz87UskNicIyTS1VY3ny2Iid+az1vNiYoAjoqRh4CFS1Ol0XobX8haStGX4tUqCEt2gIg3sG0wfoohh6xDisf5c3aPVqXHbGWnMUdBLptm8vv4agaapEJjZJ0dhANj8Kz+g+JNvAuB2G3kNE9sS1goaSl81rNaI4tE5LPWsb/KHZGuxOijuVt1kYwMxfA9kT5PvbONBeJXwAW8rZBLcYAqZwPVYMkCp54r3d26BzSHotngUJY/BfjSkhFnL4y9Vc4DIGzLeAcWZDxg+c3ao9E7pu/roacrvpc1KedD6LZzfEb+OsHEj5k6mR9BzzIB90NtXgou+yEdMdOZ6xXos8u+B1MEd8jG34bMw+vSAcwvWhto0DzxJw5JZZSqIDUlOKWxwbmIFDySoYPusE24emV757LGlU8yDLOZgrrpTjH8bBkrjrtaaNxhsN9Zwj7snHrtHgfbfBAY="}],"wiki_items":[{"catalog_id":"2bc08091-03df-4eed-9b9b-427fe848b3c2","title":"技术架构","description":"architecture-design","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"298aa383-0400-4ad9-a8f5-d63a72148a74","gmt_create":"2025-10-02T12:00:10.412252+08:00","gmt_modified":"2025-10-02T12:00:10.421276+08:00"},{"catalog_id":"1275e1ee-6647-43a7-9473-015f0957e379","title":"核心模块","description":"core-modules","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"5c3fbdc5-6af2-4685-b589-ef7a87e312be","gmt_create":"2025-10-02T12:00:19.080588+08:00","gmt_modified":"2025-10-02T12:00:19.087139+08:00"},{"catalog_id":"9b593268-92d1-4f62-8450-057f9a02399f","title":"项目概述","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"0e98767a-c938-43a3-b19e-7c39f64500fc","gmt_create":"2025-10-02T12:00:27.474763+08:00","gmt_modified":"2025-10-02T12:00:27.484079+08:00"},{"catalog_id":"f4ba2b64-d220-497d-ab20-b4d22dcc9be4","title":"应用示例","description":"application-examples","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"4f8c5c48-acd1-4190-9366-c68b0d4646c8","gmt_create":"2025-10-02T12:01:56.497952+08:00","gmt_modified":"2025-10-02T12:01:56.505903+08:00"},{"catalog_id":"25ce1389-fed2-4ea0-8024-9d54af4913d7","title":"智能体系统","description":"agent-systems","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"6b171ec4-6848-455d-b9ae-26fa393eb94d","gmt_create":"2025-10-02T12:02:00.906699+08:00","gmt_modified":"2025-10-02T12:02:00.913537+08:00"},{"catalog_id":"a9a0ee5f-a5c6-4f7b-bf70-ae25d29a382e","title":"模型实现","description":"model-implementations","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"72de52ec-20d2-4ae1-89d0-32ed6355a42d","gmt_create":"2025-10-02T12:03:03.889636+08:00","gmt_modified":"2025-10-02T12:03:03.896798+08:00"},{"catalog_id":"bb0d9db0-0092-431a-967a-d1c4a7ee2048","title":"高级特性","description":"advanced-features","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"b28cf580-81f2-4126-bf59-4635cbf4b6d0","gmt_create":"2025-10-02T12:03:17.792317+08:00","gmt_modified":"2025-10-02T12:03:17.79887+08:00"},{"catalog_id":"1d81f045-0d3c-4bb3-a24f-3cba807356fa","title":"API参考","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"87a5ccb9-0851-44e8-a5a2-8ffc6bf97b22","gmt_create":"2025-10-02T12:03:30.169908+08:00","gmt_modified":"2025-10-02T12:03:30.177429+08:00"},{"catalog_id":"7cffa2bd-10cf-4eae-9059-a0dc98fca5a2","title":"NdArray多维数组库","description":"ndarr-library","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"11e98dd0-9b16-4fc5-86b0-6f4647c8b318","gmt_create":"2025-10-02T12:04:49.704677+08:00","gmt_modified":"2025-10-02T12:04:49.710129+08:00"},{"catalog_id":"0ebefae7-5330-452f-a43c-4a34e72302ed","title":"开发者指南","description":"developer-guide","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"72350408-b2e7-4559-b5fd-280580045e3c","gmt_create":"2025-10-02T12:04:59.227622+08:00","gmt_modified":"2025-10-02T12:04:59.237258+08:00"},{"catalog_id":"ee92a8e4-3e38-42fa-b11c-7b6ec6c143e6","title":"核心组件","description":"core-components","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"a9b79efa-dd33-48f3-acc4-dfed18e83294","gmt_create":"2025-10-02T12:05:22.51313+08:00","gmt_modified":"2025-10-02T12:05:22.524239+08:00"},{"catalog_id":"11a5ccc4-5004-4656-b624-0fba4bd83d58","title":"模型管理API","description":"model-api","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"47438e99-1f8d-4376-848f-62900ab1ec2d","gmt_create":"2025-10-02T12:06:34.017552+08:00","gmt_modified":"2025-10-02T12:06:34.021342+08:00"},{"catalog_id":"74d91dbc-737e-4ee2-bfc8-65bcd41052da","title":"基础智能体","description":"agent-base","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"d9509ee0-6d3f-4520-9f3a-d4f080abf9ec","gmt_create":"2025-10-02T12:06:41.135727+08:00","gmt_modified":"2025-10-02T12:06:41.145053+08:00"},{"catalog_id":"9e11b63b-5b3b-41d3-aced-afbab752bfff","title":"GPT模型","description":"gpt-model","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"9366fb62-d411-40c8-a1f7-4633a826dc35","gmt_create":"2025-10-02T12:07:01.824534+08:00","gmt_modified":"2025-10-02T12:07:01.834467+08:00"},{"catalog_id":"7ecac486-a534-40c0-9a4c-cea881f5b68a","title":"计算机视觉示例","description":"computer-vision-examples","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"597c366c-4a12-436b-8993-e2ca00d985c3","gmt_create":"2025-10-02T12:08:09.914213+08:00","gmt_modified":"2025-10-02T12:08:09.920509+08:00"},{"catalog_id":"98c7532c-6108-4412-8254-669176282628","title":"并行训练","description":"parallel-training","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"07f795e3-df6c-490e-894e-12a5a70bd2fb","gmt_create":"2025-10-02T12:08:20.965484+08:00","gmt_modified":"2025-10-02T12:08:20.975735+08:00"},{"catalog_id":"400c6aaa-189b-4208-8f84-f71d9775773b","title":"自动微分引擎","description":"autodiff-engine","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"f2559ab0-a8b9-4dd1-be7f-a02419c72d72","gmt_create":"2025-10-02T12:08:29.405417+08:00","gmt_modified":"2025-10-02T12:08:29.414498+08:00"},{"catalog_id":"d38c0446-62b7-411e-a6f4-e3fc7a48b7a7","title":"设计模式应用","description":"design-patterns","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"179990d1-9ecd-4775-b590-fe83f1899f94","gmt_create":"2025-10-02T12:09:59.890058+08:00","gmt_modified":"2025-10-02T12:09:59.898696+08:00"},{"catalog_id":"1b29ef55-37af-45fc-ac5f-7ba18075eab3","title":"训练器API","description":"trainer-api","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"ce516ed7-f178-4f0e-af66-994a10e28c82","gmt_create":"2025-10-02T12:10:05.714733+08:00","gmt_modified":"2025-10-02T12:10:05.726105+08:00"},{"catalog_id":"fc191fb2-e556-494a-837f-9549b9f2eafa","title":"检索增强生成系统","description":"agent-rag","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"b8b55751-4e70-4d36-97fc-d85e4e5fbf99","gmt_create":"2025-10-02T12:10:10.488633+08:00","gmt_modified":"2025-10-02T12:10:10.494713+08:00"},{"catalog_id":"11b5940a-86cf-4a78-9b03-8d342ebb91c8","title":"自然语言处理示例","description":"nlp-examples","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"5e11fe1c-8d69-45ca-b6bd-cf62a5c5dcb7","gmt_create":"2025-10-02T12:11:30.856114+08:00","gmt_modified":"2025-10-02T12:11:30.86692+08:00"},{"catalog_id":"297c287e-63df-4878-a712-9001329bbe79","title":"模型序列化","description":"model-serialization","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"c45f1076-58b5-47d0-ac18-ee5679d54535","gmt_create":"2025-10-02T12:11:52.325292+08:00","gmt_modified":"2025-10-02T12:11:52.333687+08:00"},{"catalog_id":"220e7e0c-956a-47fa-9314-c99b5785254c","title":"DeepSeek模型","description":"deepseek-model","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"840506bb-8eb3-4a95-9b48-dad231229e7e","gmt_create":"2025-10-02T12:12:01.058869+08:00","gmt_modified":"2025-10-02T12:12:01.06565+08:00"},{"catalog_id":"2b4272ba-a29b-43ba-b0af-a00cb369f756","title":"神经网络层与块","description":"neural-network-layers","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"7c1c9875-2c78-4749-a920-5b24cf399908","gmt_create":"2025-10-02T12:13:06.542515+08:00","gmt_modified":"2025-10-02T12:13:06.549233+08:00"},{"catalog_id":"141136aa-0d32-4337-adad-c5e39c67fba2","title":"数据流与计算图","description":"data-flow","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"160ddd72-0981-4a47-a6a5-ec274017bf39","gmt_create":"2025-10-02T12:13:26.559535+08:00","gmt_modified":"2025-10-02T12:13:26.568436+08:00"},{"catalog_id":"2f5c46b1-56e7-4b9c-9e1f-d37699c8127a","title":"多智能体系统","description":"agent-multi","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"cca0a1ab-a868-41d5-9b2e-d6dc34916442","gmt_create":"2025-10-02T12:13:33.938501+08:00","gmt_modified":"2025-10-02T12:13:33.943421+08:00"},{"catalog_id":"ba2c288a-2b7f-4e43-9ae7-b41234b9ba02","title":"变量系统API","description":"variable-api","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"f9ac0f1b-a507-445b-a2be-0d417055abbe","gmt_create":"2025-10-02T12:14:29.631421+08:00","gmt_modified":"2025-10-02T12:14:29.646304+08:00"},{"catalog_id":"651d8755-3260-4c28-851a-0e08f708fb95","title":"LoRA模型","description":"lora-model","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"76c59857-dec4-40e6-b50a-7b9d93414346","gmt_create":"2025-10-02T12:15:18.241187+08:00","gmt_modified":"2025-10-02T12:15:18.249397+08:00"},{"catalog_id":"74c65259-929d-4cc0-8250-1cdd13f14b05","title":"训练监控","description":"training-monitoring","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"f782435f-fbfa-4c68-b190-fda65752582d","gmt_create":"2025-10-02T12:15:42.005762+08:00","gmt_modified":"2025-10-02T12:15:42.012967+08:00"},{"catalog_id":"b57520d1-b55e-42eb-a5de-b0afbcd5b0a3","title":"强化学习示例","description":"reinforcement-learning-examples","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"34c0722c-65a7-42d1-be16-c496a1f168be","gmt_create":"2025-10-02T12:15:50.654114+08:00","gmt_modified":"2025-10-02T12:15:50.658399+08:00"},{"catalog_id":"03630e74-7219-4cae-bda6-9a470ba8ad96","title":"机器学习核心系统","description":"ml-core-system","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"855ba608-5255-4afa-a050-1d16e7dd86b8","gmt_create":"2025-10-02T12:17:29.963187+08:00","gmt_modified":"2025-10-02T12:17:29.97384+08:00"},{"catalog_id":"6c45bdfe-2a79-44a6-918b-39351406838b","title":"构建系统与模块化","description":"build-system","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"cd4c15b2-fefa-4d08-9306-ff95f1ff8a5f","gmt_create":"2025-10-02T12:17:30.851979+08:00","gmt_modified":"2025-10-02T12:17:30.858278+08:00"},{"catalog_id":"8e4a95d0-4e77-4473-a4cf-7087061e8ce3","title":"自进化智能体","description":"agent-evol","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"13b16da0-d503-439e-ba9f-41455e1ec39b","gmt_create":"2025-10-02T12:18:23.819079+08:00","gmt_modified":"2025-10-02T12:18:23.827793+08:00"},{"catalog_id":"743dedfd-f2ec-494b-a9fb-89913b43ebee","title":"MoE模型","description":"moe-model","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"bdff3f64-47cb-458d-b345-b9943b15cc3d","gmt_create":"2025-10-02T12:18:53.83766+08:00","gmt_modified":"2025-10-02T12:18:53.845374+08:00"},{"catalog_id":"04c9c617-73ab-471e-b6f6-27975df220cc","title":"网络块API","description":"block-api","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"d19029c7-cd35-4fb8-9a8c-fe7cb14303e0","gmt_create":"2025-10-02T12:18:55.697423+08:00","gmt_modified":"2025-10-02T12:18:55.708591+08:00"},{"catalog_id":"e89e5b2c-5591-4f79-936a-572008d73b27","title":"分类任务示例","description":"classification-examples","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"11d2879d-0fe4-4961-99b1-609042ebdf6c","gmt_create":"2025-10-02T12:19:44.638753+08:00","gmt_modified":"2025-10-02T12:19:44.647113+08:00"},{"catalog_id":"7429b154-3f80-4955-9b8d-4381d6a5fe88","title":"回归任务示例","description":"regression-examples","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"006efb72-c394-444d-929d-41022fa35286","gmt_create":"2025-10-02T12:20:08.458717+08:00","gmt_modified":"2025-10-02T12:20:08.474317+08:00"},{"catalog_id":"937dee19-a292-42bf-bb25-66a5983c020d","title":"高级特性示例","description":"advanced-features-examples","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"3225345c-d851-4677-a096-f59f24c52628","gmt_create":"2025-10-02T12:21:12.550796+08:00","gmt_modified":"2025-10-02T12:21:12.55727+08:00"},{"catalog_id":"a093cc06-a5c6-4877-9ac2-aaf0048c48e7","title":"智能体认知模式","description":"agent-pattern","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"a1677ee1-37c1-452c-bf91-1da54e464595","gmt_create":"2025-10-02T12:21:12.738266+08:00","gmt_modified":"2025-10-02T12:21:12.761874+08:00"},{"catalog_id":"e2f26bad-3cec-4ba7-874c-f90734d26805","title":"组合模式","description":"composite-pattern","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"a78f4b19-5b5f-4df0-98b3-bbc812f173fb","gmt_create":"2025-10-02T12:21:20.580412+08:00","gmt_modified":"2025-10-02T12:21:20.588154+08:00"},{"catalog_id":"1be08c09-6ab5-49ef-9299-6206d98f2e85","title":"前向传播机制","description":"forward-propagation","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"25e8ab99-d55d-40ae-bed0-c6d6552c50dd","gmt_create":"2025-10-02T12:23:04.211607+08:00","gmt_modified":"2025-10-02T12:23:04.215978+08:00"},{"catalog_id":"c564b80a-41b5-4600-9ee0-0368d33275f5","title":"NdArray - 多维数组基础","description":"ndarray-component","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"2b16e164-1403-4d33-8822-7738f382b27c","gmt_create":"2025-10-02T12:23:08.806318+08:00","gmt_modified":"2025-10-02T12:23:08.861012+08:00"},{"catalog_id":"90570456-50db-45cf-b83d-baff166e15f2","title":"训练器构造函数","description":"trainer-constructor","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"e4160320-002e-469f-8146-76abf5c42289","gmt_create":"2025-10-02T12:23:59.195986+08:00","gmt_modified":"2025-10-02T12:23:59.200091+08:00"},{"catalog_id":"336e23b8-978c-444a-b3f5-e66fc1b3fa4e","title":"模块化配置","description":"module-configuration","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"6592d8d0-1463-4899-9164-1800eb8d8542","gmt_create":"2025-10-02T12:24:44.055652+08:00","gmt_modified":"2025-10-02T12:24:44.069231+08:00"},{"catalog_id":"a40ca869-e61b-4b82-a949-1a730c54c74b","title":"词嵌入示例","description":"word-embedding","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"9a902ce0-7682-4d9e-b199-1edee60d5306","gmt_create":"2025-10-02T12:25:20.877381+08:00","gmt_modified":"2025-10-02T12:25:20.8862+08:00"},{"catalog_id":"5d00f0c8-7396-4621-9d40-cafe989221a9","title":"变量构造方法","description":"variable-construction","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"8ed29e3d-8b2b-4b18-bad4-4f3217dbee88","gmt_create":"2025-10-02T12:25:26.968555+08:00","gmt_modified":"2025-10-02T12:25:26.975149+08:00"},{"catalog_id":"34a0253b-f14a-4531-9fce-7848a3a4a8b5","title":"Variable - 自动微分引擎","description":"variable-component","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"5e496730-137a-460c-911d-3f7d7d266843","gmt_create":"2025-10-02T12:26:36.302986+08:00","gmt_modified":"2025-10-02T12:26:36.316086+08:00"},{"catalog_id":"d84a71f3-f067-4ba5-a34e-fbf89e40931e","title":"策略模式","description":"strategy-pattern","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"2545dc0b-2e08-4252-a183-ffa72ebda9f5","gmt_create":"2025-10-02T12:26:44.503348+08:00","gmt_modified":"2025-10-02T12:26:44.507429+08:00"},{"catalog_id":"29f37df2-a274-483d-b5fc-9551dc19fc15","title":"DQN算法示例：CartPole环境","description":"dqn-cartpole-example","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"868b419e-5eab-4491-8c29-87ef2aee34aa","gmt_create":"2025-10-02T12:26:44.723801+08:00","gmt_modified":"2025-10-02T12:26:44.726622+08:00"},{"catalog_id":"7ff2d60a-8eb5-4cd0-bfc1-56b4e6e1ad7d","title":"依赖管理","description":"dependency-management","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"da9fdf67-d280-4086-8222-8be9a2382848","gmt_create":"2025-10-02T12:27:53.457098+08:00","gmt_modified":"2025-10-02T12:27:53.462864+08:00"},{"catalog_id":"86d47946-80e0-4c5e-87b0-ba209ac24165","title":"反向传播与自动微分","description":"backward-propagation","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"d51e40f8-029f-46b0-9931-3ea744196f42","gmt_create":"2025-10-02T12:27:57.370344+08:00","gmt_modified":"2025-10-02T12:27:57.378521+08:00"},{"catalog_id":"279bc716-ef1e-44e4-8b3b-4035f4ef6d32","title":"训练器初始化","description":"trainer-initialization","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"f5f6dc33-7edb-4253-9801-ed09c2844643","gmt_create":"2025-10-02T12:28:13.875314+08:00","gmt_modified":"2025-10-02T12:28:13.884569+08:00"},{"catalog_id":"57418e75-8238-4f98-b672-c53402453bbc","title":"数值与梯度管理","description":"variable-value-grad","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"3737819b-2a6e-4932-a0bb-09e8d3ab91d0","gmt_create":"2025-10-02T12:29:15.597963+08:00","gmt_modified":"2025-10-02T12:29:15.60074+08:00"},{"catalog_id":"e65c5ffa-5f11-40a3-bf1c-94dddba6f0b0","title":"REINFORCE算法示例：GridWorld环境","description":"reinforce-gridworld-example","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"a2a60778-dae1-4330-914c-46956ec56f82","gmt_create":"2025-10-02T12:29:28.136452+08:00","gmt_modified":"2025-10-02T12:29:28.146009+08:00"},{"catalog_id":"376ca184-7866-43ad-97eb-ee95ca47d2d9","title":"语言模型示例","description":"language-modeling","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"c9ca3065-9a1c-4233-8dc6-2a7030cfe7f1","gmt_create":"2025-10-02T12:30:03.084892+08:00","gmt_modified":"2025-10-02T12:30:03.089304+08:00"},{"catalog_id":"070d0efc-e80f-44de-978b-ce90299405a3","title":"观察者模式","description":"observer-pattern","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"badce31c-6cf8-42b3-b4d1-5f8422785f0b","gmt_create":"2025-10-02T12:30:29.433377+08:00","gmt_modified":"2025-10-02T12:30:29.439366+08:00"},{"catalog_id":"f68c15db-4b9d-462a-b03b-ac1ef7830f1a","title":"Block - 神经网络构建单元","description":"block-component","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"1b183f86-858a-4b62-a3f0-7b4f73c912cb","gmt_create":"2025-10-02T12:30:43.482681+08:00","gmt_modified":"2025-10-02T12:30:43.490781+08:00"},{"catalog_id":"f965422e-8e21-4d6d-b1b8-e4cfa3f621c6","title":"内存与计算图管理","description":"memory-management","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"24116316-13d7-4068-928d-c30ea4298448","gmt_create":"2025-10-02T12:31:01.176633+08:00","gmt_modified":"2025-10-02T12:31:01.181775+08:00"},{"catalog_id":"5d73ba62-31a9-475f-9829-df184d017887","title":"插件配置","description":"plugin-configuration","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"e1922f5b-8f71-4808-9281-65b09d8a67ed","gmt_create":"2025-10-02T12:31:37.053712+08:00","gmt_modified":"2025-10-02T12:31:37.063191+08:00"},{"catalog_id":"2140e0e3-a193-4581-a675-3f62a43be14a","title":"自动微分系统","description":"variable-autodiff","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"6502c054-59ab-42ce-8ff7-f0ac501be7fd","gmt_create":"2025-10-02T12:32:11.26867+08:00","gmt_modified":"2025-10-02T12:32:11.279723+08:00"},{"catalog_id":"9aad2933-db1e-402b-a7d4-00b40d03c80f","title":"训练循环控制","description":"trainer-training-loop","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"ac866d85-8de0-48d2-af33-9f92ca27ab22","gmt_create":"2025-10-02T12:32:14.468646+08:00","gmt_modified":"2025-10-02T12:32:14.476883+08:00"},{"catalog_id":"e98918ce-2181-4bf2-9bca-c1fc79489513","title":"序列建模示例","description":"sequence-modeling","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"29f7472b-e6fb-4340-a55c-127ffdac5379","gmt_create":"2025-10-02T12:33:13.649796+08:00","gmt_modified":"2025-10-02T12:33:13.658501+08:00"},{"catalog_id":"a9ce56f9-1cf2-407b-9fec-453642319fc8","title":"多臂老虎机算法示例","description":"multi-armed-bandit-example","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"aaa71efb-fb5b-4222-9c16-abfd7192fbd5","gmt_create":"2025-10-02T12:33:43.462152+08:00","gmt_modified":"2025-10-02T12:33:43.469941+08:00"},{"catalog_id":"fdb7f27f-af00-4bff-aa1d-11d445251b68","title":"工厂模式","description":"factory-pattern","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"f45435cd-fed6-45d7-8c18-dfb8e5b82e3e","gmt_create":"2025-10-02T12:33:45.732761+08:00","gmt_modified":"2025-10-02T12:33:45.740071+08:00"},{"catalog_id":"bc5fb4a5-66d5-428f-9389-de5dc03288ec","title":"Model - 模型管理与封装","description":"model-component","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"7e82492b-d484-4c89-a117-142841ff0e7c","gmt_create":"2025-10-02T12:34:41.541781+08:00","gmt_modified":"2025-10-02T12:34:41.554379+08:00"},{"catalog_id":"8bddc410-da99-4be1-a979-d92d4c1d0deb","title":"模型评估","description":"trainer-evaluation","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"f2849602-0df3-4ea5-ba25-0dece65ed154","gmt_create":"2025-10-02T12:35:26.561828+08:00","gmt_modified":"2025-10-02T12:35:26.567491+08:00"},{"catalog_id":"76d2f906-894a-4c13-9503-c173ef46d3c2","title":"数学运算操作","description":"variable-operations","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"e6b5be6d-b59f-4774-a405-dafa9d2a5eb6","gmt_create":"2025-10-02T12:35:46.591939+08:00","gmt_modified":"2025-10-02T12:35:46.598949+08:00"},{"catalog_id":"8f2db323-46a4-4626-92c2-73f03b89e6b9","title":"强化学习算法对比分析","description":"rl-algorithm-comparison","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"e09ce701-c894-4b63-a1e0-e8f99e63efa3","gmt_create":"2025-10-02T12:36:35.322075+08:00","gmt_modified":"2025-10-02T12:36:35.326286+08:00"},{"catalog_id":"1baf7fd6-145f-49dd-a8b2-7f5f7d6edd24","title":"Trainer - 训练流程控制器","description":"trainer-component","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"68728517-45ca-4962-9189-8b3e3a50ef7a","gmt_create":"2025-10-02T12:36:48.877135+08:00","gmt_modified":"2025-10-02T12:36:48.880693+08:00"},{"catalog_id":"9456a5ae-1900-4d0e-b794-4322dedeb250","title":"并行训练管理","description":"trainer-parallel-training","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"a4a78c3b-28e8-451f-b5cb-484f3714d3f3","gmt_create":"2025-10-02T12:37:44.702941+08:00","gmt_modified":"2025-10-02T12:37:44.711682+08:00"},{"catalog_id":"f7e2824c-4a2e-422a-85ce-69d69f4cd461","title":"并行训练配置","description":"parallel-training-configuration","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"1dbae50b-9d98-4a93-ae26-078526fc0235","gmt_create":"2025-10-02T12:39:06.155672+08:00","gmt_modified":"2025-10-02T12:39:06.164659+08:00"},{"catalog_id":"7d679107-3ccb-496b-99d2-372047f301a7","title":"内部模块依赖","description":"internal-dependencies","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"2988790a-2656-4516-be93-eb9053439eb9","gmt_create":"2025-10-02T12:39:18.888542+08:00","gmt_modified":"2025-10-02T12:39:18.896493+08:00"},{"catalog_id":"4a1c6f9a-6406-4f40-bc46-2b15412f9144","title":"递归反向传播机制","description":"autodiff-backward-recursive","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"637c8491-8a55-4f63-aaa3-ab78bf087b1c","gmt_create":"2025-10-02T12:40:13.040999+08:00","gmt_modified":"2025-10-02T12:40:13.053899+08:00"},{"catalog_id":"68b3eab1-bca6-4018-bdb9-af7a90268306","title":"SimpleRNN示例","description":"simple-rnn-example","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"c6287e87-3acf-4f03-aaa0-ddc064cb8970","gmt_create":"2025-10-02T12:41:02.820902+08:00","gmt_modified":"2025-10-02T12:41:02.831674+08:00"},{"catalog_id":"0ff0745f-5d83-4987-abf7-401a28fee1fa","title":"四则运算操作","description":"arithmetic-operations","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"1b786381-f1da-409e-9627-b593a0b6e9ee","gmt_create":"2025-10-02T12:41:40.706125+08:00","gmt_modified":"2025-10-02T12:41:40.711365+08:00"},{"catalog_id":"ae360708-3e9b-4ac1-8a77-98b2d517e7c5","title":"GPT-2模型架构","description":"gpt2-model-architecture","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"cb18f32d-f2f5-49e4-9aec-2afee803f408","gmt_create":"2025-10-02T12:42:38.728265+08:00","gmt_modified":"2025-10-02T12:42:38.733184+08:00"},{"catalog_id":"6d017f4a-69b8-4763-b93b-0034c1cdb6c1","title":"并行训练模式","description":"parallel-training","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"33594bf2-4838-4db8-be62-b613045f67bf","gmt_create":"2025-10-02T12:43:05.912368+08:00","gmt_modified":"2025-10-02T12:43:05.919318+08:00"},{"catalog_id":"8fd067ea-5976-48d5-8166-310ab31987c0","title":"外部库依赖","description":"external-dependencies","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"8514c6e5-599c-4c4d-9bba-4d1d2beeeff7","gmt_create":"2025-10-02T12:43:30.579469+08:00","gmt_modified":"2025-10-02T12:43:30.583274+08:00"},{"catalog_id":"9ba26dea-5064-4f2e-8827-6afee2ef18f5","title":"并行训练状态监控","description":"parallel-training-status","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"41fb0093-8a5d-45dc-a406-a9bf56b58dac","gmt_create":"2025-10-02T12:44:13.744841+08:00","gmt_modified":"2025-10-02T12:44:13.749373+08:00"},{"catalog_id":"2bc4f8c5-a443-4131-b2f8-d4cec0a59c97","title":"迭代式反向传播实现","description":"autodiff-backward-iterative","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"238dde87-4350-49c3-864d-5ad6ea3411db","gmt_create":"2025-10-02T12:45:00.150133+08:00","gmt_modified":"2025-10-02T12:45:00.159915+08:00"},{"catalog_id":"85955f65-3aad-4dd0-bcf0-b4bf765680f6","title":"LSTM示例","description":"lstm-example","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"3a4e515c-808b-4bb4-b1cf-48673c53b3b5","gmt_create":"2025-10-02T12:45:52.210143+08:00","gmt_modified":"2025-10-02T12:45:52.220092+08:00"},{"catalog_id":"db88a95a-774d-4d3e-a8e3-593b369b8190","title":"单线程训练模式","description":"single-thread-training","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"0f5e1123-13ab-4b90-8cf1-9fd952e0bd08","gmt_create":"2025-10-02T12:46:33.575379+08:00","gmt_modified":"2025-10-02T12:46:33.590116+08:00"},{"catalog_id":"d76dc77c-1d34-4362-afbb-e07e6a3cdbe3","title":"一元数学函数","description":"unary-math-operations","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"c42790f4-4d09-408e-98d1-5de567d8f7e7","gmt_create":"2025-10-02T12:46:47.245394+08:00","gmt_modified":"2025-10-02T12:46:47.254877+08:00"},{"catalog_id":"325fe314-5164-4ba2-8024-758419b1081a","title":"Token与位置嵌入层","description":"gpt2-token-embedding","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"c019c48b-3e47-4a75-977a-13aade659151","gmt_create":"2025-10-02T12:47:07.829059+08:00","gmt_modified":"2025-10-02T12:47:07.836169+08:00"},{"catalog_id":"ccec6763-ca32-4ad0-856d-ad8a898d065d","title":"并行线程数管理","description":"parallel-thread-count","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"3be14428-cb7f-466a-82e2-f347ea05933f","gmt_create":"2025-10-02T12:47:42.92554+08:00","gmt_modified":"2025-10-02T12:47:42.936914+08:00"},{"catalog_id":"20169cee-f981-4f39-b468-08cfd9170c04","title":"计算图管理与剪枝","description":"autodiff-computational-graph","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"36805423-b96c-4113-a5d6-9346710c10d2","gmt_create":"2025-10-02T12:48:08.266175+08:00","gmt_modified":"2025-10-02T12:48:08.274379+08:00"},{"catalog_id":"066f2124-74b2-48ae-939c-5914ea9946cd","title":"GRU示例","description":"gru-example","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"7ba748e9-3f53-4c75-af67-0ca09a48cac7","gmt_create":"2025-10-02T12:48:16.024131+08:00","gmt_modified":"2025-10-02T12:48:16.029431+08:00"},{"catalog_id":"c95c7bbc-34d7-4d13-b9d1-0f71ae531724","title":"输出头与词汇表预测","description":"gpt2-output-head","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"743c297d-3243-454d-a41d-010d91c231b8","gmt_create":"2025-10-02T12:49:09.98224+08:00","gmt_modified":"2025-10-02T12:49:09.987545+08:00"},{"catalog_id":"a63c5c4a-30c2-4308-9706-c8a20558e90d","title":"激活函数操作","description":"activation-operations","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"e2b5690c-b021-47fd-9ae0-38d134668ad4","gmt_create":"2025-10-02T12:49:16.287626+08:00","gmt_modified":"2025-10-02T12:49:16.293806+08:00"},{"catalog_id":"20ae3c50-b144-4b47-8fc0-3ff6f0d140f5","title":"并行资源释放","description":"parallel-resource-cleanup","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"9689d495-502f-43c1-803a-4d15b5b488e1","gmt_create":"2025-10-02T12:49:31.647935+08:00","gmt_modified":"2025-10-02T12:49:31.655758+08:00"},{"catalog_id":"3ed881dc-d0cd-4507-9813-fd547388f9d3","title":"梯度计算优化策略","description":"autodiff-gradient-optimization","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"2e3786f8-43d0-46de-ad56-d3d4c7938529","gmt_create":"2025-10-02T12:50:25.628421+08:00","gmt_modified":"2025-10-02T12:50:25.634985+08:00"},{"catalog_id":"b57cac6b-5815-400a-8f7c-81aa3c9d4156","title":"矩阵与张量操作","description":"matrix-operations","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"9989887b-bfff-4ace-9681-1edcd56e1cd1","gmt_create":"2025-10-02T12:50:54.434911+08:00","gmt_modified":"2025-10-02T12:50:54.443827+08:00"},{"catalog_id":"6a827513-ac5a-4a77-8eb0-ddc03327900c","title":"文本分词与词汇表管理","description":"text-tokenization","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"d7aed1d1-7b7b-488b-9542-4c2cad9e2bf5","gmt_create":"2025-10-02T12:50:57.350966+08:00","gmt_modified":"2025-10-02T12:50:57.35974+08:00"},{"catalog_id":"c6a82ba8-76ee-4a4e-9f4f-37d0d9849806","title":"自回归文本生成","description":"autoregressive-generation","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"f89ef412-c265-45e5-b138-0524ff490e99","gmt_create":"2025-10-02T12:52:18.022896+08:00","gmt_modified":"2025-10-02T12:52:18.030006+08:00"},{"catalog_id":"b2a4c011-8196-4d12-9b7f-001acbf7c0ad","title":"数据处理与归约操作","description":"data-processing-operations","extend":"{}","progress_status":"completed","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","id":"1bc2ad46-5c6c-47d8-9d56-1313d5329458","gmt_create":"2025-10-02T12:52:33.45911+08:00","gmt_modified":"2025-10-02T12:52:33.463628+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# TinyAI 项目综合分析\n\n## 1. 项目介绍\n\n### 项目简介\nTinyAI 是一个完全使用 Java 开发的现代化深度学习框架，专为教育、研究和生产环境设计。该框架提供了从底层张量运算到高级AI智能体的完整技术栈，支持传统深度学习、大语言模型、强化学习和多智能体系统等前沿AI技术。\n\n### 核心目标\n- 构建一个纯Java的深度学习生态系统\n- 提供从基础计算到高级AI应用的完整解决方案\n- 支持教育、研究和生产环境的多样化需求\n- 实现高性能的深度学习训练和推理能力\n\n### 目标用户\n- 深度学习研究人员和学生\n- Java开发者希望在Java生态中使用AI技术\n- 需要在生产环境中部署AI模型的工程师\n- 对AI智能体和多智能体系统感兴趣的开发者\n\n## 2. 技术架构\n\n### 组件分解\nTinyAI项目采用模块化设计，主要分为以下几个核心模块：\n\n```mermaid\nflowchart TD\n    A[核心基础] --\u003e B[ndarr]\n    A --\u003e C[func]\n    A --\u003e D[nnet]\n    A --\u003e E[ml]\n    \n    F[应用领域] --\u003e G[cv]\n    F --\u003e H[rl]\n    F --\u003e I[nlp]\n    \n    J[智能体系统] --\u003e K[agent-base]\n    J --\u003e L[agent-rag]\n    J --\u003e M[agent-multi]\n    J --\u003e N[agent-evol]\n    J --\u003e O[agent-pattern]\n    \n    P[模型实现] --\u003e Q[model-gpt]\n    P --\u003e R[model-deepseek]\n    P --\u003e S[model-lora]\n    P --\u003e T[model-moe]\n    \n    U[案例演示] --\u003e V[dl-case]\n```\n\n### 设计模式\n项目采用了多种设计模式来确保代码的可维护性和扩展性：\n\n- **工厂模式**：用于创建不同类型的神经网络层和模型\n- **策略模式**：在智能体系统中实现不同的行为策略\n- **观察者模式**：在训练监控系统中实现事件通知\n- **组合模式**：在神经网络Block结构中实现层次化设计\n- **单例模式**：在工具类和配置管理中确保全局唯一性\n\n### 系统关系\n各模块之间的依赖关系如下：\n\n```mermaid\ngraph TD\n    ndarr[tinyai-dl-ndarr] --\u003e func[tinyai-dl-func]\n    func --\u003e nnet[tinyai-dl-nnet]\n    nnet --\u003e ml[tinyai-dl-ml]\n    ml --\u003e cv[tinyai-dl-cv]\n    ml --\u003e rl[tinyai-dl-rl]\n    ml --\u003e case[tinyai-dl-case]\n    \n    ml --\u003e gpt[tinyai-model-gpt]\n    ml --\u003e deepseek[tinyai-model-deepseek]\n    ml --\u003e lora[tinyai-model-lora]\n    ml --\u003e moe[tinyai-model-moe]\n    \n    base[tinyai-agent-base] --\u003e rag[tinyai-agent-rag]\n    base --\u003e multi[tinyai-agent-multi]\n    base --\u003e evol[tinyai-agent-evol]\n    base --\u003e pattern[tinyai-agent-pattern]\n    \n    ml --\u003e base\n    gpt --\u003e base\n    deepseek --\u003e base\n```\n\n### 数据流图\n框架的核心数据处理流程如下：\n\n```mermaid\nflowchart TD\n    A[数据输入] --\u003e B[数据预处理]\n    B --\u003e C[张量表示]\n    C --\u003e D[计算图构建]\n    D --\u003e E[前向传播]\n    E --\u003e F[损失计算]\n    F --\u003e G[反向传播]\n    G --\u003e H[梯度更新]\n    H --\u003e I[模型优化]\n    I --\u003e J[结果输出]\n    J --\u003e K[模型评估]\n    K --\u003e L[模型保存]\n```\n\n## 3. 关键实现\n\n### 主要入口点\n- `tinyai-dl-case`：提供各种应用示例的入口\n- `tinyai-agent-base`：智能体系统的基础实现\n- `tinyai-dl-ml`：机器学习核心功能的入口\n\n### 核心模块\n- **tinyai-dl-ndarr**：多维数组基础库，提供高效的数值计算\n- **tinyai-dl-func**：自动微分引擎，支持动态计算图\n- **tinyai-dl-nnet**：神经网络层实现，包含各种神经网络组件\n- **tinyai-dl-ml**：机器学习核心，包含训练、优化和评估功能\n\n### 配置方法\n项目使用Maven进行依赖管理和构建，通过pom.xml文件定义模块依赖关系：\n\n```xml\n\u003cmodules\u003e\n    \u003c!-- 深度学习 --\u003e\n    \u003cmodule\u003etinyai-dl-ndarr\u003c/module\u003e\n    \u003cmodule\u003etinyai-dl-func\u003c/module\u003e\n    \u003cmodule\u003etinyai-dl-nnet\u003c/module\u003e\n    \u003cmodule\u003etinyai-dl-ml\u003c/module\u003e\n    \u003cmodule\u003etinyai-dl-rl\u003c/module\u003e\n    \u003cmodule\u003etinyai-dl-cv\u003c/module\u003e\n    \u003cmodule\u003etinyai-dl-case\u003c/module\u003e\n\n    \u003c!-- 模型层 --\u003e\n    \u003cmodule\u003etinyai-model-deepseek\u003c/module\u003e\n    \u003cmodule\u003etinyai-model-lora\u003c/module\u003e\n    \u003cmodule\u003etinyai-model-gpt\u003c/module\u003e\n    \u003cmodule\u003etinyai-model-moe\u003c/module\u003e\n\n    \u003c!-- 智能体 --\u003e\n    \u003cmodule\u003etinyai-agent-base\u003c/module\u003e\n    \u003cmodule\u003etinyai-agent-rag\u003c/module\u003e\n    \u003cmodule\u003etinyai-agent-multi\u003c/module\u003e\n    \u003cmodule\u003etinyai-agent-pattern\u003c/module\u003e\n    \u003cmodule\u003etinyai-agent-evol\u003c/module\u003e\n\u003c/modules\u003e\n```\n\n### 外部依赖\n- **jfreechart**：用于训练过程的可视化\n- **junit**：单元测试框架\n- **junit-jupiter**：JUnit 5测试框架\n\n### 集成点\n- **模型序列化**：支持模型的保存和加载\n- **训练监控**：提供训练过程的实时监控和可视化\n- **并行训练**：支持多线程并行训练以提高效率\n- **智能体交互**：提供智能体之间的通信和协作机制\n\n### 组件关系图\n```mermaid\ngraph LR\n    A[数据处理] --\u003e B[模型定义]\n    B --\u003e C[训练过程]\n    C --\u003e D[评估系统]\n    D --\u003e E[模型保存]\n    E --\u003e F[部署应用]\n    \n    G[智能体基础] --\u003e H[多智能体]\n    G --\u003e I[RAG系统]\n    G --\u003e J[自进化]\n    G --\u003e K[模式识别]\n    \n    L[模型实现] --\u003e M[GPT]\n    L --\u003e N[DeepSeek]\n    L --\u003e O[LoRA]\n    L --\u003e P[MoE]\n```\n\n## 4. 关键特性\n\n### 功能概述\nTinyAI框架提供了丰富的功能特性，涵盖了深度学习的各个方面：\n\n- **基础计算**：多维数组操作、自动微分、计算图管理\n- **神经网络**：各种神经网络层、模型组合、参数管理\n- **训练优化**：多种优化器、学习率调度、正则化技术\n- **模型评估**：准确率、损失函数、性能指标\n- **智能体系统**：单智能体、多智能体、自进化智能体\n- **前沿模型**：GPT、DeepSeek、LoRA、MoE等大模型支持\n\n### 实现亮点\n- **动态计算图**：支持灵活的模型构建和调试\n- **自动微分**：实现高效的梯度计算和反向传播\n- **并行训练**：支持多线程并行训练以提高训练效率\n- **模型序列化**：提供多种模型保存和加载方式\n- **智能监控**：内置训练监控和可视化功能\n\n### 特性架构图\n```mermaid\nstateDiagram-v2\n    [*] --\u003e 初始化\n    初始化 --\u003e 数据准备\n    数据准备 --\u003e 模型构建\n    模型构建 --\u003e 训练循环\n    训练循环 --\u003e 前向传播\n    前向传播 --\u003e 损失计算\n    损失计算 --\u003e 反向传播\n    反向传播 --\u003e 参数更新\n    参数更新 --\u003e 训练循环\n    训练循环 --\u003e 评估模型\n    评估模型 --\u003e 保存模型\n    保存模型 --\u003e [*]\n```\n\nSources:\n- [README.md](/Users/yefei.yf/Qoder/TinyAI/README.md)\n- [pom.xml](/Users/yefei.yf/Qoder/TinyAI/pom.xml)\n- [Model.java](/Users/yefei.yf/Qoder/TinyAI/tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Model.java)\n- [Trainer.java](/Users/yefei.yf/Qoder/TinyAI/tinyai-dl-ml/src/main/java/io/leavesfly/tinyai/ml/Trainer.java)\n- [Variable.java](/Users/yefei.yf/Qoder/TinyAI/tinyai-dl-func/src/main/java/io/leavesfly/tinyai/func/Variable.java)\n- [Block.java](/Users/yefei.yf/Qoder/TinyAI/tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Block.java)\n- [Layer.java](/Users/yefei.yf/Qoder/TinyAI/tinyai-dl-nnet/src/main/java/io/leavesfly/tinyai/nnet/Layer.java)\n- [LLMSimulator.java](/Users/yefei.yf/Qoder/TinyAI/tinyai-agent-base/src/main/java/io/leavesfly/tinyai/agent/LLMSimulator.java)\n- [RAGSystem.java](/Users/yefei.yf/Qoder/TinyAI/tinyai-agent-rag/src/main/java/io/leavesfly/tinyai/agent/rag/RAGSystem.java)\n- [SelfEvolvingAgent.java](/Users/yefei.yf/Qoder/TinyAI/tinyai-agent-evol/src/main/java/io/leavesfly/tinyai/agent/evol/SelfEvolvingAgent.java)\n\u003c/blog\u003e","gmt_create":"2025-10-02T11:52:26.690894+08:00","gmt_modified":"2025-10-02T11:52:26.690894+08:00","id":"2f599939-3c29-428d-8dfb-5977c97dfc6c","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e"},"wiki_readme":{"content":"No readme file","gmt_create":"2025-10-02T11:51:04.284267+08:00","gmt_modified":"2025-10-02T11:51:04.284268+08:00","id":"0e5cd110-58a3-466a-9b58-e9838b7fbbcf","repo_id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e"},"wiki_repo":{"id":"ba4f71d6-8ac0-4204-9a7d-92452be6cd9e","name":"TinyAI","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── tinyai-agent-base\\n│   ├── doc\\n│   │   └── agent_mem.txt\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/agent\\n│   │   │   ├── AdvancedAgent.java\\n│   │   │   ├── AgentDemo.java\\n│   │   │   ├── AgentHelper.java\\n│   │   │   ├── ContextEngine.java\\n│   │   │   ├── Document.java\\n│   │   │   ├── LLMSimulator.java\\n│   │   │   ├── LLMSimulatorDemo.java\\n│   │   │   ├── Memory.java\\n│   │   │   ├── MemoryManager.java\\n│   │   │   ├── Message.java\\n│   │   │   ├── RAGSystem.java\\n│   │   │   ├── RetrievalResult.java\\n│   │   │   ├── SimpleEmbedding.java\\n│   │   │   ├── SimplifiedAdvancedAgent.java\\n│   │   │   ├── SimplifiedAgentDemo.java\\n│   │   │   ├── ToolCall.java\\n│   │   │   └── ToolRegistry.java\\n│   │   └── test/java/io/leavesfly/tinyai/agent\\n│   │       └── AdvancedAgentTest.java\\n│   ├── README.md\\n│   └── pom.xml\\n├── tinyai-agent-evol\\n│   ├── doc\\n│   │   ├── README.md\\n│   │   └── evol.txt\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/agent/evol\\n│   │   │   ├── EvolDemo.java\\n│   │   │   ├── Experience.java\\n│   │   │   ├── KnowledgeGraph.java\\n│   │   │   ├── ReflectionModule.java\\n│   │   │   ├── SelfEvolvingAgent.java\\n│   │   │   └── Strategy.java\\n│   │   └── test/java/io/leavesfly/tinyai/agent/evol\\n│   │       └── SelfEvolvingAgentTest.java\\n│   ├── README.md\\n│   └── pom.xml\\n├── tinyai-agent-multi\\n│   ├── doc\\n│   │   ├── README_MultiAgent.md\\n│   │   └── multi_agent.txt\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/agent/multi\\n│   │   │   ├── AgentMessage.java\\n│   │   │   ├── AgentMetrics.java\\n│   │   │   ├── AgentState.java\\n│   │   │   ├── AgentTask.java\\n│   │   │   ├── AnalystAgent.java\\n│   │   │   ├── BaseAgent.java\\n│   │   │   ├── CoordinatorAgent.java\\n│   │   │   ├── CriticAgent.java\\n│   │   │   ├── ExecutorAgent.java\\n│   │   │   ├── MessageBus.java\\n│   │   │   ├── MessageType.java\\n│   │   │   ├── MultiAgentDemo.java\\n│   │   │   ├── MultiAgentSystem.java\\n│   │   │   ├── QuickDemo.java\\n│   │   │   ├── ResearcherAgent.java\\n│   │   │   └── TaskStatus.java\\n│   │   └── test/java/io/leavesfly/tinyai/agent/multi\\n│   │       └── MultiAgentSystemTest.java\\n│   └── pom.xml\\n├── tinyai-agent-pattern\\n│   ├── doc\\n│   │   ├── IMPLEMENTATION_SUMMARY.md\\n│   │   ├── README.md\\n│   │   └── pattern.py\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/agent/pattern\\n│   │   │   ├── Action.java\\n│   │   │   ├── AgentPatternDemo.java\\n│   │   │   ├── AgentPatternMain.java\\n│   │   │   ├── AgentState.java\\n│   │   │   ├── BaseAgent.java\\n│   │   │   ├── CollaborativeAgent.java\\n│   │   │   ├── PlanningAgent.java\\n│   │   │   ├── QuickDemo.java\\n│   │   │   ├── ReActAgent.java\\n│   │   │   ├── ReflectAgent.java\\n│   │   │   ├── SampleTools.java\\n│   │   │   └── Step.java\\n│   │   └── test/java/io/leavesfly/tinyai/agent/pattern\\n│   │       └── AgentPatternTest.java\\n│   └── pom.xml\\n├── tinyai-agent-rag\\n│   ├── doc\\n│   │   ├── RAG_Java实现总结.md\\n│   │   └── rag.py\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/agent/rag\\n│   │   │   ├── Document.java\\n│   │   │   ├── QueryResult.java\\n│   │   │   ├── RAGSystem.java\\n│   │   │   ├── RagDemo.java\\n│   │   │   ├── SimpleTokenizer.java\\n│   │   │   ├── TFIDFVectorizer.java\\n│   │   │   ├── VectorDatabase.java\\n│   │   │   └── VectorSimilarity.java\\n│   │   └── test/java/io/leavesfly/tinyai/agent/rag\\n│   │       └── TestRag.java\\n│   └── pom.xml\\n├── tinyai-dl-case\\n│   ├── src/main/java/io/leavesfly/tinyai/example\\n│   │   ├── classify\\n│   │   │   ├── MnistMlpExam.java\\n│   │   │   └── SpiralMlpExam.java\\n│   │   ├── cv\\n│   │   │   └── SimpleConvNetExample.java\\n│   │   ├── embedd\\n│   │   │   └── EmbeddingFullExample.java\\n│   │   ├── parallel\\n│   │   │   └── ParallelTrainingTest.java\\n│   │   ├── regress\\n│   │   │   ├── LineExam.java\\n│   │   │   ├── MlpSinExam.java\\n│   │   │   └── RnnCosExam.java\\n│   │   ├── rl\\n│   │   │   ├── CartPoleDQNExample.java\\n│   │   │   ├── GridWorldREINFORCEExample.java\\n│   │   │   ├── MultiArmedBanditExample.java\\n│   │   │   └── RLAlgorithmComparison.java\\n│   │   ├── rnn\\n│   │   │   └── CompleteRnnExample.java\\n│   │   ├── ModelSerializationExample.java\\n│   │   └── MonitorExample.java\\n│   └── pom.xml\\n├── tinyai-dl-cv\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/cv\\n│   │   │   ├── SimpleConvNet.java\\n│   │   │   └── SimpleConvNetDemo.java\\n│   │   └── test/java/io/leavesfly/tinyai/cv\\n│   │       └── SimpleConvNetTest.java\\n│   └── pom.xml\\n├── tinyai-dl-func\\n│   ├── doc\\n│   │   └── 测试修复报告.md\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai\\n│   │   │   ├── func\\n│   │   │   │   ├── base\\n│   │   │   │   │   ├── Add.java\\n│   │   │   │   │   ├── Div.java\\n│   │   │   │   │   ├── Mul.java\\n│   │   │   │   │   ├── Neg.java\\n│   │   │   │   │   └── Sub.java\\n│   │   │   │   ├── loss\\n│   │   │   │   │   ├── MeanSE.java\\n│   │   │   │   │   ├── SigmoidCE.java\\n│   │   │   │   │   └── SoftmaxCE.java\\n│   │   │   │   ├── math\\n│   │   │   │   │   ├── Clip.java\\n│   │   │   │   │   ├── Cos.java\\n│   │   │   │   │   ├── Exp.java\\n│   │   │   │   │   ├── GELU.java\\n│   │   │   │   │   ├── Log.java\\n│   │   │   │   │   ├── Max.java\\n│   │   │   │   │   ├── Min.java\\n│   │   │   │   │   ├── Pow.java\\n│   │   │   │   │   ├── ReLu.java\\n│   │   │   │   │   ├── Sigmoid.java\\n│   │   │   │   │   ├── Sin.java\\n│   │   │   │   │   ├── Squ.java\\n│   │   │   │   │   └── Tanh.java\\n│   │   │   │   ├── matrix\\n│   │   │   │   │   ├── BroadcastTo.java\\n│   │   │   │   │   ├── GetItem.java\\n│   │   │   │   │   ├── Linear.java\\n│   │   │   │   │   ├── MatMul.java\\n│   │   │   │   │   ├── Reshape.java\\n│   │   │   │   │   ├── SoftMax.java\\n│   │   │   │   │   ├── Sum.java\\n│   │   │   │   │   ├── SumTo.java\\n│   │   │   │   │   └── Transpose.java\\n│   │   │   │   ├── Function.java\\n│   │   │   │   ├── Util.java\\n│   │   │   │   └── Variable.java\\n│   │   │   └── util\\n│   │   │       └── Config.java\\n│   │   └── test/java/io/leavesfly/tinyai/func\\n│   │       ├── base\\n│   │       │   └── BaseOperationsTest.java\\n│   │       ├── loss\\n│   │       │   └── LossFunctionsTest.java\\n│   │       ├── math\\n│   │       │   └── MathFunctionsTest.java\\n│   │       ├── matrix\\n│   │       │   └── MatrixOperationsTest.java\\n│   │       ├── FunctionOptimizationTest.java\\n│   │       └── VariableTest.java\\n│   └── pom.xml\\n├── tinyai-dl-ml\\n│   ├── doc\\n│   │   ├── MaskedSoftmaxCELoss_实现报告.md\\n│   │   ├── ModelSerializer_ParameterManager_实现报告.md\\n│   │   ├── TinyDL并行训练改造总结.md\\n│   │   ├── 单元测试修复报告.md\\n│   │   ├── 单元测试完善报告.md\\n│   │   └── 模型序列化功能说明.md\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/ml\\n│   │   │   ├── dataset\\n│   │   │   │   ├── simple\\n│   │   │   │   │   ├── CosDataSet.java\\n│   │   │   │   │   ├── MnistDataSet.java\\n│   │   │   │   │   ├── SinDataSet.java\\n│   │   │   │   │   ├── SpiralDateSet.java\\n│   │   │   │   │   └── Word2VecDataSet.java\\n│   │   │   │   ├── ArrayDataset.java\\n│   │   │   │   ├── Batch.java\\n│   │   │   │   ├── DataSet.java\\n│   │   │   │   └── StreamDataset.java\\n│   │   │   ├── evaluator\\n│   │   │   │   ├── AccuracyEval.java\\n│   │   │   │   ├── Evaluator.java\\n│   │   │   │   └── RegressEval.java\\n│   │   │   ├── inference\\n│   │   │   │   ├── ImageTranslator.java\\n│   │   │   │   ├── Predictor.java\\n│   │   │   │   └── Translator.java\\n│   │   │   ├── loss\\n│   │   │   │   ├── Classify.java\\n│   │   │   │   ├── Loss.java\\n│   │   │   │   ├── MaskedSoftmaxCELoss.java\\n│   │   │   │   ├── MeanSquaredLoss.java\\n│   │   │   │   └── SoftmaxCrossEntropy.java\\n│   │   │   ├── optimize\\n│   │   │   │   ├── Adam.java\\n│   │   │   │   ├── Optimizer.java\\n│   │   │   │   └── SGD.java\\n│   │   │   ├── parallel\\n│   │   │   │   ├── GradientAggregator.java\\n│   │   │   │   ├── ParallelBatchProcessor.java\\n│   │   │   │   └── ParallelTrainingUtils.java\\n│   │   │   ├── Model.java\\n│   │   │   ├── ModelInfo.java\\n│   │   │   ├── ModelInfoExporter.java\\n│   │   │   ├── ModelSerializer.java\\n│   │   │   ├── Monitor.java\\n│   │   │   ├── ParameterManager.java\\n│   │   │   ├── Plot.java\\n│   │   │   └── Trainer.java\\n│   │   └── test/java/io/leavesfly/tinyai/ml\\n│   │       ├── dataset\\n│   │       │   ├── DatasetTest.java\\n│   │       │   └── StreamDatasetTest.java\\n│   │       ├── evaluator\\n│   │       │   └── EvaluatorTest.java\\n│   │       ├── inference\\n│   │       │   └── InferenceTest.java\\n│   │       ├── loss\\n│   │       │   ├── LossTest.java\\n│   │       │   └── MaskedSoftmaxCELossDemo.java\\n│   │       ├── optimize\\n│   │       │   └── OptimizerTest.java\\n│   │       ├── ModelSerializerTest.java\\n│   │       ├── ParameterManagerTest.java\\n│   │       └── SerializationDemo.java\\n│   └── pom.xml\\n├── tinyai-dl-ndarr\\n│   ├── doc\\n│   │   └── 测试完善报告.md\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/ndarr\\n│   │   │   ├── cpu\\n│   │   │   │   ├── NdArrayCpu.java\\n│   │   │   │   └── ShapeCpu.java\\n│   │   │   ├── gpu\\n│   │   │   │   ├── NdArrayGpu.java\\n│   │   │   │   └── ShapeGpu.java\\n│   │   │   ├── tpu\\n│   │   │   │   ├── NdArrayTpu.java\\n│   │   │   │   └── ShapeTpu.java\\n│   │   │   ├── NdArray.java\\n│   │   │   ├── NdArrayUtil.java\\n│   │   │   └── Shape.java\\n│   │   └── test/java/io/leavesfly/tinyai/ndarr\\n│   │       ├── NdArrayTest.java\\n│   │       ├── NdArrayUtilTest.java\\n│   │       ├── ShapeTest.java\\n│   │       ├── TestBroadcast.java\\n│   │       ├── TestBroadcastTo.java\\n│   │       └── TestMean.java\\n│   └── pom.xml\\n├── tinyai-dl-nnet\\n│   ├── doc\\n│   │   ├── LSTM_batch_fix_report.md\\n│   │   ├── block测试完善报告.md\\n│   │   ├── seq2seq测试完善报告.md\\n│   │   └── transformer测试完善报告.md\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/nnet\\n│   │   │   ├── block\\n│   │   │   │   ├── seq2seq\\n│   │   │   │   │   ├── Decoder.java\\n│   │   │   │   │   ├── Encoder.java\\n│   │   │   │   │   ├── EncoderDecoder.java\\n│   │   │   │   │   ├── Seq2SeqDecoder.java\\n│   │   │   │   │   └── Seq2SeqEncoder.java\\n│   │   │   │   ├── transformer\\n│   │   │   │   │   ├── Transformer.java\\n│   │   │   │   │   ├── TransformerDecoder.java\\n│   │   │   │   │   └── TransformerEncoder.java\\n│   │   │   │   ├── GruBlock.java\\n│   │   │   │   ├── LstmBlock.java\\n│   │   │   │   ├── MlpBlock.java\\n│   │   │   │   ├── SequentialBlock.java\\n│   │   │   │   └── SimpleRnnBlock.java\\n│   │   │   ├── layer\\n│   │   │   │   ├── activate\\n│   │   │   │   │   ├── ReLuLayer.java\\n│   │   │   │   │   ├── SigmoidLayer.java\\n│   │   │   │   │   ├── SoftMaxLayer.java\\n│   │   │   │   │   └── TanhLayer.java\\n│   │   │   │   ├── cnn\\n│   │   │   │   │   ├── Col2ImUtil.java\\n│   │   │   │   │   ├── ConvLayer.java\\n│   │   │   │   │   ├── DepthwiseSeparableConvLayer.java\\n│   │   │   │   │   ├── Im2ColUtil.java\\n│   │   │   │   │   └── PoolingLayer.java\\n│   │   │   │   ├── dnn\\n│   │   │   │   │   ├── AffineLayer.java\\n│   │   │   │   │   └── LinearLayer.java\\n│   │   │   │   ├── embedd\\n│   │   │   │   │   └── Embedding.java\\n│   │   │   │   ├── norm\\n│   │   │   │   │   ├── BatchNorm.java\\n│   │   │   │   │   ├── Dropout.java\\n│   │   │   │   │   └── Flatten.java\\n│   │   │   │   ├── rnn\\n│   │   │   │   │   ├── GruLayer.java\\n│   │   │   │   │   ├── LstmLayer.java\\n│   │   │   │   │   └── SimpleRnnLayer.java\\n│   │   │   │   └── transformer\\n│   │   │   │       ├── FeedForward.java\\n│   │   │   │       ├── LayerNorm.java\\n│   │   │   │       ├── MultiHeadAttention.java\\n│   │   │   │       ├── PositionalEncoding.java\\n│   │   │   │       ├── TransformerDecoderLayer.java\\n│   │   │   │       └── TransformerEncoderLayer.java\\n│   │   │   ├── Block.java\\n│   │   │   ├── Layer.java\\n│   │   │   ├── LayerAble.java\\n│   │   │   ├── Parameter.java\\n│   │   │   ├── RnnLayer.java\\n│   │   │   └── Uml.java\\n│   │   └── test/java/io/leavesfly/tinyai/nnet\\n│   │       ├── block\\n│   │       │   ├── seq2seq\\n│   │       │   │   ├── DecoderTest.java\\n│   │       │   │   ├── EncoderDecoderTest.java\\n│   │       │   │   ├── EncoderTest.java\\n│   │       │   │   ├── Seq2SeqDecoderTest.java\\n│   │       │   │   └── Seq2SeqEncoderTest.java\\n│   │       │   ├── GruBlockTest.java\\n│   │       │   ├── LstmBlockTest.java\\n│   │       │   ├── MlpBlockTest.java\\n│   │       │   ├── SequentialBlockTest.java\\n│   │       │   └── SimpleRnnBlockTest.java\\n│   │       ├── layer\\n│   │       │   ├── activate\\n│   │       │   │   ├── ReLuLayerTest.java\\n│   │       │   │   ├── SigmoidLayerTest.java\\n│   │       │   │   ├── SoftMaxLayerTest.java\\n│   │       │   │   └── TanhLayerTest.java\\n│   │       │   ├── cnn\\n│   │       │   │   ├── ConvLayerTest.java\\n│   │       │   │   ├── DepthwiseSeparableConvLayerTest.java\\n│   │       │   │   └── PoolingLayerTest.java\\n│   │       │   ├── dnn\\n│   │       │   │   ├── AffineLayerTest.java\\n│   │       │   │   └── LinearLayerTest.java\\n│   │       │   ├── norm\\n│   │       │   │   ├── BatchNormSimpleTest.java\\n│   │       │   │   ├── BatchNormTest.java\\n│   │       │   │   ├── DropoutTest.java\\n│   │       │   │   └── FlattenTest.java\\n│   │       │   ├── rnn\\n│   │       │   │   ├── GruLayerTest.java\\n│   │       │   │   ├── LstmLayerTest.java\\n│   │       │   │   └── SimpleRnnLayerTest.java\\n│   │       │   └── transformer\\n│   │       │       ├── FeedForwardTest.java\\n│   │       │       ├── GPT2OutputHeadTest.java\\n│   │       │       ├── GPT2TokenEmbeddingTest.java\\n│   │       │       ├── LayerNormTest.java\\n│   │       │       ├── MultiHeadAttentionTest.java\\n│   │       │       ├── PositionalEncodingTest.java\\n│   │       │       ├── TransformerDecoderLayerTest.java\\n│   │       │       └── TransformerEncoderLayerTest.java\\n│   │       ├── TestLayerNorm.java\\n│   │       └── TestLayerNormForward.java\\n│   └── pom.xml\\n├── tinyai-dl-rl\\n│   ├── doc\\n│   │   ├── TinyDL多臂老虎机算法实现总结.md\\n│   │   ├── TinyDL强化学习模块使用手册.md\\n│   │   └── 单元测试完善报告.md\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/rl\\n│   │   │   ├── agent\\n│   │   │   │   ├── BanditAgent.java\\n│   │   │   │   ├── DQNAgent.java\\n│   │   │   │   ├── EpsilonGreedyBanditAgent.java\\n│   │   │   │   ├── REINFORCEAgent.java\\n│   │   │   │   ├── ThompsonSamplingBanditAgent.java\\n│   │   │   │   └── UCBBanditAgent.java\\n│   │   │   ├── environment\\n│   │   │   │   ├── CartPoleEnvironment.java\\n│   │   │   │   ├── GridWorldEnvironment.java\\n│   │   │   │   └── MultiArmedBanditEnvironment.java\\n│   │   │   ├── policy\\n│   │   │   │   └── EpsilonGreedyPolicy.java\\n│   │   │   ├── Agent.java\\n│   │   │   ├── Environment.java\\n│   │   │   ├── Experience.java\\n│   │   │   ├── Policy.java\\n│   │   │   └── ReplayBuffer.java\\n│   │   └── test/java/io/leavesfly/tinyai/rl\\n│   │       ├── agent\\n│   │       │   ├── EpsilonGreedyBanditAgentTest.java\\n│   │       │   └── UCBBanditAgentTest.java\\n│   │       ├── environment\\n│   │       │   └── MultiArmedBanditEnvironmentTest.java\\n│   │       ├── policy\\n│   │       │   └── EpsilonGreedyPolicyTest.java\\n│   │       ├── ExperienceTest.java\\n│   │       ├── RLIntegrationTest.java\\n│   │       └── ReplayBufferTest.java\\n│   └── pom.xml\\n├── tinyai-model-deepseek\\n│   ├── doc\\n│   │   ├── README_v3.md\\n│   │   ├── r1.txt\\n│   │   ├── v3.txt\\n│   │   └── 验证报告.md\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/deepseek\\n│   │   │   ├── r1\\n│   │   │   │   ├── DeepSeekR1Block.java\\n│   │   │   │   ├── DeepSeekR1Demo.java\\n│   │   │   │   ├── DeepSeekR1Model.java\\n│   │   │   │   ├── RLTrainer.java\\n│   │   │   │   ├── ReasoningBlock.java\\n│   │   │   │   ├── ReflectionBlock.java\\n│   │   │   │   └── TransformerBlock.java\\n│   │   │   └── v3\\n│   │   │       ├── CodeGenerationBlock.java\\n│   │   │       ├── DeepSeekV3Block.java\\n│   │   │       ├── DeepSeekV3Demo.java\\n│   │   │       ├── DeepSeekV3Model.java\\n│   │   │       ├── ExpertRoutingInfo.java\\n│   │   │       ├── MixtureOfExperts.java\\n│   │   │       ├── TaskType.java\\n│   │   │       ├── V3RLTrainer.java\\n│   │   │       ├── V3ReasoningBlock.java\\n│   │   │       ├── V3ReasoningStep.java\\n│   │   │       └── V3TransformerBlock.java\\n│   │   └── test/java/io/leavesfly/tinyai/deepseek\\n│   │       ├── r1\\n│   │       │   └── DeepSeekR1Test.java\\n│   │       └── v3\\n│   │           └── DeepSeekV3Test.java\\n│   ├── README.md\\n│   └── pom.xml\\n├── tinyai-model-gpt\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/gpt\\n│   │   │   ├── GPT2Block.java\\n│   │   │   ├── GPT2Example.java\\n│   │   │   ├── GPT2Model.java\\n│   │   │   ├── GPT2ModelDemo.java\\n│   │   │   ├── GPT2OutputHead.java\\n│   │   │   ├── GPT2TextDataset.java\\n│   │   │   ├── GPT2TokenEmbedding.java\\n│   │   │   ├── SimpleTokenizer.java\\n│   │   │   ├── Word2Vec.java\\n│   │   │   └── Word2VecExample.java\\n│   │   └── test/java/io/leavesfly/tinyai/gpt\\n│   │       └── GPT2ModelTest.java\\n│   └── pom.xml\\n├── tinyai-model-lora\\n│   ├── doc\\n│   │   └── LoRA实现说明.md\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/lora\\n│   │   │   ├── LoraAdapter.java\\n│   │   │   ├── LoraConfig.java\\n│   │   │   ├── LoraDemo.java\\n│   │   │   ├── LoraLinearLayer.java\\n│   │   │   └── LoraModel.java\\n│   │   └── test/java/io/leavesfly/tinyai/lora\\n│   │       ├── LoraAdapterTest.java\\n│   │       ├── LoraConfigTest.java\\n│   │       ├── LoraLinearLayerTest.java\\n│   │       └── LoraModelTest.java\\n│   └── pom.xml\\n├── tinyai-model-moe\\n│   ├── doc\\n│   │   └── MoE实现说明.md\\n│   ├── src\\n│   │   ├── main/java/io/leavesfly/tinyai/nlp\\n│   │   │   ├── moe\\n│   │   │   │   ├── Expert.java\\n│   │   │   │   ├── GateNetwork.java\\n│   │   │   │   ├── MoELayer.java\\n│   │   │   │   └── MoETransformerBlock.java\\n│   │   │   ├── MoEGPTExample.java\\n│   │   │   ├── MoEGPTModel.java\\n│   │   │   └── MoEGPTModelDemo.java\\n│   │   └── test/java/io/leavesfly/tinyai/nlp\\n│   │       └── MoEGPTModelSimpleTest.java\\n│   └── pom.xml\\n├── README.md\\n└── pom.xml\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"5cdaa5b9f2c2264feac8e6d0a8f04d0afed724a4","last_commit_update":"2025-10-02T11:44:48+08:00","gmt_create":"2025-09-28T01:37:14.087395+08:00","gmt_modified":"2025-10-02T12:52:33.65272+08:00","extend_info":"{\"language\":\"zh\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}